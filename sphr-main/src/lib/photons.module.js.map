{"version":3,"file":"photons.module.js","sources":["../src/ParticleState.js","../src/ParticleSequence.js","../src/ParticleSequenceGroup.js","../src/initializer/ParticleStateInitializer.js","../src/initializer/BaseParticleStateInitializer.js","../src/operator/ParticleStateOperator.js","../src/operator/BaseParticleStateOperator.js","../src/util/Utils.js","../src/ComponentContainer.js","../src/ParticleSystem.js","../src/Manager.js","../src/renderer/Renderer.js","../src/renderer/ParticleStateAttributeArray.js","../src/renderer/Atlas.js","../src/renderer/AnimatedSpriteRenderer.js","../src/emitter/ParticleEmitter.js","../src/emitter/ContinuousParticleEmitter.js","../src/emitter/ConstantParticleEmitter.js","../src/util/BuiltIn.js","../src/util/Generator.js","../src/util/RandomGenerator.js","../src/initializer/LifetimeInitializer.js","../src/initializer/RotationInitializer.js","../src/initializer/RotationalSpeedInitializer.js","../src/initializer/BoxPositionInitializer.js","../src/initializer/SizeInitializer.js","../src/initializer/RandomVelocityInitializer.js","../src/initializer/SequenceInitializer.js","../src/operator/SequenceOperator.js","../src/util/ContinuousArray.js","../src/operator/InterpolatorOperator.js","../src/operator/OpacityInterpolatorOperator.js","../src/operator/SizeInterpolatorOperator.js","../src/operator/ColorInterpolatorOperator.js","../src/operator/AccelerationOperator.js","../src/util/SphereRandomGenerator.js","../src/component/Component.js","../src/component/FlickerLight.js","../src/util/JSONTypeStore.js"],"sourcesContent":["import * as THREE from 'three';\n\nexport class ParticleStateProgressType {\n\n    static Time = new ParticleStateProgressType('Time');\n    static Sequence = new ParticleStateProgressType('Sequence');\n\n    constructor(name) {\n        this.name = name;\n    }\n}\n\nexport class ParticleState {\n\n    constructor() {\n        this.init();\n    }\n\n    init() {\n        this.progressType = ParticleStateProgressType.Time;\n        this.lifetime = 1.0;\n        this.age = 0.0;\n        this.sequenceElement = new THREE.Vector4();\n        this.position = new THREE.Vector3();\n        this.velocity = new THREE.Vector3();\n        this.acceleration = new THREE.Vector3();\n        this.normal = new THREE.Vector3();\n        this.rotation = 0.0;\n        this.rotationalSpeed = 0.0;\n        this.size = new THREE.Vector2();\n        this.color = new THREE.Color();\n        this.alpha = 1.0;\n        this.initialSize = new THREE.Vector2();\n        this.initialColor = new THREE.Color();\n        this.initialAlpha = 1.0;\n    }\n\n    setAll(progressType, lifetime, age, sequenceElement, position, velocity, acceleration,\n           normal, rotation, rotationalSpeed, size, color, alpha, initialSize, initialColor, initialAlpha) {\n        this.progressType = progressType;\n        this.lifetime = lifetime;\n        this.age = age;\n        this.sequenceElement.copy(sequenceElement);\n        this.position.copy(position);\n        this.velocity.copy(velocity);\n        this.acceleration.copy(acceleration);\n        this.normal.copy(normal);\n        this.rotation = rotation;\n        this.rotationalSpeed = rotationalSpeed;\n        this.size = size;\n        this.color.copy(color);\n        this.alpha = alpha;\n        this.initialSize.copy(initialSize);\n        this.initialColor.copy(initialColor);\n        this.initialAlpha = initialAlpha;\n    }\n\n    copyTo(dest) {\n        dest.setAll(this.progressType, this.lifetime, this.age, this.sequenceElement, this.position,\n                    this.velocity, this.acceleration, this.normal, this.rotation, this.rotationalSpeed,\n                    this.size, this.color, this.alpha, this.initialSize, this.initialColor, this.initialAlpha);\n    }\n\n    copy(src) {\n        this.setAll(src.progressType, src.lifetime, src.age, src.sequenceElement, src.position,\n                    src.velocity, src.acceleration, src.normal, src.rotation, src.rotationalSpeed,\n                    src.size, src.color, src.alpha, src.initialSize, src.initialColor, src.initialAlpha);\n    }\n}\n\nexport class ParticleStateArray {\n\n    constructor() {\n        this.particleCount = 0;\n        this.activeParticleCount = 0;\n        this.particleStates = [];\n    }\n\n    init(particleCount) {\n        this.setParticleCount(particleCount);\n    }\n\n    setParticleCount(particleCount) {\n        if (this.particleCount != particleCount) {\n            this.dispose();\n            this.allocate(particleCount);\n        }\n        this.particleCount = particleCount;\n    }\n\n    setActiveParticleCount(activeParticleCount) {\n        this.activeParticleCount = activeParticleCount;\n    }\n\n    allocate(particleCount) {\n        this.particleStates = [];\n        this.particleCount = particleCount;\n        for (let i = 0; i < particleCount; i++) this.particleStates[i] = new ParticleState();\n    }\n\n    dispose() {\n    }\n\n    getParticleCount() {\n        return this.particleCount;\n    }\n\n    flushParticleStateToBuffers() {\n    }\n\n    copyState(srcIndex, destIndex) {\n        if (srcIndex >= this.particleCount) {\n            throw new Error('ParticleStateArray::copyState() -> \"srcIndex\" is out of range.');\n        }\n        if (destIndex >= this.particleCount) {\n            throw new Error('ParticleStateArray::copyState() -> \"destIndex\" is out of range.');\n        }\n\n        const srcParticleState = this.particleStates[srcIndex];\n        const destParticleState = this.particleStates[destIndex];\n\n        srcParticleState.copyTo(destParticleState);\n    }\n\n    setState(index, state) {\n        if (index >= this.particleCount) {\n            throw new Error('ParticleStateArray::setState() -> \"index\" is out of range.');\n        }\n        return this.particleStates[index].copy(state);\n    }\n\n    getState(index) {\n        if (index >= this.particleCount) {\n            throw new Error('ParticleStateArray::getState() -> \"index\" is out of range.');\n        }\n        return this.particleStates[index];\n    }\n\n    computeBoundingBox = function() {\n\n        const tempPos = new THREE.Vector3();\n\n        return function(outBox = new THREE.Box3(), positionTransform = null) {\n            const min = outBox.min;\n            const max = outBox.max;\n            for (let i = 0; i < this.activeParticleCount; i++) {\n                const particleState = this.getState(i);\n                let pos = particleState.position;\n                if (positionTransform) {\n                    tempPos.copy(pos);\n                    tempPos.applyMatrix4(positionTransform);\n                    pos = tempPos;\n                }\n                const maxExtent = Math.max(particleState.size.x, particleState.size.y);\n                const lowerX = pos.x - maxExtent;\n                const upperX = pos.x + maxExtent;\n                const lowerY = pos.y - maxExtent;\n                const upperY = pos.y + maxExtent;\n                const lowerZ = pos.z - maxExtent;\n                const upperZ = pos.z + maxExtent;\n                if (i == 0 || pos.x < min.x) min.x = lowerX;\n                if (i == 0 || pos.x > max.x) max.x = upperX;\n                if (i == 0 || pos.y < min.y) min.y = lowerY;\n                if (i == 0 || pos.y > max.y) max.y = upperY;\n                if (i == 0 || pos.z < min.z) min.z = lowerZ;\n                if (i == 0 || pos.z > max.z) max.z = upperZ;\n            }\n            return outBox;\n        };\n\n    }();\n\n    computeBoundingSphere = function() {\n\n        const tempCenter = new THREE.Vector3();\n        const tempVector = new THREE.Vector3();\n        const tempPos = new THREE.Vector3();\n\n        return function(outSphere = new THREE.Sphere(), positionTransform = null) {\n            let radius = 0;\n            for (let i = 0; i < this.activeParticleCount; i++) {\n                const particleState = this.getState(i);\n                let pos = particleState.position;\n                if (positionTransform) {\n                    tempPos.copy(pos);\n                    tempPos.applyMatrix4(positionTransform);\n                    pos = tempPos;\n                }\n                const maxExtent = Math.max(particleState.size.x, particleState.size.y);\n                if (i == 0) {\n                    tempCenter.copy(pos);\n                    radius = maxExtent;\n                } else {\n                    tempVector.copy(pos).sub(tempCenter);\n                    const distFromCenter = tempVector.length() + maxExtent;\n                    if (distFromCenter > radius) {\n                        const diff = distFromCenter - radius;\n                        const adjustDiff = diff / 2;\n                        tempVector.normalize().multiplyScalar(adjustDiff);\n                        tempCenter.add(tempVector);\n                        radius += adjustDiff;\n                    }\n                }\n            }\n            outSphere.center.copy(tempCenter);\n            outSphere.radius = radius;\n\n            return outSphere;\n        };\n\n    }();\n}\n","export class ParticleSequence {\n\n    constructor(start, length, id = 0) {\n        this.start = start;\n        this.length = length;\n        this.id = id;\n    }\n\n}\n","import { ParticleSequence } from './ParticleSequence.js';\n\nexport class ParticleSequenceGroup {\n\n    constructor() {\n        this.sequences = {};\n        this.ids = [];\n    }\n\n    addSequence(start, length, id) {\n        if (this.hasID(id)) {\n            throw new Error('ParticleSequenceGroup::addParticleSequence -> Tried to add sequence with duplicate ID.');\n        }\n\n        const sequence = new ParticleSequence(start, length, id);\n        this.sequences[id] = sequence;\n        this.ids.push(id);\n        return sequence;\n    }\n\n    getSequence(id) {\n        if (!this.hasID(id)) {\n            throw new Error('ParticleSequenceGroup::getSequence -> Invalid ID.');\n        }\n        return this.sequences[id];\n    }\n\n    getSequenceIDs() {\n        return this.ids;\n    }\n\n    hasID(id) {\n        if (!this.sequences[id]) return false;\n        return true;\n    }\n\n}\n","import { ParticleStateProgressType } from '../ParticleState.js';\n\nexport class ParticleStateInitializer {\n\n    constructor() {\n    }\n\n    initializeState(state) {\n        state.initialColor.set(1.0, 1.0, 1.0);\n        state.initialSize.set(1.0, 1.0);\n        state.initialAlpha = 1.0;\n        state.progressType = ParticleStateProgressType.Time;\n        state.lifetime = 0.0;\n        state.age = 0.0;\n        state.sequenceElement.set(0, 0, 0, 0);\n        state.position.set(0.0, 0.0, 0.0);\n        state.velocity.set(0.0, 0.0, 0.0);\n        state.acceleration.set(0.0, 0.0, 0.0);\n        state.normal.set(0.0, 0.0, 1.0);\n        state.rotation = 0.0;\n        state.rotationalSpeed = 0.0;\n        state.size.copy(state.initialSize);\n        state.color.copy(state.initialColor);\n        state.alpha = 1.0;\n    }\n\n}\n","import { ParticleStateInitializer } from './ParticleStateInitializer.js';\n\nexport class BaseParticleStateInitializer extends ParticleStateInitializer {\n\n    constructor() {\n        super();\n    }\n\n    initializeState(state) {\n        super.initializeState(state);\n    }\n\n}\n","export class ParticleStateOperator {\n\n    constructor() {\n    }\n\n    updateState() {\n    }\n\n}\n","import * as THREE from 'three';\nimport { ParticleStateOperator } from './ParticleStateOperator.js';\n\nexport class BaseParticleStateOperator extends ParticleStateOperator {\n\n    constructor() {\n        super();\n        this.timeScaledVelocity = new THREE.Vector3();\n        this.timeScaledAcceleration = new THREE.Vector3();\n        this.stateAcceleration = new THREE.Vector3();\n        this.stateVelocity = new THREE.Vector3();\n    }\n\n    updateState(state, timeDelta) {\n        super.updateState(state, timeDelta);\n        this.stateAcceleration.copy(state.acceleration);\n        this.timeScaledAcceleration.copy(this.stateAcceleration);\n        this.timeScaledAcceleration.multiplyScalar(timeDelta);\n        state.velocity.add(this.timeScaledAcceleration);\n\n        this.stateVelocity.copy(state.velocity);\n        this.timeScaledVelocity.copy(this.stateVelocity);\n        this.timeScaledVelocity.multiplyScalar(timeDelta);\n\n        state.position.add(this.timeScaledVelocity);\n\n        state.age = state.age + timeDelta;\n\n        state.rotation = state.rotation + timeDelta * state.rotationalSpeed;\n        return true;\n    }\n\n}\n","export class Utils {\n\n    static clamp(value, min, max) {\n        return Math.min(Math.max(value, min), max);\n    }\n\n    static currentTime() {\n        return performance.now() / 1000;\n    }\n}\n","export class ComponentContainer {\n\n        constructor() {\n            this.components = [];\n        }\n\n        addComponent(component) {\n            this.components.push(component);\n        }\n\n        update(currentTime, timeDelta) {\n            for (let component of this.components) {\n                component.update(currentTime, timeDelta);\n            }\n        }\n\n        getComponent(index) {\n            if (index >= this.components.length) {\n                throw new Error('ComponentContainer::getComponent() -> \"index\" is out of range.');\n            }\n            return this.components[index];\n        }\n}\n","import * as THREE from 'three';\nimport { ParticleStateArray } from './ParticleState.js';\nimport { ParticleSequenceGroup } from './ParticleSequenceGroup.js';\nimport { BaseParticleStateInitializer } from './initializer/BaseParticleStateInitializer.js';\nimport { BaseParticleStateOperator } from './operator/BaseParticleStateOperator.js';\nimport { Utils } from './util/Utils.js';\nimport { ComponentContainer } from './ComponentContainer.js';\n\nexport class ParticleSystemState {\n\n    static NotStarted = new ParticleSystemState('NotStarted');\n    static Running = new ParticleSystemState('Running');\n    static Paused = new ParticleSystemState('Paused');\n    static Done = new ParticleSystemState('Done');\n\n    constructor(name) {\n      this.name = name;\n    }\n\n}\n\nexport class ParticleSystem {\n\n    constructor(owner, particleSystemRenderer) {\n        this.owner = owner;\n        this.owner.visible = false;\n        this.visible = true;\n        this.particleSystemRenderer = particleSystemRenderer;\n        this.initialized = false;\n        this.maximumActiveParticles = 0;\n        this.activeParticleCount = 0;\n        this.simulateInWorldSpace = true;\n        this.emitterInitialized = false;\n        this.particleEmitter = null;\n        this.componentContainer = new ComponentContainer();\n        this.particleStateInitializers = [];\n        this.particleStateOperators = [];\n        this.particleStates = null;\n        this.systemState = ParticleSystemState.NotStarted;\n        this.particleSequences = new ParticleSequenceGroup();\n        this.onUpdateCallback = null;\n        this.transformInitialDirectionInWorldSpace = true;\n        this.boundingBox = new THREE.Box3();\n        this.boundingSphere = new THREE.Sphere();\n    }\n\n    init(maximumActiveParticles) {\n        if (!this.initialized) {\n            this.maximumActiveParticles = maximumActiveParticles;\n            if (this.particleSystemRenderer) {\n                this.particleSystemRenderer.setOwner(this.owner);\n                this.particleSystemRenderer.init(this.maximumActiveParticles, this.simulateInWorldSpace);\n                this.particleSystemRenderer.setSimulateInWorldSpace(this.simulateInWorldSpace);\n                this.particleStates = this.particleSystemRenderer.getParticleStateArray();\n            } else {\n                this.particleStates = new ParticleStateArray();\n                this.particleStates.init(this.maximumActiveParticles);\n            }\n            this.addParticleStateInitializer(new BaseParticleStateInitializer());\n            this.addParticleStateOperator(new BaseParticleStateOperator());\n            this.initialized = true;\n        } else {\n            throw new Error('ParticleSystem::init() -> trying to intialize more than once.');\n        }\n    }\n\n    getVisible() {\n        return this.visible;\n    }\n\n    setVisibile(visible) {\n        return this.visible = visible;\n    }\n\n    onUpdate(callback) {\n        this.onUpdateCallback = callback;\n    }\n\n    update(currentTime, timeDelta) {\n        if (this.systemState == ParticleSystemState.Running) {\n            this.owner.updateWorldMatrix(true);\n            currentTime = (currentTime == undefined || currentTime == null) ? Utils.currentTime() : currentTime;\n            timeDelta = (timeDelta == undefined || timeDelta == null) ? currentTime - this.lastUpdateTime : timeDelta;\n            if (this.emitterInitialized && this.systemState == ParticleSystemState.Running) {\n                const particlesToEmit = this.particleEmitter.update(timeDelta);\n                if (particlesToEmit > 0) this.activateParticles(particlesToEmit);\n                this.advanceActiveParticles(timeDelta);\n                if (this.onUpdateCallback) this.onUpdateCallback(this.activeParticleCount);\n\n                // TODO: Be more efficient about re-computing bounds\n                this.updateBounds();\n            }\n            this.componentContainer.update(currentTime, timeDelta);\n            this.lastUpdateTime = currentTime;\n        }\n    }\n\n    render(threeRenderer, camera) {\n        if (this.getVisible() && this.particleSystemRenderer) {\n            const saveAutoClear = threeRenderer.autoClear;\n            threeRenderer.autoClear = false;\n            this.owner.visible = true;\n            this.owner.matrixWorldNeedsUpdate = true;\n            this.particleSystemRenderer.render(this.owner, threeRenderer, camera);\n            this.owner.visible = false;\n            threeRenderer.autoClear = saveAutoClear;\n        }\n    }\n\n    start() {\n        if (this.systemState == ParticleSystemState.NotStarted || this.systemState == ParticleSystemState.Paused) {\n            this.systemState = ParticleSystemState.Running;\n            this.startTime = Utils.currentTime();\n            this.lastUpdateTime = this.startTime;\n        } else {\n            // TODO: Decide how to handle this case\n        }\n    }\n\n    pause() {\n        if (this.systemState == ParticleSystemState.Running) {\n            this.systemState = ParticleSystemState.Paused;\n        }\n    }\n\n    stop() {\n\n    }\n\n    getSystemState() {\n        return this.systemState;\n    }\n\n    setEmitter(emitter) {\n        this.particleEmitter = emitter;\n        this.particleEmitter.maximumActiveParticles = this.maximumActiveParticles;\n        this.emitterInitialized = true;\n        return this.particleEmitter;\n    }\n\n    addComponent(component) {\n        this.componentContainer.addComponent(component);\n    }\n\n    getComponent(index) {\n        return this.componentContainer.getComponent(index);\n    }\n\n    addParticleStateInitializer(initializer) {\n        this.particleStateInitializers.push(initializer);\n        return initializer;\n    }\n\n    getParticleStateInitializerCount() {\n        return this.particleStateInitializers.length;\n    }\n\n    getParticleStateInitializer(index) {\n        if (index >= this.particleStateInitializers.length) {\n            throw new Error('ParticleSystem::getParticleStateInitializer() -> \"index\" is out of range.');\n        }\n        return this.particleStateInitializers[index];\n    }\n\n    addParticleStateOperator(operator) {\n        this.particleStateOperators.push(operator);\n        return operator;\n    }\n\n    getParticleStateOperatorCount() {\n        return this.particleStateOperators.length;\n    }\n\n    getParticleStateOperator(index) {\n        if (index >= this.particleStateOperators.length) {\n            throw new Error('ParticleSystem::getParticleStateOperator() -> \"index\" is out of range.');\n        }\n        return this.particleStateOperators[index];\n    }\n\n    getMaximumActiveParticles() {\n        return this.maximumActiveParticles;\n    }\n\n    getActiveParticleCount() {\n        return this.activeParticleCount;\n    }\n\n    getParticleState(index) {\n        if (index >= this.activeParticleCount) {\n            throw new Error('ParticleSystem::getParticleState() -> \"index\" is out of range.');\n        }\n        return this.particleStates.getState(index);\n    }\n\n    getParticleStates() {\n        return this.particleStates;\n    }\n\n    getParticleSystemRenderer() {\n        return this.particleSystemRenderer;\n    }\n\n    getSimulateInWorldSpace() {\n        return this.simulateInWorldSpace;\n    }\n\n    setSimulateInWorldSpace(simulateInWorldSpace) {\n        this.simulateInWorldSpace = simulateInWorldSpace;\n        if (this.particleSystemRenderer) {\n            this.particleSystemRenderer.setSimulateInWorldSpace(this.simulateInWorldSpace);\n        }\n    }\n\n    setTransformInitialDirectionInWorldSpace(transformInitialDirectionInWorldSpace) {\n        this.transformInitialDirectionInWorldSpace = transformInitialDirectionInWorldSpace;\n    }\n\n    addParticleSequence(start, length, id = 0) {\n        this.particleSequences.addSequence(start, length, id);\n    }\n\n    getParticleSequences() {\n        return this.particleSequences;\n    }\n\n    getEmitter() {\n        return this.particleEmitter;\n    }\n\n    updateBounds = function() {\n\n        const tempMatrix4 = new THREE.Matrix4();\n\n        return function() {\n            let positionTransform = null;\n            if (this.transformInitialDirectionInWorldSpace) {\n                positionTransform = tempMatrix4;\n                positionTransform.copy(this.owner.matrixWorld).invert();\n            }\n            if (this.particleSystemRenderer.calculatingBoundingSphereFromBox()) {\n                this.particleStates.computeBoundingBox(this.boundingBox, positionTransform);\n                this.particleSystemRenderer.setBoundingBox(this.boundingBox);\n            } else {\n                this.particleStates.computeBoundingSphere(this.boundingSphere, positionTransform);\n                this.particleSystemRenderer.setBoundingSphere(this.boundingSphere);\n            }\n        };\n\n    }();\n\n    activateParticles(particleCount) {\n        if (this.systemState == ParticleSystemState.Running) {\n            const newActiveParticleCount = Utils.clamp(this.activeParticleCount + particleCount,\n                                                    0, this.maximumActiveParticles);\n            for (let i = this.activeParticleCount; i < newActiveParticleCount; i++) {\n                this.activateParticle(i);\n            }\n            this.activeParticleCount = newActiveParticleCount;\n            this.particleStates.setActiveParticleCount(this.activeParticleCount);\n        }\n    }\n\n    activateParticle(index) {\n        if (this.systemState == ParticleSystemState.Running) {\n            const particleState = this.particleStates.getState(index);\n            particleState.age = 0.0;\n            for (let i = 0; i < this.particleStateInitializers.length; i++) {\n                const particleStateInitializer = this.particleStateInitializers[i];\n                particleStateInitializer.initializeState(particleState);\n            }\n            if (this.simulateInWorldSpace) {\n                particleState.position.applyMatrix4(this.owner.matrixWorld);\n                const vLength = particleState.velocity.length();\n                if (this.transformInitialDirectionInWorldSpace) {\n                    particleState.velocity.transformDirection(this.owner.matrixWorld).multiplyScalar(vLength);\n                    const aLength = particleState.acceleration.length();\n                    particleState.acceleration.transformDirection(this.owner.matrixWorld).multiplyScalar(aLength);\n                }\n            }\n            this.particleStates.flushParticleStateToBuffers(index);\n        }\n    }\n\n    advanceActiveParticles(timeDelta) {\n        if (this.systemState == ParticleSystemState.Running) {\n            let i = 0;\n            while (i < this.activeParticleCount) {\n                const particleIsActive = this.advanceActiveParticle(i, timeDelta);\n                if (!particleIsActive) {\n                    if (i < this.activeParticleCount - 1) {\n                        this.copyParticleInArray(this.activeParticleCount - 1, i);\n                    }\n                    this.activeParticleCount--;\n                    continue;\n                }\n                i++;\n            }\n            this.particleStates.setActiveParticleCount(this.activeParticleCount);\n        }\n    }\n\n    advanceActiveParticle(index, timeDelta) {\n        if (this.systemState == ParticleSystemState.Running) {\n            const particleState = this.particleStates.getState(index);\n            for (let i = 0; i < this.particleStateOperators.length; i++) {\n                const particleStateOperator = this.particleStateOperators[i];\n                const stillAlive = particleStateOperator.updateState(particleState, timeDelta);\n                const particleLifeTime = particleState.lifetime;\n                if (!stillAlive || particleLifeTime != 0.0 && particleState.age >= particleLifeTime) {\n                    return false;\n                }\n            }\n            this.particleStates.flushParticleStateToBuffers(index);\n            return true;\n        }\n        return false;\n    }\n\n    copyParticleInArray(srcIndex, destIndex) {\n        this.particleStates.copyState(srcIndex, destIndex);\n        this.particleStates.flushParticleStateToBuffers(destIndex);\n    }\n\n    static fromJSON(json, jsonTypeStore, threeRenderer) {\n\n        const traverseJSON = (node, onVisit, visited) => {\n            visited = visited || {};\n            onVisit(node);\n            for (const key in node) {\n                if (node.hasOwnProperty(key)) {\n                    const val = node[key];\n                    if (typeof val == 'object') {\n                        traverseJSON(val, onVisit, visited);\n                    }\n                }\n            }\n        };\n\n        traverseJSON(json, (node) => {\n            if (node.type) {\n                node.type = jsonTypeStore.parseTypeString(node.type);\n            }\n        });\n\n        const maxParticleCount = json.maxParticleCount;\n        const simulateInWorldSpace = json.simulateInWorldSpace;\n\n        const rendererJSON = json.renderer;\n        const renderer = rendererJSON.type.fromJSON(rendererJSON.params);\n\n        const rootObject = new THREE.Object3D();\n        const particleSystem = new ParticleSystem(rootObject, renderer, threeRenderer);\n        particleSystem.init(maxParticleCount);\n        particleSystem.setSimulateInWorldSpace(simulateInWorldSpace);\n\n        const emitterJSON = json.emitter;\n        const emitter = emitterJSON.type.fromJSON(emitterJSON.params);\n        particleSystem.setEmitter(emitter);\n\n        if (json.sequences) {\n            for (const sequenceJSON of json.sequences) {\n                particleSystem.addParticleSequence(sequenceJSON.start, sequenceJSON.length, sequenceJSON.id);\n            }\n        }\n\n        if (json.initializers) {\n            for (const initializerJSON of json.initializers) {\n                particleSystem.addParticleStateInitializer(initializerJSON.type.fromJSON(particleSystem, initializerJSON.params));\n            }\n        }\n\n        if (json.operators) {\n            for (const operatorJSON of json.operators) {\n                const operator =\n                    particleSystem.addParticleStateOperator(operatorJSON.type.fromJSON(particleSystem, operatorJSON.params));\n                if (operatorJSON.elements) {\n                    operator.addElementsFromParameters(operatorJSON.elements);\n                }\n            }\n        }\n\n        return [particleSystem, rootObject];\n    }\n\n    toJSON(jsonTypeStore) {\n        const particleSystemRenderer = this.getParticleSystemRenderer();\n        const particleSystemEmitter = this.getEmitter();\n\n        const particleSequenceGroup = this.getParticleSequences();\n        const sequences = particleSequenceGroup.getSequenceIDs().map((sequenceID) => {\n            const sequence = particleSequenceGroup.getSequence(sequenceID);\n            return {\n                'id': sequenceID,\n                'start': sequence.start,\n                'length': sequence.length\n            };\n        });\n\n        const initializers = [];\n        const initializerCount = this.getParticleStateInitializerCount();\n        for (let i = 0; i < initializerCount; i++) {\n            const initializer = this.getParticleStateInitializer(i);\n            if (initializer.constructor !== BaseParticleStateInitializer) {\n                initializers.push({\n                    'type': jsonTypeStore.getTypePath(initializer.constructor),\n                    'params': initializer.toJSON(jsonTypeStore)\n                });\n            }\n        }\n\n        const operators = [];\n        const operatorCount = this.getParticleStateOperatorCount();\n        for (let i = 0; i < operatorCount; i++) {\n            const operator = this.getParticleStateOperator(i);\n            if (operator.constructor !== BaseParticleStateOperator) {\n                const json = operator.toJSON(jsonTypeStore);\n                const params = json.params || json;\n                const elements = json.params ? json.elements : null;\n                const operatorJSON = {\n                    'type': jsonTypeStore.getTypePath(operator.constructor),\n                    'params': params\n                };\n                if (elements) {\n                    operatorJSON['elements'] = elements;\n                }\n                operators.push(operatorJSON);\n            }\n        }\n\n        const json = {\n            'maxParticleCount': this.getMaximumActiveParticles(),\n            'simulateInWorldSpace': this.getSimulateInWorldSpace(),\n            'renderer': {\n                'type': jsonTypeStore.getTypePath(particleSystemRenderer.constructor),\n                'params': particleSystemRenderer.toJSON()\n            },\n            'emitter': {\n                'type': jsonTypeStore.getTypePath(particleSystemEmitter.constructor),\n                'params': particleSystemEmitter.toJSON()\n            },\n            'sequences': sequences,\n            'initializers': initializers,\n            'operators': operators\n        };\n\n        return json;\n    }\n}\n","import { Utils } from './util/Utils.js';\nimport { ComponentContainer } from './ComponentContainer.js';\nexport class Manager {\n\n    constructor() {\n        this.particleSystems = [];\n        this.startupTime = performance.now() / 1000;\n        this.lastUpdateTime = this.startupTime;\n        this.componentContainer = new ComponentContainer();\n    }\n\n    update() {\n        const currentTime = Utils.currentTime();\n        const timeDelta = currentTime - this.lastUpdateTime;\n        for (let particleSystem of this.particleSystems) {\n            particleSystem.update(currentTime, timeDelta);\n        }\n        this.componentContainer.update(currentTime, timeDelta);\n        this.lastUpdateTime = currentTime;\n    }\n\n    render(threeRenderer, camera) {\n        for (let particleSystem of this.particleSystems) {\n            particleSystem.render(threeRenderer, camera);\n        }\n    }\n\n    addParticleSystem(particleSystem) {\n        this.particleSystems.push(particleSystem);\n    }\n\n    addComponent(component) {\n        this.componentContainer.addComponent(component);\n    }\n\n    getComponent(index) {\n        return this.componentContainer.getComponent(index);\n    }\n\n}\n","export class Renderer {\n\n    constructor() {\n        this.initialized = false;\n        this.particleCount = 0;\n        this.owner = null;\n        this.simulateInWorldSpace = false;\n    }\n\n    setSimulateInWorldSpace(simulateInWorldSpace) {\n        this.simulateInWorldSpace = simulateInWorldSpace;\n    }\n\n    getParticleStateArray() {\n    }\n\n    setOwner(owner) {\n        this.owner = owner;\n    }\n\n    init(particleCount) {\n        this.particleCount = particleCount;\n        if (!this.initialized) {\n            this.initialized = true;\n            return true;\n        } else {\n            throw new Error('Renderer::init() -> trying to intialize more than once.');\n        }\n    }\n\n    render() {\n    }\n\n}\n","import * as THREE from 'three';\nimport { ParticleStateArray } from '../ParticleState.js';\n\nexport class ParticleStateAttributeArray extends ParticleStateArray {\n\n    constructor() {\n        super();\n        this.geometry = null;\n        this.progressTypes = null;\n        this.lifetimes = null;\n        this.ages = null;\n        this.sequenceElements = null;\n        this.positions = null;\n        this.velocities = null;\n        this.accelerations = null;\n        this.normals = null;\n        this.rotations = null;\n        this.rotationalSpeeds = null;\n        this.sizes = null;\n        this.colors = null;\n        this.initialSizes = null;\n        this.initialColors = null;\n        this.instanced = false;\n        this.verticesPerParticle = 6;\n    }\n\n    init(particleCount, instanced = false) {\n        this.instanced = instanced;\n        if (this.instanced) {\n            this.verticesPerParticle = 1;\n        } else {\n            this.verticesPerParticle = 6;\n        }\n        super.init(particleCount);\n        this.allocate(particleCount);\n    }\n\n    setParticleCount(particleCount) {\n        super.setParticleCount(particleCount);\n    }\n\n    setActiveParticleCount(activeParticleCount) {\n        super.setActiveParticleCount(activeParticleCount);\n        if (activeParticleCount > 0) {\n            if (this.instanced) {\n                this.geometry.instanceCount = activeParticleCount;\n            } else {\n                this.geometry.setDrawRange(0, this.verticesPerParticle * activeParticleCount);\n            }\n        } else {\n            if (this.instanced) {\n                this.geometry.instanceCount = 0;\n            } else {\n                this.geometry.setDrawRange(0, 0);\n            }\n        }\n    }\n\n    flushParticleStateToBuffers(index) {\n        if (index >= this.particleCount) {\n            throw new Error('ParticleStateAttributeArray::flushParticleStateToBuffers() -> \"index\" is out of range.');\n        }\n        const particleState = this.getState(index);\n\n        const offset = index * this.verticesPerParticle;\n\n        for (let i = 0; i < this.verticesPerParticle; i++) {\n            this.lifetimes.setX(offset + i, particleState.lifetime);\n            this.lifetimes.needsUpdate = true;\n\n            this.ages.setX(offset + i, particleState.age);\n            this.ages.needsUpdate = true;\n\n            this.sequenceElements.setXYZW(offset + i, particleState.sequenceElement.x, particleState.sequenceElement.y,\n                                                      particleState.sequenceElement.z, particleState.sequenceElement.w);\n            this.sequenceElements.needsUpdate = true;\n\n            this.positions.setXYZ(offset + i, particleState.position.x,\n                                  particleState.position.y, particleState.position.z);\n            this.positions.needsUpdate = true;\n\n            this.velocities.setXYZ(offset + i, particleState.velocity.x,\n                                   particleState.velocity.y, particleState.velocity.z);\n            this.velocities.needsUpdate = true;\n\n            this.accelerations.setXYZ(offset + i, particleState.acceleration.x,\n                                      particleState.acceleration.y, particleState.acceleration.z);\n            this.accelerations.needsUpdate = true;\n\n            this.normals.setXYZ(offset + i, particleState.normal.x, particleState.normal.y, particleState.normal.z);\n            this.normals.needsUpdate = true;\n\n            this.rotations.setX(offset + i, particleState.rotation);\n            this.rotations.needsUpdate = true;\n\n            this.rotationalSpeeds.setX(offset + i, particleState.rotationalSpeed);\n            this.rotationalSpeeds.needsUpdate = true;\n\n            this.sizes.setXY(offset + i, particleState.size.x, particleState.size.y);\n            this.sizes.needsUpdate = true;\n\n            this.colors.setXYZ(offset + i, particleState.color.r, particleState.color.g, particleState.color.b);\n            this.colors.needsUpdate = true;\n\n            this.alphas.setX(offset + i, particleState.alpha);\n            this.alphas.needsUpdate = true;\n\n            this.initialSizes.setXY(offset + i, particleState.initialSize.x, particleState.initialSize.y);\n            this.initialSizes.needsUpdate = true;\n\n            this.initialAlphas.setX(offset + i, particleState.initialAlpha);\n            this.initialAlphas.needsUpdate = true;\n        }\n    }\n\n    copyState(srcIndex, destIndex) {\n        super.copyState(srcIndex, destIndex);\n        this.flushParticleStateToBuffers(destIndex);\n    }\n\n    setState(index, state) {\n        if (index >= this.particleCount) {\n            throw new Error('ParticleStateAttributeArray::setState() -> \"index\" is out of range.');\n        }\n        super.setState(index, state);\n        this.flushParticleStateToBuffers(index);\n    }\n\n    getPositions() {\n        return this.positions;\n    }\n\n    getSizes() {\n        return this.sizes;\n    }\n\n    getRotations() {\n        return this.rotations;\n    }\n\n    getSequenceElements() {\n        return this.sequenceElements;\n    }\n\n    getColors() {\n        return this.colors;\n    }\n\n    getGeometry() {\n        return this.geometry;\n    }\n\n    allocate(particleCount) {\n        super.allocate(particleCount);\n\n        const createAttributeBuffer = (bufferArray, componentCount) => {\n            if (this.instanced) {\n                return new THREE.InstancedBufferAttribute(bufferArray, componentCount);\n            } else {\n                return new THREE.BufferAttribute(bufferArray, componentCount);\n            }\n        };\n\n        const vertexCount = this.verticesPerParticle * this.particleCount;\n\n        if (this.instanced) {\n            const baseGeometry = new THREE.BufferGeometry();\n\n            const basePositionsArray = new Float32Array(18);\n            this.basePositions = new THREE.BufferAttribute(basePositionsArray, 3);\n            baseGeometry.setAttribute('position', this.basePositions);\n            this.basePositions.needsUpdate = true;\n            this.basePositions.setXYZ(0, -1.0, 1.0, 0.0);\n            this.basePositions.setXYZ(1, -1.0, -1.0, 0.0);\n            this.basePositions.setXYZ(2, 1.0, 1.0, 0.0);\n            this.basePositions.setXYZ(3, -1.0, -1.0, 0.0);\n            this.basePositions.setXYZ(4, 1.0, -1.0, 0.0);\n            this.basePositions.setXYZ(5, 1.0, 1.0, 0.0);\n\n            const baseUVsArray = new Float32Array(12);\n            this.baseUVs = new THREE.BufferAttribute(baseUVsArray, 2);\n            baseGeometry.setAttribute('baseUV', this.baseUVs);\n            this.baseUVs.needsUpdate = true;\n            this.baseUVs.setXY(0, 0.0, 1.0);\n            this.baseUVs.setXY(1, 0.0, 0.0);\n            this.baseUVs.setXY(2, 1.0, 1.0);\n            this.baseUVs.setXY(3, 0.0, 0.0);\n            this.baseUVs.setXY(4, 1.0, 0.0);\n            this.baseUVs.setXY(5, 1.0, 1.0);\n\n            const customIndexesArray = new Float32Array(6);\n            this.customIndexes = new THREE.BufferAttribute(customIndexesArray, 1);\n            baseGeometry.setAttribute('customIndex', this.customIndexes);\n            this.customIndexes.needsUpdate = true;\n\n            this.customIndexes.setX(0, 0);\n            this.customIndexes.setX(1, 1);\n            this.customIndexes.setX(2, 3);\n            this.customIndexes.setX(3, 1);\n            this.customIndexes.setX(4, 2);\n            this.customIndexes.setX(5, 3);\n\n            this.geometry = new THREE.InstancedBufferGeometry().copy(baseGeometry);\n            this.geometry.instanceCount = 0;\n        } else {\n            this.geometry = new THREE.BufferGeometry();\n\n            const customIndexesArray = new Float32Array(vertexCount);\n            this.customIndexes = new THREE.BufferAttribute(customIndexesArray, 1);\n            this.geometry.setAttribute('customIndex', this.customIndexes);\n            this.customIndexes.needsUpdate = true;\n\n            for (let p = 0; p < this.particleCount; p++) {\n                const offset = p * this.verticesPerParticle;\n                this.customIndexes.setX(offset, 0);\n                this.customIndexes.setX(offset + 1, 1);\n                this.customIndexes.setX(offset + 2, 3);\n                this.customIndexes.setX(offset + 3, 1);\n                this.customIndexes.setX(offset + 4, 2);\n                this.customIndexes.setX(offset + 5, 3);\n            }\n        }\n\n        const lifetimesArray = new Float32Array(vertexCount);\n        const agesArray = new Float32Array(vertexCount);\n        const sequenceElementsArray = new Float32Array(vertexCount * 4);\n        const positionsArray = new Float32Array(vertexCount * 3);\n        const velocitiesArray = new Float32Array(vertexCount * 3);\n        const accelerationsArray = new Float32Array(vertexCount * 3);\n        const normalsArray = new Float32Array(vertexCount * 3);\n        const rotationsArray = new Float32Array(vertexCount);\n        const rotationalSpeedsArray = new Float32Array(vertexCount);\n        const sizesArray = new Float32Array(vertexCount * 2);\n        const colorsArray = new Float32Array(vertexCount * 3);\n        const alphasArray = new Float32Array(vertexCount);\n        const initialSizesArray = new Float32Array(vertexCount * 2);\n        const initialColorsArray = new Float32Array(vertexCount * 3);\n        const initialAlphasArray = new Float32Array(vertexCount);\n\n        this.positions = createAttributeBuffer(positionsArray, 3);\n        this.positions.setUsage(THREE.DynamicDrawUsage);\n        this.geometry.setAttribute('particlePosition', this.positions);\n\n        this.lifetimes = createAttributeBuffer(lifetimesArray, 1);\n        this.lifetimes.setUsage(THREE.DynamicDrawUsage);\n        this.geometry.setAttribute('lifetime', this.lifetimes);\n\n        this.ages = createAttributeBuffer(agesArray, 1);\n        this.ages.setUsage(THREE.DynamicDrawUsage);\n        this.geometry.setAttribute('age', this.ages);\n\n        this.sequenceElements = createAttributeBuffer(sequenceElementsArray, 4);\n        this.sequenceElements.setUsage(THREE.DynamicDrawUsage);\n        this.geometry.setAttribute('sequenceElement', this.sequenceElements);\n\n        this.velocities = createAttributeBuffer(velocitiesArray, 3);\n        this.velocities.setUsage(THREE.DynamicDrawUsage);\n        this.geometry.setAttribute('velocity', this.velocities);\n\n        this.accelerations = createAttributeBuffer(accelerationsArray, 3);\n        this.accelerations.setUsage(THREE.DynamicDrawUsage);\n        this.geometry.setAttribute('acceleration', this.accelerations);\n\n        this.normals = createAttributeBuffer(normalsArray, 3);\n        this.normals.setUsage(THREE.DynamicDrawUsage);\n        this.geometry.setAttribute('normal', this.normals);\n\n        this.rotations = createAttributeBuffer(rotationsArray, 1);\n        this.rotations.setUsage(THREE.DynamicDrawUsage);\n        this.geometry.setAttribute('rotation', this.rotations);\n\n        this.rotationalSpeeds = createAttributeBuffer(rotationalSpeedsArray, 1);\n        this.rotationalSpeeds.setUsage(THREE.DynamicDrawUsage);\n        this.geometry.setAttribute('rotationalSpeed', this.rotationalSpeeds);\n\n        this.sizes = createAttributeBuffer(sizesArray, 2);\n        this.sizes.setUsage(THREE.DynamicDrawUsage);\n        this.geometry.setAttribute('size', this.sizes);\n\n        this.colors = createAttributeBuffer(colorsArray, 3);\n        this.colors.setUsage(THREE.DynamicDrawUsage);\n        this.geometry.setAttribute('color', this.colors);\n\n        this.alphas = createAttributeBuffer(alphasArray, 1);\n        this.alphas.setUsage(THREE.DynamicDrawUsage);\n        this.geometry.setAttribute('alpha', this.alphas);\n\n        this.initialSizes = createAttributeBuffer(initialSizesArray, 2);\n        this.initialSizes.setUsage(THREE.DynamicDrawUsage);\n        this.geometry.setAttribute('initialSize', this.initialSizes);\n\n        this.initialColors = createAttributeBuffer(initialColorsArray, 3);\n        this.initialColors.setUsage(THREE.DynamicDrawUsage);\n        this.geometry.setAttribute('initialColor', this.initialColors);\n\n        this.initialAlphas = createAttributeBuffer(initialAlphasArray, 1);\n        this.initialAlphas.setUsage(THREE.DynamicDrawUsage);\n        this.geometry.setAttribute('initialAlpha', this.initialAlphas);\n\n    }\n\n    dispose() {\n        super.dispose();\n        if (this.geometry) {\n            this.geometry.dispose();\n            this.geometry = null;\n        }\n    }\n}\n","export class FrameSetDescriptor {\n\n    constructor(length, x, y, width, height) {\n        this.length = length;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n};\n\nexport class Atlas {\n\n    constructor(texture, texturePath) {\n        this.texture = texture;\n        this.texturePath = texturePath;\n        this.frameSets = [];\n    }\n\n    getTexture() {\n        return this.texture;\n    }\n\n    getTexturePath() {\n        return this.texturePath;\n    }\n\n    getFrameSetCount() {\n        return this.frameSets.length;\n    }\n\n    addFrameSet(length, x, y, width, height) {\n        this.frameSets.push(new FrameSetDescriptor(length, x, y, width, height));\n    }\n\n    getFrameSet(index) {\n        if (index >= this.frameSets.length) {\n            throw new Error('Atlas::getFrameSet -> \"index\" is out of range.');\n        }\n        return this.frameSets[index];\n    }\n\n}\n","import * as THREE from 'three';\nimport { Renderer } from './Renderer.js';\nimport { ParticleStateAttributeArray } from './ParticleStateAttributeArray.js';\nimport { Atlas } from './Atlas.js';\n\nexport class AnimatedSpriteRenderer extends Renderer {\n\n    constructor(instanced, atlas, interpolateAtlasFrames = false,\n                blending = THREE.NormalBlending, calculateBoundingSphereFromBox = true, renderOrder) {\n        super();\n        this.instanced = instanced;\n        this.particleStateArray = null;\n        this.material = null;\n        this.mesh = null;\n        this.atlas = atlas;\n        this.interpolateAtlasFrames = interpolateAtlasFrames;\n        this.blending = blending;\n        this.boundingBox = new THREE.Box3();\n        this.boundingSphere = new THREE.Sphere();\n        this.calculateBoundingSphereFromBox = calculateBoundingSphereFromBox;\n        this.renderOrder = renderOrder;\n    }\n\n    setOwner(owner) {\n        super.setOwner(owner);\n    }\n\n    getParticleStateArray() {\n        return this.particleStateArray;\n    }\n\n    setSimulateInWorldSpace(simulateInWorldSpace) {\n        super.setSimulateInWorldSpace(simulateInWorldSpace);\n        if (this.material) {\n            this.material.uniforms.simulateInWorldSpace.value = simulateInWorldSpace ? 1 : 0;\n            this.material.uniformsNeedUpdate = true;\n        }\n    }\n\n    calculatingBoundingSphereFromBox() {\n        return this.calculateBoundingSphereFromBox;\n    }\n\n    setBoundingBox(boundingBox) {\n        this.boundingBox.copy(boundingBox);\n        if (this.mesh) {\n            this.updateMeshBounds();\n        }\n    }\n\n    setBoundingSphere(boundingSphere) {\n        this.boundingSphere.copy(boundingSphere);\n        if (this.mesh) {\n            this.updateMeshBounds();\n        }\n    }\n\n    render(owner, threeRenderer, camera) {\n        threeRenderer.render(owner, camera);\n    }\n\n    updateMeshBounds = function() {\n\n        const tempCenter = new THREE.Vector3();\n\n        return function() {\n\n            const geometry = this.particleStateArray.getGeometry();\n\n            if (this.calculateBoundingSphereFromBox) {\n                if (!geometry.boundingBox) geometry.boundingBox = new THREE.Box3();\n                geometry.boundingBox.copy(this.boundingBox);\n                if (!geometry.boundingSphere) {\n                    geometry.boundingSphere = new THREE.Sphere();\n                }\n                tempCenter.x = (this.boundingBox.min.x + this.boundingBox.max.x) / 2.0;\n                tempCenter.y = (this.boundingBox.min.y + this.boundingBox.max.y) / 2.0;\n                tempCenter.z = (this.boundingBox.min.z + this.boundingBox.max.z) / 2.0;\n                const extentX = this.boundingBox.max.x - tempCenter.x;\n                const extentY = this.boundingBox.max.y - tempCenter.y;\n                const extentZ = this.boundingBox.max.z - tempCenter.z;\n                const maxExtent = Math.max(Math.max(extentX, extentY), extentZ);\n                geometry.boundingSphere.center.copy(tempCenter);\n                geometry.boundingSphere.radius = Math.sqrt(2 * maxExtent * maxExtent);\n            } else {\n                if (!geometry.boundingSphere) geometry.boundingSphere = new THREE.Sphere();\n                geometry.boundingSphere.copy(this.boundingSphere);\n            }\n        };\n\n    }();\n\n    init(particleCount) {\n        if (super.init(particleCount)) {\n            this.particleStateArray = new ParticleStateAttributeArray();\n            this.particleStateArray.init(particleCount, this.instanced);\n            this.material = this.createMaterial(null, null, null, true, false);\n            this.material.blending = this.blending;\n            this.mesh = new THREE.Mesh(this.particleStateArray.getGeometry(), this.material);\n            this.mesh.frustumCulled = true;\n            if (this.renderOrder !== undefined) this.mesh.renderOrder = this.renderOrder;\n            this.updateMeshBounds();\n            this.owner.add(this.mesh);\n        }\n    }\n\n    dispose() {\n        this.particleStateArray.dispose();\n    }\n\n    createMaterial(vertexShader, fragmentShader, customUniforms, useWebGL2, useLogarithmicDepth) {\n\n        let shaderAtlas = [...Array(16).keys()].map(i => new THREE.Vector4());\n        if (this.atlas) {\n            for (let i = 0; i < this.atlas.getFrameSetCount(); i++) {\n                const frameSet = this.atlas.getFrameSet(i);\n                shaderAtlas[i] = new THREE.Vector4(frameSet.x, frameSet.y, frameSet.width, frameSet.height);\n            }\n        }\n\n        const atlasTexture = this.atlas ? this.atlas.getTexture() : null;\n        const interpolateAtlasFrames = this.interpolateAtlasFrames;\n        const simulateInWorldSpace = this.simulateInWorldSpace;\n        const instanced = this.instanced ? 1 : 0;\n\n        const baseUniforms = {\n            'atlasFrameSet': {\n                'type': 'v4v',\n                'value': shaderAtlas\n            },\n            'atlasTexture': {\n                'type': 't',\n                'value': atlasTexture\n            },\n            'interpolateAtlasFrames': {\n                'value': interpolateAtlasFrames\n            },\n            'uvOffset': {\n                'type': 'v2',\n                'value': new THREE.Vector2()\n            },\n            'simulateInWorldSpace': {\n                'value': simulateInWorldSpace\n            },\n            'instanced': {\n                'value': instanced\n            }\n        };\n\n        customUniforms = customUniforms || {};\n        Object.assign(customUniforms, baseUniforms);\n\n        vertexShader = vertexShader || AnimatedSpriteRenderer.Shader.getVertexShader(useLogarithmicDepth);\n        fragmentShader = fragmentShader ||\n                         AnimatedSpriteRenderer.Shader.getFragmentShader(useWebGL2, useLogarithmicDepth);\n\n        return new THREE.ShaderMaterial({\n            uniforms: customUniforms,\n            vertexShader: vertexShader,\n            fragmentShader: fragmentShader,\n            transparent: true,\n            alphaTest: 1.0,\n            blending: THREE.NormalBlending,\n            blendDstAlpha: THREE.OneMinusSrcAlphaFactor,\n            blendSrcAlpha: THREE.SrcAlphaFactor,\n            depthTest: true,\n            depthWrite: false\n        } );\n\n    }\n\n    static Shader = {\n\n        get VertexVars() {\n            return [\n                'const int MAX_ATLAS_FRAME_SETS = 16; \\n',\n                'uniform vec4 atlasFrameSet[MAX_ATLAS_FRAME_SETS]; \\n',\n                'uniform int interpolateAtlasFrames; \\n',\n                'uniform int simulateInWorldSpace; \\n',\n                'uniform int instanced; \\n',\n                'attribute vec2 baseUV;\\n',\n                'attribute float customIndex;\\n',\n                'attribute vec4 particlePosition;\\n',\n                'attribute float rotation;\\n',\n                'attribute vec2 size;\\n',\n                'attribute vec4 sequenceElement;\\n',\n                'attribute vec3 color;\\n',\n                'attribute float alpha;\\n',\n                'varying vec2 vUV1;\\n',\n                'varying vec2 vUV2;\\n',\n                'varying vec3 vFragColor;\\n',\n                'varying float vFragAlpha;\\n',\n                'varying float vSequenceElementT; \\n',\n            ].join('\\n');\n        },\n\n        get FragmentVars() {\n            return [\n                'uniform int interpolateAtlasFrames; \\n',\n                'uniform sampler2D atlasTexture;\\n',\n                'uniform vec2 uvOffset;\\n',\n                'varying vec2 vUV1;\\n',\n                'varying vec2 vUV2;\\n',\n                'varying vec3 vFragColor;\\n',\n                'varying float vFragAlpha;\\n',\n                'varying float vSequenceElementT;\\n',\n            ].join('\\n');\n        },\n\n        getVertexShader: function(useLogarithmicDepth) {\n            let shader = [\n                '#include <common>',\n                this.VertexVars,\n            ].join('\\n');\n\n            if (useLogarithmicDepth) shader += '  \\n #include <logdepthbuf_pars_vertex> \\n';\n\n            shader += [\n\n                'void getUV(in int sequenceElement, in int sequenceNumber, in vec4 atlasFrames, out vec2 uv) { \\n',\n                '   float atlasFrameWidth = atlasFrames.z; \\n',\n                '   float atlasFrameHeight = atlasFrames.w; \\n',\n                '   float atlasFrameX = atlasFrames.x; \\n',\n                '   float atlasFrameY = atlasFrames.y; \\n',\n                '   int firstRowSections = int((1.0 - atlasFrameX) / atlasFrameWidth); \\n',\n                '   int maxRowSections = int(1.0 / atlasFrameWidth); \\n',\n\n                '   float firstRowX = atlasFrameX + atlasFrameWidth * float(sequenceElement); \\n',\n                '   float firstRowY = 1.0 - (atlasFrameY + atlasFrameHeight); \\n',\n\n                '   int nRowSequenceElement = sequenceElement - firstRowSections; \\n',\n                '   float SNOverHS = float(nRowSequenceElement) / float(maxRowSections);\\n',\n                '   int nRowYTile = int(SNOverHS);\\n',\n                '   int nRowXTile = int((SNOverHS - float(nRowYTile)) * float(maxRowSections));\\n',\n                '   float nRowX = float(nRowXTile) * atlasFrameWidth;\\n',\n                '   float nRowY = 1.0 - ((float(nRowYTile) + 1.0) * (atlasFrameHeight) + atlasFrameY + atlasFrameHeight);\\n',\n\n                '   float nRow = step(float(firstRowSections), float(sequenceElement)); \\n',\n                '   uv.x = nRow * nRowX + (1.0 - nRow) * firstRowX; \\n',\n                '   uv.y = nRow * nRowY + (1.0 - nRow) * firstRowY; \\n',\n                '} \\n',\n\n                'void main()\\n',\n                '{\\n',\n\n                '   const vec2 right = vec2(1.0, 0.0);\\n',\n                '   const vec2 up = vec2(0.0, 1.0);\\n',\n                '   const vec2 left = vec2(-1.0, 0.0);\\n',\n                '   const vec2 down = vec2(0.0, -1.0);\\n',\n\n                '   const vec2 uRight = vec2(1.0, 1.0);\\n',\n                '   const vec2 uLeft = vec2(-1.0, 1.0);\\n',\n                '   const vec2 dLeft = vec2(-1.0, -1.0);\\n',\n                '   const vec2 dRight = vec2(1.0, -1.0);\\n',\n\n                '   vec4 viewPosition; \\n',\n                '   if (simulateInWorldSpace == 1) { \\n',\n                '       viewPosition = viewMatrix * particlePosition;\\n',\n                '   } else { \\n',\n                '       viewPosition = viewMatrix * modelMatrix * particlePosition;\\n',\n                '   } \\n',\n                '   float sequenceElementF = sequenceElement.x;\\n',\n                '   int sequenceNumber = int(sequenceElement.y);\\n',\n                '   int sequenceStart = int(sequenceElement.z);\\n',\n                '   int sequenceLength = int(sequenceElement.w);\\n',\n                '   vec4 atlasFrames = atlasFrameSet[sequenceNumber]; \\n',\n\n                '   vec2 uv1; \\n',\n                '   vec2 uv2; \\n',\n                '   vSequenceElementT = sequenceElementF - float(int(sequenceElementF)); \\n',\n                '   int firstSequenceElement = int(sequenceElementF); \\n',\n                '   int secondSequenceElement = clamp(firstSequenceElement + 1, sequenceStart, sequenceStart + sequenceLength - 1); \\n',\n                '   getUV(firstSequenceElement, sequenceNumber, atlasFrames, uv1); \\n',\n                '   if (interpolateAtlasFrames == 1 && firstSequenceElement != secondSequenceElement) { \\n ',\n                '       getUV(secondSequenceElement, sequenceNumber, atlasFrames, uv2); \\n',\n                '   } \\n',\n                '   float atlasFrameWidth = atlasFrames.z; \\n',\n                '   float atlasFrameHeight = atlasFrames.w; \\n',\n\n                '   float rotMag = rotation; \\n',\n                '   mat2 rotMat = mat2(cos(rotMag), -sin(rotMag), sin(rotMag), cos(rotMag)) * mat2(size.x, 0.0, 0.0, size.y);\\n',\n\n                '   float rightSide; \\n',\n                '   float upperSide; \\n',\n\n                '   if (instanced != 1) { \\n',\n                '       rightSide = step(2.0, customIndex); \\n',\n                '       vec2 upperSideStep = step(vec2(customIndex, 3.0), vec2(0.0, customIndex));\\n',\n                '       upperSide = upperSideStep.x + upperSideStep.y;\\n',\n                '   }  else { \\n',\n                '       rightSide = baseUV.x; \\n',\n                '       upperSide = baseUV.y; \\n',\n                '   } \\n',\n\n                '   float uvXOffset = atlasFrameWidth * rightSide; \\n',\n                '   float uvYOffset = atlasFrameHeight * upperSide; \\n',\n\n                '   vec2 rotVec; \\n',\n\n                '   if (instanced != 1) { \\n',\n                '       vec4 rotVecStep = step(vec4(customIndex, customIndex, 3.0, 2.0), vec4(0.0, 1.0, customIndex, customIndex)); \\n',\n                '       float uLeftV = rotVecStep.x; \\n',\n                '       float dLeftV = rotVecStep.y - rotVecStep.x; \\n',\n                '       float uRightV = rotVecStep.z; \\n',\n                '       float dRightV = rotVecStep.w - rotVecStep.z; \\n',\n                '       rotVec = uLeft * uLeftV + dLeft * dLeftV + dRight * dRightV + uRight * uRightV; \\n',\n                '   }  else { \\n',\n                '       rotVec = position.xy; \\n ',\n                '   } \\n',\n\n                '   gl_Position = projectionMatrix * (vec4(rotMat * rotVec, 0.0, 0.0) + viewPosition);\\n',\n                '   vUV1 = vec2(uv1.x + uvXOffset, uv1.y + uvYOffset);\\n',\n                '   vUV2 = vec2(uv2.x + uvXOffset, uv2.y + uvYOffset);\\n',\n                '   vFragColor = color; \\n',\n                '   vFragAlpha = alpha; \\n',\n\n            ].join('\\n');\n\n            if (useLogarithmicDepth) shader += '   \\n  #include <logdepthbuf_vertex> \\n';\n\n            shader += '} \\n';\n\n            return shader;\n        },\n\n        getFragmentShader: function(useWebGL2, useLogarithmicDepth) {\n\n            let shader ='#include <common> \\n' + this.FragmentVars + '\\n';\n\n            if (useLogarithmicDepth) shader += '  \\n #include <logdepthbuf_pars_fragment> \\n';\n\n            shader += 'void main() { \\n';\n\n            if (useLogarithmicDepth) shader += '    \\n  #include <logdepthbuf_fragment> \\n';\n\n            if (useWebGL2) {\n                shader += [\n                    '   vec4 color1 = texture(atlasTexture, vUV1 + uvOffset) * vec4(vFragColor, 1.0);\\n',\n                    '   vec4 color2 = color1; \\n',\n                    '   if (interpolateAtlasFrames == 1) color2 = texture(atlasTexture, vUV2 + uvOffset) * vec4(vFragColor, 1.0);\\n',\n                    '   gl_FragColor = mix(color1, color2, vSequenceElementT);\\n',\n                    '   gl_FragColor.a *= vFragAlpha; \\n'\n                ].join('\\n');\n            } else {\n                shader += [\n                    '   vec4 color1 = texture2D(atlasTexture, vUV1 + uvOffset) * vec4(vFragColor, 1.0);\\n',\n                    '   vec4 color2 = color1; \\n',\n                    '   if (interpolateAtlasFrames == 1) color2 = texture(atlasTexture, vUV2 + uvOffset) * vec4(vFragColor, 1.0);\\n',\n                    '   gl_FragColor = mix(color1, color2, vSequenceElementT);\\n',\n                    '   gl_FragColor.a *= vFragAlpha; \\n'\n                ].join('\\n');\n            }\n\n            shader += '}\\n';\n\n            return shader;\n        }\n    };\n\n    static fromJSON(params) {\n        const atlasJSON = params.atlas;\n        const atlasTexture = new THREE.TextureLoader().load(atlasJSON.texturePath);\n        const atlas = new Atlas(atlasTexture, atlasJSON.texturePath);\n        const framesets = atlasJSON.framesets;\n        for (let frameset of framesets) {\n            atlas.addFrameSet(frameset.length, frameset.x, frameset.y, frameset.width, frameset.height);\n        }\n        const renderer = new AnimatedSpriteRenderer(params.instanced, atlas, atlasJSON.interpolateFrames);\n        if (params.blending == 'Additive') {\n            renderer.blending = THREE.AdditiveBlending;\n        } else {\n            renderer.blending = THREE.NormalBlending;\n        }\n        return renderer;\n    }\n\n    toJSON(texturePathGenerator) {\n\n        const defaultTexturePathGenerator = (atlas) => {\n            if (atlas.texturePath) return atlas.texturePath;\n            const texture = atlas.getTexture();\n            const textureSource = texture.source;\n            if (textureSource) {\n                const textureData = textureSource.data;\n                if (textureData) {\n                    const baseURI = textureData.baseURI;\n                    const currentSrc = textureData.currentSrc;\n                    const baseURISubStrLoc = currentSrc.indexOf(baseURI);\n                    if (baseURISubStrLoc >= 0) {\n                        return currentSrc.substr(baseURI.length, currentSrc.length - baseURI.length);\n                    } else {\n                        return currentSrc;\n                    }\n                }\n            }\n        };\n\n        texturePathGenerator = texturePathGenerator || defaultTexturePathGenerator;\n\n        const frameSets = [];\n        for (let i = 0; i < this.atlas.getFrameSetCount(); i++) {\n            const frameSet = this.atlas.getFrameSet(i);\n            frameSets.push(frameSet);\n        }\n\n        let blending = 'Normal';\n        if (this.material.blending === THREE.AdditiveBlending) {\n            blending = 'Additive';\n        }\n\n        const json = {\n            'instanced': this.instanced,\n            'blending': blending,\n            'atlas': {\n                'interpolateFrames': this.interpolateAtlasFrames,\n                'texturePath': texturePathGenerator(this.atlas),\n                'framesets': frameSets\n            }\n        };\n\n        return json;\n    }\n}\n","export class ParticleEmitter {\n\n    constructor() {\n        this.emissionRelativeStartTime = 0.0;\n        this.emissionDuration = 0.0;\n        this.emitCount = 0;\n        this.age = 0.0;\n        this.timeActive = 0.0;\n        this.activeCount = 0;\n        this.maximumActiveParticles = 0;\n    }\n\n    update(timeDelta) {\n        this.internalUpdate(timeDelta);\n        return 0;\n    }\n\n    internalUpdate(timeDelta) {\n        this.age += timeDelta;\n        this.timeActive = Math.max(this.age - this.emissionRelativeStartTime, 0.0);\n        return this.age >= this.emissionRelativeStartTime &&\n                (this.emissionDuration == 0.0 || (this.timeActive <= emissionDuration));\n    }\n\n    updateEmitCount(count) {\n        this.emitCount += count;\n    }\n\n}\n","import { ParticleEmitter } from './ParticleEmitter.js';\n\nexport class ContinuousParticleEmitter extends ParticleEmitter {\n\n    constructor() {\n        super();\n        this.emissionMinimum = 0;\n        this.emissionMaximum = 0;\n    }\n\n}\n","import { ContinuousParticleEmitter } from './ContinuousParticleEmitter.js';\n\nexport class ConstantParticleEmitter extends ContinuousParticleEmitter {\n\n    constructor(emissionRate = 0.0) {\n        super();\n        this.emissionRate = emissionRate;\n    }\n\n    update(timeDelta) {\n        if (this.internalUpdate(timeDelta)) {\n            const toEmitThisFrame = this.emissionRate * this.timeActive - this.emitCount;\n            if (toEmitThisFrame >= 1.0) {\n                const iToEmitThisFrame = Math.floor(toEmitThisFrame);\n                this.updateEmitCount(iToEmitThisFrame);\n                return iToEmitThisFrame;\n            }\n        }\n        return 0;\n    }\n\n    static fromJSON(params) {\n        const emitter = new ConstantParticleEmitter();\n        emitter.emissionRate = params.emissionRate || 0.0;\n        return emitter;\n    }\n\n    toJSON() {\n        return {\n            'emissionRate': this.emissionRate\n        };\n    }\n}\n","import * as THREE from 'three';\n\nexport class BuiltinType {\n\n    static Default = new BuiltinType('Default');\n    static Vector2 = new BuiltinType('Vector2');\n    static Vector3 = new BuiltinType('Vector3');\n    static Vector4 = new BuiltinType('Vector4');\n    static Color = new BuiltinType('Color');\n\n    constructor(name) {\n        this.name = name;\n    }\n\n    static getTypeID(type) {\n        let typeID = BuiltinType.Default;\n        if (type === THREE.Vector2) {\n            typeID = BuiltinType.Vector2;\n        } else if (type === THREE.Vector3) {\n            typeID = BuiltinType.Vector3;\n        } else if (type === THREE.Vector4) {\n            typeID = BuiltinType.Vector4;\n        } else if (type === THREE.Color) {\n            typeID = BuiltinType.Color;\n        }\n        return typeID;\n    }\n\n    static loadJSONParameter(param, type) {\n        switch (type) {\n            case THREE.Vector2:\n                return new THREE.Vector2().fromArray(param);\n            case THREE.Vector3:\n                return new THREE.Vector3().fromArray(param);\n            case THREE.Vector4:\n                return new THREE.Vector4().fromArray(param);\n            case THREE.Color:\n                return new THREE.Color().fromArray(param);\n        }\n\n        return param;\n    }\n}\n","import { BuiltinType } from './BuiltIn.js';\n\nexport class Generator {\n\n    constructor(outType) {\n        this.outType = outType;\n        this.outTypeID = BuiltinType.getTypeID(outType);\n    }\n\n}\n\n","import * as THREE from 'three';\nimport { Generator } from './Generator.js';\nimport { BuiltinType } from './BuiltIn.js';\n\nexport class RandomGenerator extends Generator {\n\n    constructor(outType, range, offset, uniformRange, uniformOffset, normalize) {\n        super(outType);\n        this.range = range;\n        this.offset = offset;\n        this.uniformRange = uniformRange;\n        this.uniformOffset = uniformOffset;\n        this.normalize = normalize;\n    }\n\n    generate(out) {\n        const uniformRange = Math.random() * this.uniformRange;\n        switch (this.outTypeID) {\n            case BuiltinType.Default:\n                out = Math.random() * this.range + this.offset;\n                if (this.normalize) out = out < 0 ? -1.0 : 1.0;\n            break;\n            case BuiltinType.Vector2:\n                out.set(this.generateForElement(uniformRange, 'x'),\n                        this.generateForElement(uniformRange, 'y'));\n            break;\n            case BuiltinType.Vector3:\n                out.set(this.generateForElement(uniformRange, 'x'),\n                        this.generateForElement(uniformRange, 'y'),\n                        this.generateForElement(uniformRange, 'z'));\n            break;\n            case BuiltinType.Vector4:\n                out.set(this.generateForElement(uniformRange, 'x'),\n                        this.generateForElement(uniformRange, 'y'),\n                        this.generateForElement(uniformRange, 'z'),\n                        this.generateForElement(uniformRange, 'w'));\n            break;\n        }\n\n        if (this.normalize) out.normalize();\n        return out;\n    }\n\n    generateForElement(uniformRange, e) {\n        return uniformRange + Math.random() * this.range[e] + this.offset[e] + this.uniformOffset;\n    }\n\n    clone() {\n        const clone = new RandomGenerator(this.outType, this.range, this.offset, this.uniformRange,\n                                          this.uniformOffset, this.normalize);\n        return clone;\n    }\n\n    static getParameterJSON(param) {\n        if (param instanceof THREE.Vector2 || param instanceof THREE.Vector3 ||\n            param instanceof THREE.Vector4 || param instanceof THREE.Color) return param.toArray();\n        return param;\n    }\n\n    static fromJSON(params) {\n        return new RandomGenerator(params.type,\n                                   BuiltinType.loadJSONParameter(params.range, params.type),\n                                   BuiltinType.loadJSONParameter(params.offset, params.type),\n                                   params.uniformRange || 0.0, params.uniformOffset || 0.0, params.normalize);\n    }\n\n    toJSON(jsonTypeStore) {\n        const params = {\n            'range': RandomGenerator.getParameterJSON(this.range),\n            'offset': RandomGenerator.getParameterJSON(this.offset),\n            'uniformRange': this.uniformRange,\n            'uniformOffset': this.uniformOffset\n        };\n        const type = jsonTypeStore.getTypePath(this.range.constructor);\n        if (type !== undefined && type !== null) {\n            params['type'] = type;\n        }\n        return {\n            'type': jsonTypeStore.getTypePath(RandomGenerator),\n            'params': params\n        };\n    }\n}\n","import { ParticleStateInitializer } from './ParticleStateInitializer.js';\nimport { RandomGenerator } from '../util/RandomGenerator.js';\n\nexport class LifetimeInitializer extends ParticleStateInitializer {\n\n    constructor(range, offset, uniformRange, uniformOffset, normalize) {\n        super();\n        this.range = range;\n        this.offset = offset;\n        this.uniformRange = uniformRange;\n        this.uniformOffset = uniformOffset;\n        this.normalize = normalize;\n        this.generator = new RandomGenerator(0, this.range, this.offset, this.uniformRange, this.uniformOffset, this.normalize);\n    }\n\n    initializeState(state) {\n        state.lifetime = this.generator.generate();\n    }\n\n    static fromJSON(particleSystem, params) {\n        return new LifetimeInitializer(params.range, params.offset, params.uniformRange, params.uniformOffset, params.normalize);\n    }\n\n    toJSON() {\n        return {\n            'range': this.range,\n            'offset': this.offset,\n            'uniformRange': this.uniformRange,\n            'uniformOffset': this.uniformOffset,\n            'normalize': this.normalize\n        };\n    }\n}\n","import { ParticleStateInitializer } from './ParticleStateInitializer.js';\n\nexport class RotationInitializer extends ParticleStateInitializer {\n\n    constructor(generator) {\n        super();\n        this.generator = generator.clone();\n    }\n\n    initializeState(state) {\n        state.rotation = this.generator.generate(state.rotation);\n    }\n\n    static fromJSON(particleSystem, params) {\n        const generator = params.generator.type.fromJSON(params.generator.params);\n        return new RotationInitializer(generator);\n    }\n\n    toJSON(typeStore) {\n        return {\n            'generator': this.generator.toJSON(typeStore)\n        };\n    }\n}\n","import { ParticleStateInitializer } from './ParticleStateInitializer.js';\nimport { RandomGenerator } from '../util/RandomGenerator.js';\n\nexport class RotationalSpeedInitializer extends ParticleStateInitializer {\n\n    constructor(range, offset, uniformRange, uniformOffset, normalize) {\n        super();\n        this.range = range;\n        this.offset = offset;\n        this.uniformRange = uniformRange;\n        this.uniformOffset = uniformOffset;\n        this.normalize = normalize;\n        this.generator = new RandomGenerator(0, this.range, this.offset, this.uniformRange, this.uniformOffset, this.normalize);\n    }\n\n    initializeState(state) {\n        state.rotationalSpeed = this.generator.generate();\n    }\n\n    static fromJSON(particleSystem, params) {\n        return new RotationalSpeedInitializer(params.range, params.offset, params.uniformRange, params.uniformOffset, params.normalize);\n    }\n\n    toJSON() {\n        return {\n            'range': this.range,\n            'offset': this.offset,\n            'uniformRange': this.uniformRange,\n            'uniformOffset': this.uniformOffset,\n            'normalize': this.normalize\n        };\n    }\n}\n","import * as THREE from 'three';\nimport { RandomGenerator } from '../util/RandomGenerator.js';\nimport { ParticleStateInitializer } from './ParticleStateInitializer.js';\n\nexport class BoxPositionInitializer extends ParticleStateInitializer {\n\n    constructor(range, offset) {\n        super();\n        this.randomGenerator = new RandomGenerator(THREE.Vector3, range, offset, 0.0, 0.0, false);\n    }\n\n    initializeState(state) {\n        this.randomGenerator.generate(state.position);\n    }\n\n    static fromJSON(particleSystem, params) {\n        return new BoxPositionInitializer(new THREE.Vector3().fromArray(params.range),\n                                          new THREE.Vector3().fromArray(params.offset));\n    }\n\n    toJSON() {\n        return {\n            'range': this.randomGenerator.range.toArray(),\n            'offset': this.randomGenerator.offset.toArray()\n        };\n    }\n}\n","import { ParticleStateInitializer } from './ParticleStateInitializer.js';\n\nexport class SizeInitializer extends ParticleStateInitializer {\n\n    constructor(generator) {\n        super();\n        this.generator = generator.clone();\n    }\n\n    initializeState(state) {\n        this.generator.generate(state.size);\n        state.initialSize.copy(state.size);\n    }\n\n    static fromJSON(particleSystem, params) {\n        const generator = params.generator.type.fromJSON(params.generator.params);\n        return new SizeInitializer(generator);\n    }\n\n    toJSON(typeStore) {\n        return {\n            'generator': this.generator.toJSON(typeStore)\n        };\n    }\n}\n","import * as THREE from 'three';\nimport { RandomGenerator } from '../util/RandomGenerator.js';\nimport { ParticleStateInitializer } from './ParticleStateInitializer.js';\n\nexport class RandomVelocityInitializer extends ParticleStateInitializer {\n\n    constructor(directionRange, directionOffset, speedRange, speedOffset, normalizeDirection = true) {\n        super();\n        this.directionGenerator = new RandomGenerator(THREE.Vector3, directionRange, directionOffset, 0.0, 0.0, true);\n        this.speedGenerator = new RandomGenerator(0, speedRange, speedOffset, 0.0, 0.0, false);\n        this.normalizeDirection = normalizeDirection;\n    }\n\n    initializeState(state) {\n        this.directionGenerator.generate(state.velocity);\n        if (this.normalizeDirection) state.velocity.normalize();\n        state.velocity.multiplyScalar(this.speedGenerator.generate());\n    }\n\n    static fromJSON(particleSystem, params) {\n        return new RandomVelocityInitializer(new THREE.Vector3().fromArray(params.range),\n                                             new THREE.Vector3().fromArray(params.offset),\n                                             params.speedRange, params.speedOffset);\n    }\n\n    toJSON() {\n        return {\n            'range': this.directionGenerator.range.toArray(),\n            'offset': this.directionGenerator.offset.toArray(),\n            'speedRange': this.speedGenerator.range,\n            'speedOffset': this.speedGenerator.offset\n        };\n    }\n}\n","import { ParticleStateProgressType } from '../ParticleState.js';\nimport { ParticleStateInitializer } from './ParticleStateInitializer.js';\n\nexport class SequenceInitializer extends ParticleStateInitializer {\n\n    constructor(particleSequences, reverse = false) {\n        super();\n        this.setParticleSequences(particleSequences);\n        this.reverse = reverse;\n    }\n\n    setParticleSequences(particleSequences) {\n        this.particleSequences = particleSequences;\n    }\n\n    initializeState(state) {\n        const sequenceIDs = this.particleSequences.getSequenceIDs();\n        const r = sequenceIDs.length * Math.random();\n        const ir = Math.floor(r);\n        const sequenceID = sequenceIDs[ir];\n        const sequence = this.particleSequences.getSequence(sequenceID);\n        const sequenceElement = state.sequenceElement;\n        if (this.reverse) sequenceElement.x = sequence.length - 1;\n        else sequenceElement.x = sequence.start;\n        sequenceElement.y = sequence.id;\n        sequenceElement.z = sequence.start;\n        sequenceElement.w = sequence.length;\n        state.progressType = ParticleStateProgressType.Sequence;\n    }\n\n    static fromJSON(particleSystem, params) {\n        return new SequenceInitializer(particleSystem.getParticleSequences(), params.reverse);\n    }\n\n    toJSON() {\n        return {\n            'reverse': this.reverse\n        };\n    }\n}\n","import { ParticleStateOperator } from './ParticleStateOperator.js';\n\nexport class SequenceOperator extends ParticleStateOperator {\n\n    constructor(particleSequences, speed, loop = false, reverse = false) {\n        super();\n        this.particleSequences = particleSequences;\n        this.speed = speed;\n        this.loop = loop;\n        this.reverse = reverse;\n    }\n\n   updateState(state, timeDelta) {\n        const sequenceElement = state.sequenceElement;\n        const activeSequence = this.particleSequences.getSequence(sequenceElement.y);\n        const tdOverS = timeDelta / this.speed;\n        if (this.reverse) {\n            sequenceElement.x -= tdOverS;\n            if (sequenceElement.x < activeSequence.start) {\n                sequenceElement.x = activeSequence.start + activeSequence.length;\n                if (!this.loop) return false;\n            }\n        } else {\n            sequenceElement.x += tdOverS;\n            if (sequenceElement.x >= activeSequence.start + activeSequence.length) {\n                sequenceElement.x = activeSequence.start;\n                if (!this.loop) return false;\n            }\n        }\n        return true;\n    }\n\n    static fromJSON(particleSystem, params) {\n        return new SequenceOperator(particleSystem.getParticleSequences(), params.speed, params.loop, params.reverse);\n    }\n\n    toJSON() {\n        return {\n            'speed': this.speed,\n            'loop': this.loop,\n            'reverse': this.reverse\n        };\n    }\n\n}\n","import * as THREE from 'three';\nimport { BuiltinType } from './BuiltIn.js';\nimport { Utils } from '../util/Utils.js';\n\nexport class ContinuousArray {\n\n    constructor(ElementType, interpolator) {\n        this.elements = [];\n        this.tValues = [];\n        this.elementTypeID = BuiltinType.getTypeID(ElementType);\n        if (interpolator) {\n            this.interpolator = interpolator;\n        } else {\n            this.interpolator = this.getInterpolatorForTypeID(this.elementTypeID);\n        }\n    }\n\n    * [Symbol.iterator]() {\n        let index = 0;\n        while (index < this.getElementCount()) {\n            yield {\n                'element': this.elements[index],\n                'tValue': this.tValues[index]\n            };\n            index++;\n        }\n    }\n\n    getElementCount() {\n        return this.elements.length;\n    }\n\n    getElement(index) {\n        if (index >= this.getElementCount()) {\n            throw new Error('ContinuousArray::getElement() -> \"index\" is out of bounds.');\n        }\n        return this.elements[index];\n    }\n\n    getTValue(index) {\n        if (index >= this.getElementCount()) {\n            throw new Error('ContinuousArray::getTValue() -> \"index\" is out of bounds.');\n        }\n        return this.tValues[index];\n    }\n\n    addElement(element, tValue) {\n        this.elements.push(element);\n        this.tValues.push(tValue);\n    }\n\n    getInterpolatedElement(t, out) {\n        return this.interpolator(t, this.elements, this.tValues, out);\n    }\n\n    getInterpolatorForTypeID = function() {\n\n        const iResult = {\n            'lowerIndex': 0,\n            'upperIndex': 0,\n            'localT': 0.0\n        };\n        const upper2 = new THREE.Vector2();\n        const upper3 = new THREE.Vector3();\n        const upper4 = new THREE.Vector4();\n        const upperC = new THREE.Color();\n\n        const getVectorBasedInterpolator = (upperVector) => {\n            return (tValue, elements, tValues, out) => {\n                ContinuousArray.getInterpolationValuesForTValue(tValues, tValue, iResult);\n                upperVector.copy(elements[iResult.upperIndex]).multiplyScalar(iResult.localT);\n                out.copy(elements[iResult.lowerIndex]).multiplyScalar((1.0 - iResult.localT)).add(upperVector);\n\n            };\n        };\n\n        return function(typeID) {\n            switch (typeID) {\n                case BuiltinType.Default:\n                    return (tValue, elements, tValues) => {\n                        ContinuousArray.getInterpolationValuesForTValue(tValues, tValue, iResult);\n                        return (1.0 - iResult.localT) * elements[iResult.lowerIndex] +\n                                iResult.localT * elements[iResult.upperIndex];\n                    };\n                case BuiltinType.Vector2:\n                    return getVectorBasedInterpolator(upper2);\n                case BuiltinType.Vector3:\n                    return getVectorBasedInterpolator(upper3);\n                case BuiltinType.Vector4:\n                    return getVectorBasedInterpolator(upper4);\n                case BuiltinType.Color:\n                    return getVectorBasedInterpolator(upperC);\n            }\n        };\n\n    }();\n\n    static getInterpolationValuesForTValue(tValues, t, iResult) {\n        let tValueCount = tValues.length;\n        if (tValueCount === 0) {\n            iResult.lowerIndex = -1;\n            iResult.upperIndex = -1;\n            iResult.localT = -1.0;\n            return;\n        }\n        let tValue = 0.0;\n        let lowerIndex = -1;\n        let upperIndex = 0;\n        for (let i = 0; i < tValueCount; i++) {\n            tValue = tValues[i];\n            if (tValue > t) break;\n            lowerIndex++;\n            upperIndex++;\n        }\n        iResult.lowerIndex = Utils.clamp(lowerIndex, 0, tValueCount - 1);\n        iResult.upperIndex = Utils.clamp(upperIndex, 0, tValueCount - 1);\n        let lowerTValue = tValues[lowerIndex];\n        let upperTValue = tValues[upperIndex];\n        iResult.localT = (t - lowerTValue) / (upperTValue - lowerTValue);\n    }\n\n}\n","import { ParticleStateOperator } from './ParticleStateOperator.js';\nimport { ContinuousArray } from '../util/ContinuousArray.js';\nimport { ParticleStateProgressType } from '../ParticleState.js';\n\nexport class InterpolatorOperator extends ParticleStateOperator {\n\n    constructor(ElementType, relativeToInitialValue = false) {\n        super();\n        this.relativeToInitialValue = relativeToInitialValue;\n        this.interpolationElements = new ContinuousArray(ElementType);\n    }\n\n    addElement(element, tValue) {\n        this.interpolationElements.addElement(element, tValue);\n    }\n\n    addElements(elementTValuePairs) {\n        for (let pair of elementTValuePairs) {\n            this.interpolationElements.addElement(pair[0], pair[1]);\n        }\n    }\n\n    addElementsFromElementClassAndParameters(ElementClass, elementParametersTValuePairs) {\n        for (let pair of elementParametersTValuePairs) {\n            const [...args] = pair[0];\n            this.interpolationElements.addElement(new ElementClass(...args), pair[1]);\n        }\n    }\n\n    getInterpolatedValue(state, out) {\n        let t = 0;\n        switch (state.progressType) {\n            case ParticleStateProgressType.Time:\n            {\n                let lifetime = state.lifetime;\n                if (lifetime != 0.0) {\n                    t = state.age / state.lifetime;\n                } else {\n                    t = state.age;\n                }\n            }\n            break;\n            case ParticleStateProgressType.Sequence:\n                t = state.sequenceElement.x / state.sequenceElement.w;\n            break;\n        }\n        return this.interpolationElements.getInterpolatedElement(t, out);\n    }\n\n}\n","import { InterpolatorOperator } from './InterpolatorOperator.js';\n\nexport class OpacityInterpolatorOperator extends InterpolatorOperator {\n\n    constructor(relativeToInitialValue = false) {\n        super(0, relativeToInitialValue);\n    }\n\n    addElementsFromParameters(elementParametersTValuePairs) {\n        super.addElements(elementParametersTValuePairs);\n    }\n\n    updateState(state) {\n        if (this.relativeToInitialValue) {\n            state.alpha = state.initialAlpha * this.getInterpolatedValue(state, state.alpha);\n        } else {\n            state.alpha = this.getInterpolatedValue(state, state.alpha);\n        }\n        return true;\n    }\n\n\n    static fromJSON(particleSystem, params) {\n        return new OpacityInterpolatorOperator(params.relativeToInitialValue);\n    }\n\n    toJSON() {\n        const params = {\n            'relativeToInitialValue': this.relativeToInitialValue\n        };\n        const elements = [...this.interpolationElements].map((element) => {\n            return [element.element, element.tValue];\n        });\n        return {\n            'params': params,\n            'elements': elements\n        };\n    }\n\n}\n","import * as THREE from 'three';\nimport { InterpolatorOperator } from './InterpolatorOperator.js';\n\nexport class SizeInterpolatorOperator extends InterpolatorOperator {\n\n    constructor(relativeToInitialValue = false) {\n        super(THREE.Vector2, relativeToInitialValue);\n    }\n\n    addElementsFromParameters(elementParametersTValuePairs) {\n        super.addElementsFromElementClassAndParameters(THREE.Vector2, elementParametersTValuePairs);\n    }\n\n    updateState = function() {\n\n        const tempSize = new THREE.Vector2();\n\n        return function(state) {\n            this.getInterpolatedValue(state, tempSize);\n            if (this.relativeToInitialValue) {\n                state.size.set(state.initialSize.x * tempSize.x,\n                               state.initialSize.y * tempSize.y);\n            } else {\n                state.size.copy(tempSize);\n            }\n            return true;\n        };\n\n    }();\n\n    static fromJSON(particleSystem, params) {\n        return new SizeInterpolatorOperator(params.relativeToInitialValue);\n    }\n\n    toJSON() {\n        const params = {\n            'relativeToInitialValue': this.relativeToInitialValue\n        };\n        const elements = [...this.interpolationElements].map((element) => {\n            return [element.element.toArray(), element.tValue];\n        });\n        return {\n            'params': params,\n            'elements': elements\n        };\n    }\n\n}\n","import * as THREE from 'three';\nimport { InterpolatorOperator } from './InterpolatorOperator.js';\n\nexport class ColorInterpolatorOperator extends InterpolatorOperator {\n\n    constructor(relativeToInitialValue = false) {\n        super(THREE.Color, relativeToInitialValue);\n    }\n\n    addElementsFromParameters(elementParametersTValuePairs) {\n        super.addElementsFromElementClassAndParameters(THREE.Color, elementParametersTValuePairs);\n    }\n\n    updateState = function() {\n\n        const tempColor = new THREE.Color();\n\n        return function(state) {\n            this.getInterpolatedValue(state, tempColor);\n            if (this.relativeToInitialValue) {\n                state.color.setRGB(state.initialColor.r * tempColor.r,\n                                   state.initialColor.g * tempColor.g,\n                                   state.initialColor.b * tempColor.b);\n            } else {\n                state.color.copy(tempColor);\n            }\n            return true;\n        };\n\n    }();\n\n    static fromJSON(particleSystem, params) {\n        return new ColorInterpolatorOperator(params.relativeToInitialValue);\n    }\n\n    toJSON() {\n        const params = {\n            'relativeToInitialValue': this.relativeToInitialValue\n        };\n        const elements = [...this.interpolationElements].map((element) => {\n            return [element.element.toArray(), element.tValue];\n        });\n        return {\n            'params': params,\n            'elements': elements\n        };\n    }\n}\n","import { ParticleStateOperator } from './ParticleStateOperator.js';\n\nexport class AccelerationOperator extends ParticleStateOperator {\n\n    constructor(generator) {\n        super();\n        this.generator = generator.clone();\n    }\n\n    addElementsFromParameters(elementParametersTValuePairs) {\n        super.addElementsFromElementClassAndParameters(THREE.Vector3, elementParametersTValuePairs);\n    }\n\n    updateState(state) {\n        this.generator.generate(state.acceleration);\n        return true;\n    }\n\n    static fromJSON(particleSystem, params) {\n        const generator = params.generator.type.fromJSON(params.generator.params);\n        return new AccelerationOperator(generator);\n    }\n\n    toJSON(typeStore) {\n        return {\n            'generator': this.generator.toJSON(typeStore)\n        };\n    }\n}\n","import * as THREE from 'three';\nimport { Generator } from './Generator.js';\n\nexport class SphereRandomGenerator extends Generator {\n\n    constructor(rangeTheta, offsetTheta, rangePhi, offsetPhi, rangeRadius, offsetRadius,\n                scaleX, scaleY, scaleZ, offsetX, offsetY, offsetZ) {\n        super(THREE.Vector3);\n        this.rangeTheta = rangeTheta;\n        this.offsetTheta = offsetTheta;\n        this.rangePhi = rangePhi;\n        this.offsetPhi = offsetPhi;\n        this.rangeRadius = rangeRadius;\n        this.offsetRadius = offsetRadius;\n\n        this.scaleX = scaleX;\n        this.scaleY = scaleY;\n        this.scaleZ = scaleZ;\n\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.offsetZ = offsetZ;\n\n        this.tempUp = new THREE.Vector3().set(0.0, 1.0, 0.0);\n    }\n\n    generate(out) {\n        this.tempUp.set(0.0, 1.0, 0.0);\n        const theta = Math.random() * this.rangeTheta + this.offsetTheta;\n        const phi = Math.random() * this.rangePhi + this.offsetPhi;\n        const thetaX = Math.cos(theta);\n        const thetaY = Math.sin(theta);\n        const phiX = Math.cos(phi);\n        const phiY = Math.sin(phi);\n\n        out.set(thetaX, 0.0, -thetaY);\n        out.multiplyScalar(phiX);\n        this.tempUp.multiplyScalar(phiY);\n        out.add(this.tempUp);\n\n        out.normalize();\n\n        const radius = Math.random() * this.rangeRadius + this.offsetRadius;\n        out.multiplyScalar(radius);\n\n        out.x *= this.scaleX;\n        out.y *= this.scaleY;\n        out.z *= this.scaleZ;\n\n        out.x += this.offsetX;\n        out.y += this.offsetY;\n        out.z += this.offsetZ;\n    }\n\n    clone() {\n        const clone = new SphereRandomGenerator(this.rangeTheta, this.offsetTheta, this.rangePhi, this.offsetPhi,\n                                                this.rangeRadius, this.offsetRadius, this.scaleX, this.scaleY,\n                                                this.scaleZ, this.offsetX, this.offsetY, this.offsetZ);\n        return clone;\n    }\n\n    static fromJSON(params) {\n        return new SphereRandomGenerator(params.rangeTheta, params.offsetTheta, params.rangePhi, params.offsetPhi,\n                                         params.rangeRadius, params.offsetRadius, params.scaleX, params.scaleY,\n                                         params.scaleZ, params.offsetX, params.offsetY, params.offsetZ);\n    }\n\n    toJSON(jsonTypeStore) {\n        return {\n            'type': jsonTypeStore.getTypePath(SphereRandomGenerator),\n            'params': {\n                'rangeTheta': this.rangeTheta,\n                'offsetTheta': this.offsetTheta,\n                'rangePhi': this.rangePhi,\n                'offsetPhi': this.offsetPhi,\n                'rangeRadius': this.rangeRadius,\n                'offsetRadius': this.offsetRadius,\n                'scaleX': this.scaleX,\n                'scaleY': this.scaleY,\n                'scaleZ': this.scaleZ,\n                'offsetX': this.offsetX,\n                'offsetY': this.offsetY,\n                'offsetZ': this.offsetZ\n            }\n        };\n    }\n\n}\n","export class Component {\n\n    constructor() {\n    }\n\n}\n","import * as THREE from 'three';\nimport { Utils } from '../util/Utils.js';\nimport { Component } from './Component.js';\n\nexport class FlickerLight extends Component {\n\n    constructor(parent, intensity, intensityFlux, color, distance, decay, shadows = undefined) {\n        super();\n        this.owner = null;\n        this.light = null;\n        this.lastUpdateTime = performance.now() / 1000;\n        this.lastIntensityFlickerTime = this.lastUpdateTime;\n        this.lastPositionFlickerTime = this.lastUpdateTime;\n        this.lastIntensityAdjuster = 1.0;\n        this.nextIntensityAdjuster = 1.0;\n        this.lastPositionAdjuster = new THREE.Vector3();\n        this.positionAdjuster = new THREE.Vector3();\n        this.intensity = 1.0;\n        this.intensityFlux = 2;\n\n        this.init(parent, intensity, intensityFlux, color, distance, decay, shadows);\n    }\n\n    init(parent, intensity, intensityFlux, color, distance, decay, shadows = undefined) {\n        this.owner = new THREE.Object3D();\n        parent.add(this.owner);\n\n        color = color || new THREE.Color();\n        distance = distance || 0;\n        if (decay == null || decay == undefined) decay = 2.0;\n        const shadowsEnabled = !!shadows;\n\n        this.light = new THREE.PointLight(0xffffff, 2, 0, 1);\n        this.light.color.copy(color);\n        this.light.distance = distance;\n        this.light.decay = decay;\n        this.light.castShadow = shadowsEnabled;\n        if (shadowsEnabled) {\n            this.light.shadow.mapSize.width = shadows.mapSize || 512;\n            this.light.shadow.mapSize.height = shadows.mapSize || 512;\n            this.light.shadow.camera.near = shadows.cameraNear || 0.5;\n            this.light.shadow.camera.far = shadows.cameraFar || 500;\n            this.light.shadow.bias = shadows.bias || 0.0001;\n            this.light.shadow.radius = shadows.edgeRadius || 1;\n        }\n\n        this.owner.add(this.light);\n        this.intensity = intensity;\n        this.intensityFlux = intensityFlux;\n\n        return this.light;\n    }\n\n    getLight() {\n        return this.light;\n    }\n\n    setIntensity(intensity) {\n        this.intensity = intensity;\n    }\n\n    update(time) {\n\n        const elapsedTimeSinceLastIntensityFlicker = time - this.lastIntensityFlickerTime;\n        const flickerIntensityIntervalsPerSecond = 8.0;\n        const flickerIntensityIntervalLength = 1.0 / flickerIntensityIntervalsPerSecond;\n        const perUpdateIntervalIntensityFluxRange = this.intensityFlux;\n        const intensityFactorRangeLowerBound = 0.25;\n        const intensityFactorRangeUpperBound = 1.5;\n\n        if (elapsedTimeSinceLastIntensityFlicker > flickerIntensityIntervalLength) {\n            this.lastIntensityFlickerTime = time;\n\n            const intensityDiff = (Math.random() - 0.5) * 2.0 *\n                                   perUpdateIntervalIntensityFluxRange * flickerIntensityIntervalLength;\n\n            let intensityAdjuster = 1.0 + intensityDiff;\n            const diff = (intensityAdjuster - this.lastIntensityAdjuster);\n            intensityAdjuster = this.lastIntensityAdjuster + diff;\n\n            this.lastIntensityAdjuster = this.nextIntensityAdjuster;\n            this.nextIntensityAdjuster = Utils.clamp(intensityAdjuster,\n                                                     intensityFactorRangeLowerBound, intensityFactorRangeUpperBound);\n\n        } else {\n            const elapsedFlickerIntensityT = elapsedTimeSinceLastIntensityFlicker / flickerIntensityIntervalLength;\n            const intensityAdjuster = (1.0 - elapsedFlickerIntensityT) * this.lastIntensityAdjuster +\n                                      elapsedFlickerIntensityT * this.nextIntensityAdjuster;\n            this.light.intensity = intensityAdjuster * this.intensity;\n        }\n\n        const elapsedTimeSinceLastPositionFlicker = time - this.lastPositionFlickerTime;\n        const flickerPositionIntervalsPerSecond = 16.0;\n        const flickerPositionIntervalLength = 1.0 / flickerPositionIntervalsPerSecond;\n\n        if (elapsedTimeSinceLastPositionFlicker > flickerPositionIntervalLength) {\n            this.lastPositionFlickerTime = time;\n\n            const deltaTime = time - this.lastUpdateTime;\n            this.positionAdjuster.set(Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5);\n            this.positionAdjuster.multiplyScalar(deltaTime);\n\n            this.positionAdjuster.add(this.lastPositionAdjuster);\n            this.positionAdjuster.multiplyScalar(0.5);\n\n            this.owner.position.copy(this.positionAdjuster);\n\n            this.lastPositionAdjuster.copy(this.positionAdjuster);\n            this.lastUpdateTime = time;\n        }\n    }\n}\n","export class JSONTypeStore {\n\n    constructor() {\n        this.jsonTypes = {\n            'default': {}\n        };\n        this.jsonTypeNames = {};\n        this.typeIDGen = 0;\n    }\n\n    addType(typeName, type) {\n        this.addTypeToNamespace('default', typeName, type);\n    }\n\n    addTypeToNamespace(namespace, typeName, type) {\n        if (!this.jsonTypes[namespace]) {\n            throw new Error('JSONTypeStore::addTypeToNamespace() -> namespace does not exist');\n        }\n        if (this.jsonTypes[namespace][typeName]) {\n            throw new Error('JSONTypeStore::addTypeToNamespace() -> typeName already exists');\n        }\n\n        if (this.checkAndAddTypeName(type, typeName, namespace)) {\n            this.jsonTypes[namespace][typeName] = type;\n        }\n    }\n\n    addNamespace(namespace, namespaceObject) {\n        if (this.jsonTypes[namespace]) {\n            throw new Error('JSONTypeStore::addNamespace() -> namespace already exists');\n        }\n        this.jsonTypes[namespace] = namespaceObject;\n        for (const typeName in namespaceObject) {\n            if (!namespaceObject.hasOwnProperty || namespaceObject.hasOwnProperty(typeName)) {\n                const type = namespaceObject[typeName];\n                this.checkAndAddTypeName(type, typeName, namespace);\n            }\n        }\n    }\n\n    checkAndAddTypeName(type, typeName, namespace) {\n        if (typeof type === 'function') {\n            const typeID = this.typeIDGen++;\n            type.___photonsTypeID = typeID;\n            this.jsonTypeNames[typeID] = {\n                'namespace': namespace,\n                'typeName': typeName\n            };\n        }\n    }\n\n    getType(namespace, typeName) {\n        if (!this.jsonTypes[namespace]) {\n            throw new Error('JSONTypeStore::getType() -> namespace does not exist');\n        }\n        if (!this.jsonTypes[namespace][typeName]) {\n            throw new Error('JSONTypeStore::getType() -> typeName does not exist');\n        }\n\n        return this.jsonTypes[namespace][typeName];\n    }\n\n    getTypeNames(type) {\n        return this.jsonTypeNames[type.___photonsTypeID];\n    }\n\n    getTypePath(type) {\n        const typeNames = this.getTypeNames(type);\n        if (typeNames) {\n            return `${typeNames.namespace}.${typeNames.typeName}`;\n        } else {\n            return undefined;\n        }\n    }\n\n    parseNamespaceAndTypename(typeStr) {\n        const components = typeStr.split('.');\n        const namespace = components[0];\n        components.splice(0, 1);\n        const typeName = components.join('.');\n        return {\n            'namespace': namespace,\n            'typeName': typeName\n        };\n    }\n\n    parseTypeString(typeStr) {\n        const {namespace, typeName} = this.parseNamespaceAndTypename(typeStr);\n        return this.getType(namespace, typeName);\n    }\n\n}\n"],"names":["THREE"],"mappings":";;AAEO,MAAM,yBAAyB,CAAC;AACvC;AACA,IAAI,OAAO,IAAI,GAAG,IAAI,yBAAyB,CAAC,MAAM,CAAC,CAAC;AACxD,IAAI,OAAO,QAAQ,GAAG,IAAI,yBAAyB,CAAC,UAAU,CAAC,CAAC;AAChE;AACA,IAAI,WAAW,CAAC,IAAI,EAAE;AACtB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,KAAK;AACL,CAAC;AACD;AACO,MAAM,aAAa,CAAC;AAC3B;AACA,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,IAAI,EAAE,CAAC;AACpB,KAAK;AACL;AACA,IAAI,IAAI,GAAG;AACX,QAAQ,IAAI,CAAC,YAAY,GAAG,yBAAyB,CAAC,IAAI,CAAC;AAC3D,QAAQ,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;AAC5B,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACvB,QAAQ,IAAI,CAAC,eAAe,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AACnD,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AAC5C,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AAC5C,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AAChD,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AAC1C,QAAQ,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;AAC5B,QAAQ,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;AACnC,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AACxC,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAIA,OAAK,CAAC,KAAK,EAAE,CAAC;AACvC,QAAQ,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;AACzB,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AAC/C,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAIA,OAAK,CAAC,KAAK,EAAE,CAAC;AAC9C,QAAQ,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;AAChC,KAAK;AACL;AACA,IAAI,MAAM,CAAC,YAAY,EAAE,QAAQ,EAAE,GAAG,EAAE,eAAe,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY;AACzF,WAAW,MAAM,EAAE,QAAQ,EAAE,eAAe,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,YAAY,EAAE,YAAY,EAAE;AAC3G,QAAQ,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACzC,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACjC,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACvB,QAAQ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AACnD,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACrC,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACrC,QAAQ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAC7C,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjC,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACjC,QAAQ,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;AAC/C,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC3C,QAAQ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAC7C,QAAQ,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACzC,KAAK;AACL;AACA,IAAI,MAAM,CAAC,IAAI,EAAE;AACjB,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ;AACnG,oBAAoB,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe;AACtG,oBAAoB,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AAC/G,KAAK;AACL;AACA,IAAI,IAAI,CAAC,GAAG,EAAE;AACd,QAAQ,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,QAAQ;AAC9F,oBAAoB,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,eAAe;AACjG,oBAAoB,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC;AACzG,KAAK;AACL,CAAC;AACD;AACO,MAAM,kBAAkB,CAAC;AAChC;AACA,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;AAC/B,QAAQ,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;AACrC,QAAQ,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;AACjC,KAAK;AACL;AACA,IAAI,IAAI,CAAC,aAAa,EAAE;AACxB,QAAQ,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;AAC7C,KAAK;AACL;AACA,IAAI,gBAAgB,CAAC,aAAa,EAAE;AACpC,QAAQ,IAAI,IAAI,CAAC,aAAa,IAAI,aAAa,EAAE;AACjD,YAAY,IAAI,CAAC,OAAO,EAAE,CAAC;AAC3B,YAAY,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;AACzC,SAAS;AACT,QAAQ,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AAC3C,KAAK;AACL;AACA,IAAI,sBAAsB,CAAC,mBAAmB,EAAE;AAChD,QAAQ,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;AACvD,KAAK;AACL;AACA,IAAI,QAAQ,CAAC,aAAa,EAAE;AAC5B,QAAQ,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;AACjC,QAAQ,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AAC3C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,aAAa,EAAE,CAAC;AAC7F,KAAK;AACL;AACA,IAAI,OAAO,GAAG;AACd,KAAK;AACL;AACA,IAAI,gBAAgB,GAAG;AACvB,QAAQ,OAAO,IAAI,CAAC,aAAa,CAAC;AAClC,KAAK;AACL;AACA,IAAI,2BAA2B,GAAG;AAClC,KAAK;AACL;AACA,IAAI,SAAS,CAAC,QAAQ,EAAE,SAAS,EAAE;AACnC,QAAQ,IAAI,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;AAC5C,YAAY,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAC;AAC9F,SAAS;AACT,QAAQ,IAAI,SAAS,IAAI,IAAI,CAAC,aAAa,EAAE;AAC7C,YAAY,MAAM,IAAI,KAAK,CAAC,iEAAiE,CAAC,CAAC;AAC/F,SAAS;AACT;AACA,QAAQ,MAAM,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;AAC/D,QAAQ,MAAM,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AACjE;AACA,QAAQ,gBAAgB,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;AACnD,KAAK;AACL;AACA,IAAI,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE;AAC3B,QAAQ,IAAI,KAAK,IAAI,IAAI,CAAC,aAAa,EAAE;AACzC,YAAY,MAAM,IAAI,KAAK,CAAC,4DAA4D,CAAC,CAAC;AAC1F,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtD,KAAK;AACL;AACA,IAAI,QAAQ,CAAC,KAAK,EAAE;AACpB,QAAQ,IAAI,KAAK,IAAI,IAAI,CAAC,aAAa,EAAE;AACzC,YAAY,MAAM,IAAI,KAAK,CAAC,4DAA4D,CAAC,CAAC;AAC1F,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;AAC1C,KAAK;AACL;AACA,IAAI,kBAAkB,GAAG,WAAW;AACpC;AACA,QAAQ,MAAM,OAAO,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AAC5C;AACA,QAAQ,OAAO,SAAS,MAAM,GAAG,IAAIA,OAAK,CAAC,IAAI,EAAE,EAAE,iBAAiB,GAAG,IAAI,EAAE;AAC7E,YAAY,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AACnC,YAAY,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AACnC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC,EAAE,EAAE;AAC/D,gBAAgB,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACvD,gBAAgB,IAAI,GAAG,GAAG,aAAa,CAAC,QAAQ,CAAC;AACjD,gBAAgB,IAAI,iBAAiB,EAAE;AACvC,oBAAoB,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACtC,oBAAoB,OAAO,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;AAC5D,oBAAoB,GAAG,GAAG,OAAO,CAAC;AAClC,iBAAiB;AACjB,gBAAgB,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvF,gBAAgB,MAAM,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;AACjD,gBAAgB,MAAM,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;AACjD,gBAAgB,MAAM,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;AACjD,gBAAgB,MAAM,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;AACjD,gBAAgB,MAAM,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;AACjD,gBAAgB,MAAM,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;AACjD,gBAAgB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;AAC5D,gBAAgB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;AAC5D,gBAAgB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;AAC5D,gBAAgB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;AAC5D,gBAAgB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;AAC5D,gBAAgB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;AAC5D,aAAa;AACb,YAAY,OAAO,MAAM,CAAC;AAC1B,SAAS,CAAC;AACV;AACA,KAAK,EAAE,CAAC;AACR;AACA,IAAI,qBAAqB,GAAG,WAAW;AACvC;AACA,QAAQ,MAAM,UAAU,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AAC/C,QAAQ,MAAM,UAAU,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AAC/C,QAAQ,MAAM,OAAO,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AAC5C;AACA,QAAQ,OAAO,SAAS,SAAS,GAAG,IAAIA,OAAK,CAAC,MAAM,EAAE,EAAE,iBAAiB,GAAG,IAAI,EAAE;AAClF,YAAY,IAAI,MAAM,GAAG,CAAC,CAAC;AAC3B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC,EAAE,EAAE;AAC/D,gBAAgB,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACvD,gBAAgB,IAAI,GAAG,GAAG,aAAa,CAAC,QAAQ,CAAC;AACjD,gBAAgB,IAAI,iBAAiB,EAAE;AACvC,oBAAoB,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACtC,oBAAoB,OAAO,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;AAC5D,oBAAoB,GAAG,GAAG,OAAO,CAAC;AAClC,iBAAiB;AACjB,gBAAgB,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvF,gBAAgB,IAAI,CAAC,IAAI,CAAC,EAAE;AAC5B,oBAAoB,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACzC,oBAAoB,MAAM,GAAG,SAAS,CAAC;AACvC,iBAAiB,MAAM;AACvB,oBAAoB,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACzD,oBAAoB,MAAM,cAAc,GAAG,UAAU,CAAC,MAAM,EAAE,GAAG,SAAS,CAAC;AAC3E,oBAAoB,IAAI,cAAc,GAAG,MAAM,EAAE;AACjD,wBAAwB,MAAM,IAAI,GAAG,cAAc,GAAG,MAAM,CAAC;AAC7D,wBAAwB,MAAM,UAAU,GAAG,IAAI,GAAG,CAAC,CAAC;AACpD,wBAAwB,UAAU,CAAC,SAAS,EAAE,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;AAC1E,wBAAwB,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACnD,wBAAwB,MAAM,IAAI,UAAU,CAAC;AAC7C,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,YAAY,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC9C,YAAY,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;AACtC;AACA,YAAY,OAAO,SAAS,CAAC;AAC7B,SAAS,CAAC;AACV;AACA,KAAK,EAAE,CAAC;AACR;;ACnNO,MAAM,gBAAgB,CAAC;AAC9B;AACA,IAAI,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,GAAG,CAAC,EAAE;AACvC,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;AACrB,KAAK;AACL;AACA;;ACNO,MAAM,qBAAqB,CAAC;AACnC;AACA,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AAC5B,QAAQ,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;AACtB,KAAK;AACL;AACA,IAAI,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE;AACnC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;AAC5B,YAAY,MAAM,IAAI,KAAK,CAAC,wFAAwF,CAAC,CAAC;AACtH,SAAS;AACT;AACA,QAAQ,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;AACjE,QAAQ,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC;AACtC,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC1B,QAAQ,OAAO,QAAQ,CAAC;AACxB,KAAK;AACL;AACA,IAAI,WAAW,CAAC,EAAE,EAAE;AACpB,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;AAC7B,YAAY,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;AACjF,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;AAClC,KAAK;AACL;AACA,IAAI,cAAc,GAAG;AACrB,QAAQ,OAAO,IAAI,CAAC,GAAG,CAAC;AACxB,KAAK;AACL;AACA,IAAI,KAAK,CAAC,EAAE,EAAE;AACd,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,OAAO,KAAK,CAAC;AAC9C,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL;AACA;;AClCO,MAAM,wBAAwB,CAAC;AACtC;AACA,IAAI,WAAW,GAAG;AAClB,KAAK;AACL;AACA,IAAI,eAAe,CAAC,KAAK,EAAE;AAC3B,QAAQ,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAC9C,QAAQ,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACxC,QAAQ,KAAK,CAAC,YAAY,GAAG,GAAG,CAAC;AACjC,QAAQ,KAAK,CAAC,YAAY,GAAG,yBAAyB,CAAC,IAAI,CAAC;AAC5D,QAAQ,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;AAC7B,QAAQ,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;AACxB,QAAQ,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9C,QAAQ,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1C,QAAQ,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1C,QAAQ,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAC9C,QAAQ,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACxC,QAAQ,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;AAC7B,QAAQ,KAAK,CAAC,eAAe,GAAG,GAAG,CAAC;AACpC,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;AAC3C,QAAQ,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC7C,QAAQ,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;AAC1B,KAAK;AACL;AACA;;ACxBO,MAAM,4BAA4B,SAAS,wBAAwB,CAAC;AAC3E;AACA,IAAI,WAAW,GAAG;AAClB,QAAQ,KAAK,EAAE,CAAC;AAChB,KAAK;AACL;AACA,IAAI,eAAe,CAAC,KAAK,EAAE;AAC3B,QAAQ,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AACrC,KAAK;AACL;AACA;;ACZO,MAAM,qBAAqB,CAAC;AACnC;AACA,IAAI,WAAW,GAAG;AAClB,KAAK;AACL;AACA,IAAI,WAAW,GAAG;AAClB,KAAK;AACL;AACA;;ACLO,MAAM,yBAAyB,SAAS,qBAAqB,CAAC;AACrE;AACA,IAAI,WAAW,GAAG;AAClB,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,kBAAkB,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AACtD,QAAQ,IAAI,CAAC,sBAAsB,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AAC1D,QAAQ,IAAI,CAAC,iBAAiB,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AACrD,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AACjD,KAAK;AACL;AACA,IAAI,WAAW,CAAC,KAAK,EAAE,SAAS,EAAE;AAClC,QAAQ,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;AAC5C,QAAQ,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AACxD,QAAQ,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACjE,QAAQ,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AAC9D,QAAQ,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;AACxD;AACA,QAAQ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAChD,QAAQ,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACzD,QAAQ,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AAC1D;AACA,QAAQ,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;AACpD;AACA,QAAQ,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,SAAS,CAAC;AAC1C;AACA,QAAQ,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,GAAG,SAAS,GAAG,KAAK,CAAC,eAAe,CAAC;AAC5E,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL;AACA;;AChCO,MAAM,KAAK,CAAC;AACnB;AACA,IAAI,OAAO,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE;AAClC,QAAQ,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;AACnD,KAAK;AACL;AACA,IAAI,OAAO,WAAW,GAAG;AACzB,QAAQ,OAAO,WAAW,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;AACxC,KAAK;AACL;;ACTO,MAAM,kBAAkB,CAAC;AAChC;AACA,QAAQ,WAAW,GAAG;AACtB,YAAY,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AACjC,SAAS;AACT;AACA,QAAQ,YAAY,CAAC,SAAS,EAAE;AAChC,YAAY,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC5C,SAAS;AACT;AACA,QAAQ,MAAM,CAAC,WAAW,EAAE,SAAS,EAAE;AACvC,YAAY,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,UAAU,EAAE;AACnD,gBAAgB,SAAS,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACzD,aAAa;AACb,SAAS;AACT;AACA,QAAQ,YAAY,CAAC,KAAK,EAAE;AAC5B,YAAY,IAAI,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;AACjD,gBAAgB,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAC;AAClG,aAAa;AACb,YAAY,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AAC1C,SAAS;AACT;;ACdO,MAAM,mBAAmB,CAAC;AACjC;AACA,IAAI,OAAO,UAAU,GAAG,IAAI,mBAAmB,CAAC,YAAY,CAAC,CAAC;AAC9D,IAAI,OAAO,OAAO,GAAG,IAAI,mBAAmB,CAAC,SAAS,CAAC,CAAC;AACxD,IAAI,OAAO,MAAM,GAAG,IAAI,mBAAmB,CAAC,QAAQ,CAAC,CAAC;AACtD,IAAI,OAAO,IAAI,GAAG,IAAI,mBAAmB,CAAC,MAAM,CAAC,CAAC;AAClD;AACA,IAAI,WAAW,CAAC,IAAI,EAAE;AACtB,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACvB,KAAK;AACL;AACA,CAAC;AACD;AACO,MAAM,cAAc,CAAC;AAC5B;AACA,IAAI,WAAW,CAAC,KAAK,EAAE,sBAAsB,EAAE;AAC/C,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;AACnC,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AAC5B,QAAQ,IAAI,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;AAC7D,QAAQ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AACjC,QAAQ,IAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC;AACxC,QAAQ,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;AACrC,QAAQ,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;AACzC,QAAQ,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;AACxC,QAAQ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;AACpC,QAAQ,IAAI,CAAC,kBAAkB,GAAG,IAAI,kBAAkB,EAAE,CAAC;AAC3D,QAAQ,IAAI,CAAC,yBAAyB,GAAG,EAAE,CAAC;AAC5C,QAAQ,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;AACzC,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AACnC,QAAQ,IAAI,CAAC,WAAW,GAAG,mBAAmB,CAAC,UAAU,CAAC;AAC1D,QAAQ,IAAI,CAAC,iBAAiB,GAAG,IAAI,qBAAqB,EAAE,CAAC;AAC7D,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACrC,QAAQ,IAAI,CAAC,qCAAqC,GAAG,IAAI,CAAC;AAC1D,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAIA,OAAK,CAAC,IAAI,EAAE,CAAC;AAC5C,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAIA,OAAK,CAAC,MAAM,EAAE,CAAC;AACjD,KAAK;AACL;AACA,IAAI,IAAI,CAAC,sBAAsB,EAAE;AACjC,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;AAC/B,YAAY,IAAI,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;AACjE,YAAY,IAAI,IAAI,CAAC,sBAAsB,EAAE;AAC7C,gBAAgB,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACjE,gBAAgB,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;AACzG,gBAAgB,IAAI,CAAC,sBAAsB,CAAC,uBAAuB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;AAC/F,gBAAgB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,EAAE,CAAC;AAC1F,aAAa,MAAM;AACnB,gBAAgB,IAAI,CAAC,cAAc,GAAG,IAAI,kBAAkB,EAAE,CAAC;AAC/D,gBAAgB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;AACtE,aAAa;AACb,YAAY,IAAI,CAAC,2BAA2B,CAAC,IAAI,4BAA4B,EAAE,CAAC,CAAC;AACjF,YAAY,IAAI,CAAC,wBAAwB,CAAC,IAAI,yBAAyB,EAAE,CAAC,CAAC;AAC3E,YAAY,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AACpC,SAAS,MAAM;AACf,YAAY,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;AAC7F,SAAS;AACT,KAAK;AACL;AACA,IAAI,UAAU,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC;AAC5B,KAAK;AACL;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,OAAO,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACtC,KAAK;AACL;AACA,IAAI,QAAQ,CAAC,QAAQ,EAAE;AACvB,QAAQ,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;AACzC,KAAK;AACL;AACA,IAAI,MAAM,CAAC,WAAW,EAAE,SAAS,EAAE;AACnC,QAAQ,IAAI,IAAI,CAAC,WAAW,IAAI,mBAAmB,CAAC,OAAO,EAAE;AAC7D,YAAY,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;AAC/C,YAAY,WAAW,GAAG,CAAC,WAAW,IAAI,SAAS,IAAI,WAAW,IAAI,IAAI,IAAI,KAAK,CAAC,WAAW,EAAE,GAAG,WAAW,CAAC;AAChH,YAAY,SAAS,GAAG,CAAC,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,IAAI,IAAI,WAAW,GAAG,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;AACtH,YAAY,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,WAAW,IAAI,mBAAmB,CAAC,OAAO,EAAE;AAC5F,gBAAgB,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAC/E,gBAAgB,IAAI,eAAe,GAAG,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;AACjF,gBAAgB,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;AACvD,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;AAC3F;AACA;AACA,gBAAgB,IAAI,CAAC,YAAY,EAAE,CAAC;AACpC,aAAa;AACb,YAAY,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AACnE,YAAY,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC;AAC9C,SAAS;AACT,KAAK;AACL;AACA,IAAI,MAAM,CAAC,aAAa,EAAE,MAAM,EAAE;AAClC,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE,IAAI,IAAI,CAAC,sBAAsB,EAAE;AAC9D,YAAY,MAAM,aAAa,GAAG,aAAa,CAAC,SAAS,CAAC;AAC1D,YAAY,aAAa,CAAC,SAAS,GAAG,KAAK,CAAC;AAC5C,YAAY,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;AACtC,YAAY,IAAI,CAAC,KAAK,CAAC,sBAAsB,GAAG,IAAI,CAAC;AACrD,YAAY,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC;AAClF,YAAY,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;AACvC,YAAY,aAAa,CAAC,SAAS,GAAG,aAAa,CAAC;AACpD,SAAS;AACT,KAAK;AACL;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,IAAI,IAAI,CAAC,WAAW,IAAI,mBAAmB,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,IAAI,mBAAmB,CAAC,MAAM,EAAE;AAClH,YAAY,IAAI,CAAC,WAAW,GAAG,mBAAmB,CAAC,OAAO,CAAC;AAC3D,YAAY,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;AACjD,YAAY,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC;AACjD,SAAS,MAAM;AACf;AACA,SAAS;AACT,KAAK;AACL;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,IAAI,IAAI,CAAC,WAAW,IAAI,mBAAmB,CAAC,OAAO,EAAE;AAC7D,YAAY,IAAI,CAAC,WAAW,GAAG,mBAAmB,CAAC,MAAM,CAAC;AAC1D,SAAS;AACT,KAAK;AACL;AACA,IAAI,IAAI,GAAG;AACX;AACA,KAAK;AACL;AACA,IAAI,cAAc,GAAG;AACrB,QAAQ,OAAO,IAAI,CAAC,WAAW,CAAC;AAChC,KAAK;AACL;AACA,IAAI,UAAU,CAAC,OAAO,EAAE;AACxB,QAAQ,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;AACvC,QAAQ,IAAI,CAAC,eAAe,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC;AAClF,QAAQ,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;AACvC,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC;AACpC,KAAK;AACL;AACA,IAAI,YAAY,CAAC,SAAS,EAAE;AAC5B,QAAQ,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;AACxD,KAAK;AACL;AACA,IAAI,YAAY,CAAC,KAAK,EAAE;AACxB,QAAQ,OAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AAC3D,KAAK;AACL;AACA,IAAI,2BAA2B,CAAC,WAAW,EAAE;AAC7C,QAAQ,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACzD,QAAQ,OAAO,WAAW,CAAC;AAC3B,KAAK;AACL;AACA,IAAI,gCAAgC,GAAG;AACvC,QAAQ,OAAO,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC;AACrD,KAAK;AACL;AACA,IAAI,2BAA2B,CAAC,KAAK,EAAE;AACvC,QAAQ,IAAI,KAAK,IAAI,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE;AAC5D,YAAY,MAAM,IAAI,KAAK,CAAC,2EAA2E,CAAC,CAAC;AACzG,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;AACrD,KAAK;AACL;AACA,IAAI,wBAAwB,CAAC,QAAQ,EAAE;AACvC,QAAQ,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACnD,QAAQ,OAAO,QAAQ,CAAC;AACxB,KAAK;AACL;AACA,IAAI,6BAA6B,GAAG;AACpC,QAAQ,OAAO,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC;AAClD,KAAK;AACL;AACA,IAAI,wBAAwB,CAAC,KAAK,EAAE;AACpC,QAAQ,IAAI,KAAK,IAAI,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE;AACzD,YAAY,MAAM,IAAI,KAAK,CAAC,wEAAwE,CAAC,CAAC;AACtG,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;AAClD,KAAK;AACL;AACA,IAAI,yBAAyB,GAAG;AAChC,QAAQ,OAAO,IAAI,CAAC,sBAAsB,CAAC;AAC3C,KAAK;AACL;AACA,IAAI,sBAAsB,GAAG;AAC7B,QAAQ,OAAO,IAAI,CAAC,mBAAmB,CAAC;AACxC,KAAK;AACL;AACA,IAAI,gBAAgB,CAAC,KAAK,EAAE;AAC5B,QAAQ,IAAI,KAAK,IAAI,IAAI,CAAC,mBAAmB,EAAE;AAC/C,YAAY,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAC;AAC9F,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACnD,KAAK;AACL;AACA,IAAI,iBAAiB,GAAG;AACxB,QAAQ,OAAO,IAAI,CAAC,cAAc,CAAC;AACnC,KAAK;AACL;AACA,IAAI,yBAAyB,GAAG;AAChC,QAAQ,OAAO,IAAI,CAAC,sBAAsB,CAAC;AAC3C,KAAK;AACL;AACA,IAAI,uBAAuB,GAAG;AAC9B,QAAQ,OAAO,IAAI,CAAC,oBAAoB,CAAC;AACzC,KAAK;AACL;AACA,IAAI,uBAAuB,CAAC,oBAAoB,EAAE;AAClD,QAAQ,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;AACzD,QAAQ,IAAI,IAAI,CAAC,sBAAsB,EAAE;AACzC,YAAY,IAAI,CAAC,sBAAsB,CAAC,uBAAuB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;AAC3F,SAAS;AACT,KAAK;AACL;AACA,IAAI,wCAAwC,CAAC,qCAAqC,EAAE;AACpF,QAAQ,IAAI,CAAC,qCAAqC,GAAG,qCAAqC,CAAC;AAC3F,KAAK;AACL;AACA,IAAI,mBAAmB,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,GAAG,CAAC,EAAE;AAC/C,QAAQ,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;AAC9D,KAAK;AACL;AACA,IAAI,oBAAoB,GAAG;AAC3B,QAAQ,OAAO,IAAI,CAAC,iBAAiB,CAAC;AACtC,KAAK;AACL;AACA,IAAI,UAAU,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC;AACpC,KAAK;AACL;AACA,IAAI,YAAY,GAAG,WAAW;AAC9B;AACA,QAAQ,MAAM,WAAW,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AAChD;AACA,QAAQ,OAAO,WAAW;AAC1B,YAAY,IAAI,iBAAiB,GAAG,IAAI,CAAC;AACzC,YAAY,IAAI,IAAI,CAAC,qCAAqC,EAAE;AAC5D,gBAAgB,iBAAiB,GAAG,WAAW,CAAC;AAChD,gBAAgB,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,CAAC;AACxE,aAAa;AACb,YAAY,IAAI,IAAI,CAAC,sBAAsB,CAAC,gCAAgC,EAAE,EAAE;AAChF,gBAAgB,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC;AAC5F,gBAAgB,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC7E,aAAa,MAAM;AACnB,gBAAgB,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC,CAAC;AAClG,gBAAgB,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACnF,aAAa;AACb,SAAS,CAAC;AACV;AACA,KAAK,EAAE,CAAC;AACR;AACA,IAAI,iBAAiB,CAAC,aAAa,EAAE;AACrC,QAAQ,IAAI,IAAI,CAAC,WAAW,IAAI,mBAAmB,CAAC,OAAO,EAAE;AAC7D,YAAY,MAAM,sBAAsB,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,GAAG,aAAa;AAC/F,oDAAoD,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;AACpF,YAAY,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC,GAAG,sBAAsB,EAAE,CAAC,EAAE,EAAE;AACpF,gBAAgB,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;AACzC,aAAa;AACb,YAAY,IAAI,CAAC,mBAAmB,GAAG,sBAAsB,CAAC;AAC9D,YAAY,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;AACjF,SAAS;AACT,KAAK;AACL;AACA,IAAI,gBAAgB,CAAC,KAAK,EAAE;AAC5B,QAAQ,IAAI,IAAI,CAAC,WAAW,IAAI,mBAAmB,CAAC,OAAO,EAAE;AAC7D,YAAY,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtE,YAAY,aAAa,CAAC,GAAG,GAAG,GAAG,CAAC;AACpC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC5E,gBAAgB,MAAM,wBAAwB,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;AACnF,gBAAgB,wBAAwB,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;AACxE,aAAa;AACb,YAAY,IAAI,IAAI,CAAC,oBAAoB,EAAE;AAC3C,gBAAgB,aAAa,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;AAC5E,gBAAgB,MAAM,OAAO,GAAG,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;AAChE,gBAAgB,IAAI,IAAI,CAAC,qCAAqC,EAAE;AAChE,oBAAoB,aAAa,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;AAC9G,oBAAoB,MAAM,OAAO,GAAG,aAAa,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;AACxE,oBAAoB,aAAa,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;AAClH,iBAAiB;AACjB,aAAa;AACb,YAAY,IAAI,CAAC,cAAc,CAAC,2BAA2B,CAAC,KAAK,CAAC,CAAC;AACnE,SAAS;AACT,KAAK;AACL;AACA,IAAI,sBAAsB,CAAC,SAAS,EAAE;AACtC,QAAQ,IAAI,IAAI,CAAC,WAAW,IAAI,mBAAmB,CAAC,OAAO,EAAE;AAC7D,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC;AACtB,YAAY,OAAO,CAAC,GAAG,IAAI,CAAC,mBAAmB,EAAE;AACjD,gBAAgB,MAAM,gBAAgB,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;AAClF,gBAAgB,IAAI,CAAC,gBAAgB,EAAE;AACvC,oBAAoB,IAAI,CAAC,GAAG,IAAI,CAAC,mBAAmB,GAAG,CAAC,EAAE;AAC1D,wBAAwB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,mBAAmB,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AAClF,qBAAqB;AACrB,oBAAoB,IAAI,CAAC,mBAAmB,EAAE,CAAC;AAC/C,oBAAoB,SAAS;AAC7B,iBAAiB;AACjB,gBAAgB,CAAC,EAAE,CAAC;AACpB,aAAa;AACb,YAAY,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;AACjF,SAAS;AACT,KAAK;AACL;AACA,IAAI,qBAAqB,CAAC,KAAK,EAAE,SAAS,EAAE;AAC5C,QAAQ,IAAI,IAAI,CAAC,WAAW,IAAI,mBAAmB,CAAC,OAAO,EAAE;AAC7D,YAAY,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtE,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzE,gBAAgB,MAAM,qBAAqB,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;AAC7E,gBAAgB,MAAM,UAAU,GAAG,qBAAqB,CAAC,WAAW,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;AAC/F,gBAAgB,MAAM,gBAAgB,GAAG,aAAa,CAAC,QAAQ,CAAC;AAChE,gBAAgB,IAAI,CAAC,UAAU,IAAI,gBAAgB,IAAI,GAAG,IAAI,aAAa,CAAC,GAAG,IAAI,gBAAgB,EAAE;AACrG,oBAAoB,OAAO,KAAK,CAAC;AACjC,iBAAiB;AACjB,aAAa;AACb,YAAY,IAAI,CAAC,cAAc,CAAC,2BAA2B,CAAC,KAAK,CAAC,CAAC;AACnE,YAAY,OAAO,IAAI,CAAC;AACxB,SAAS;AACT,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL;AACA,IAAI,mBAAmB,CAAC,QAAQ,EAAE,SAAS,EAAE;AAC7C,QAAQ,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AAC3D,QAAQ,IAAI,CAAC,cAAc,CAAC,2BAA2B,CAAC,SAAS,CAAC,CAAC;AACnE,KAAK;AACL;AACA,IAAI,OAAO,QAAQ,CAAC,IAAI,EAAE,aAAa,EAAE,aAAa,EAAE;AACxD;AACA,QAAQ,MAAM,YAAY,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,KAAK;AACzD,YAAY,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AACpC,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC;AAC1B,YAAY,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;AACpC,gBAAgB,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;AAC9C,oBAAoB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AAC1C,oBAAoB,IAAI,OAAO,GAAG,IAAI,QAAQ,EAAE;AAChD,wBAAwB,YAAY,CAAC,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;AAC5D,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS,CAAC;AACV;AACA,QAAQ,YAAY,CAAC,IAAI,EAAE,CAAC,IAAI,KAAK;AACrC,YAAY,IAAI,IAAI,CAAC,IAAI,EAAE;AAC3B,gBAAgB,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrE,aAAa;AACb,SAAS,CAAC,CAAC;AACX;AACA,QAAQ,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;AACvD,QAAQ,MAAM,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;AAC/D;AACA,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC3C,QAAQ,MAAM,QAAQ,GAAG,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AACzE;AACA,QAAQ,MAAM,UAAU,GAAG,IAAIA,OAAK,CAAC,QAAQ,EAAE,CAAC;AAChD,QAAQ,MAAM,cAAc,GAAG,IAAI,cAAc,CAAC,UAAU,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;AACvF,QAAQ,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AAC9C,QAAQ,cAAc,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,CAAC;AACrE;AACA,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;AACzC,QAAQ,MAAM,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AACtE,QAAQ,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AAC3C;AACA,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;AAC5B,YAAY,KAAK,MAAM,YAAY,IAAI,IAAI,CAAC,SAAS,EAAE;AACvD,gBAAgB,cAAc,CAAC,mBAAmB,CAAC,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,EAAE,YAAY,CAAC,EAAE,CAAC,CAAC;AAC7G,aAAa;AACb,SAAS;AACT;AACA,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE;AAC/B,YAAY,KAAK,MAAM,eAAe,IAAI,IAAI,CAAC,YAAY,EAAE;AAC7D,gBAAgB,cAAc,CAAC,2BAA2B,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;AAClI,aAAa;AACb,SAAS;AACT;AACA,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;AAC5B,YAAY,KAAK,MAAM,YAAY,IAAI,IAAI,CAAC,SAAS,EAAE;AACvD,gBAAgB,MAAM,QAAQ;AAC9B,oBAAoB,cAAc,CAAC,wBAAwB,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7H,gBAAgB,IAAI,YAAY,CAAC,QAAQ,EAAE;AAC3C,oBAAoB,QAAQ,CAAC,yBAAyB,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;AAC9E,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA,QAAQ,OAAO,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;AAC5C,KAAK;AACL;AACA,IAAI,MAAM,CAAC,aAAa,EAAE;AAC1B,QAAQ,MAAM,sBAAsB,GAAG,IAAI,CAAC,yBAAyB,EAAE,CAAC;AACxE,QAAQ,MAAM,qBAAqB,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AACxD;AACA,QAAQ,MAAM,qBAAqB,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAClE,QAAQ,MAAM,SAAS,GAAG,qBAAqB,CAAC,cAAc,EAAE,CAAC,GAAG,CAAC,CAAC,UAAU,KAAK;AACrF,YAAY,MAAM,QAAQ,GAAG,qBAAqB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;AAC3E,YAAY,OAAO;AACnB,gBAAgB,IAAI,EAAE,UAAU;AAChC,gBAAgB,OAAO,EAAE,QAAQ,CAAC,KAAK;AACvC,gBAAgB,QAAQ,EAAE,QAAQ,CAAC,MAAM;AACzC,aAAa,CAAC;AACd,SAAS,CAAC,CAAC;AACX;AACA,QAAQ,MAAM,YAAY,GAAG,EAAE,CAAC;AAChC,QAAQ,MAAM,gBAAgB,GAAG,IAAI,CAAC,gCAAgC,EAAE,CAAC;AACzE,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,EAAE,CAAC,EAAE,EAAE;AACnD,YAAY,MAAM,WAAW,GAAG,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC,CAAC;AACpE,YAAY,IAAI,WAAW,CAAC,WAAW,KAAK,4BAA4B,EAAE;AAC1E,gBAAgB,YAAY,CAAC,IAAI,CAAC;AAClC,oBAAoB,MAAM,EAAE,aAAa,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC;AAC9E,oBAAoB,QAAQ,EAAE,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC;AAC/D,iBAAiB,CAAC,CAAC;AACnB,aAAa;AACb,SAAS;AACT;AACA,QAAQ,MAAM,SAAS,GAAG,EAAE,CAAC;AAC7B,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,6BAA6B,EAAE,CAAC;AACnE,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE;AAChD,YAAY,MAAM,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;AAC9D,YAAY,IAAI,QAAQ,CAAC,WAAW,KAAK,yBAAyB,EAAE;AACpE,gBAAgB,MAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;AAC5D,gBAAgB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;AACnD,gBAAgB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACpE,gBAAgB,MAAM,YAAY,GAAG;AACrC,oBAAoB,MAAM,EAAE,aAAa,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC;AAC3E,oBAAoB,QAAQ,EAAE,MAAM;AACpC,iBAAiB,CAAC;AAClB,gBAAgB,IAAI,QAAQ,EAAE;AAC9B,oBAAoB,YAAY,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;AACxD,iBAAiB;AACjB,gBAAgB,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAC7C,aAAa;AACb,SAAS;AACT;AACA,QAAQ,MAAM,IAAI,GAAG;AACrB,YAAY,kBAAkB,EAAE,IAAI,CAAC,yBAAyB,EAAE;AAChE,YAAY,sBAAsB,EAAE,IAAI,CAAC,uBAAuB,EAAE;AAClE,YAAY,UAAU,EAAE;AACxB,gBAAgB,MAAM,EAAE,aAAa,CAAC,WAAW,CAAC,sBAAsB,CAAC,WAAW,CAAC;AACrF,gBAAgB,QAAQ,EAAE,sBAAsB,CAAC,MAAM,EAAE;AACzD,aAAa;AACb,YAAY,SAAS,EAAE;AACvB,gBAAgB,MAAM,EAAE,aAAa,CAAC,WAAW,CAAC,qBAAqB,CAAC,WAAW,CAAC;AACpF,gBAAgB,QAAQ,EAAE,qBAAqB,CAAC,MAAM,EAAE;AACxD,aAAa;AACb,YAAY,WAAW,EAAE,SAAS;AAClC,YAAY,cAAc,EAAE,YAAY;AACxC,YAAY,WAAW,EAAE,SAAS;AAClC,SAAS,CAAC;AACV;AACA,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL;;AC9bO,MAAM,OAAO,CAAC;AACrB;AACA,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;AAClC,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;AACpD,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC;AAC/C,QAAQ,IAAI,CAAC,kBAAkB,GAAG,IAAI,kBAAkB,EAAE,CAAC;AAC3D,KAAK;AACL;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;AAChD,QAAQ,MAAM,SAAS,GAAG,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC;AAC5D,QAAQ,KAAK,IAAI,cAAc,IAAI,IAAI,CAAC,eAAe,EAAE;AACzD,YAAY,cAAc,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AAC1D,SAAS;AACT,QAAQ,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AAC/D,QAAQ,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC;AAC1C,KAAK;AACL;AACA,IAAI,MAAM,CAAC,aAAa,EAAE,MAAM,EAAE;AAClC,QAAQ,KAAK,IAAI,cAAc,IAAI,IAAI,CAAC,eAAe,EAAE;AACzD,YAAY,cAAc,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;AACzD,SAAS;AACT,KAAK;AACL;AACA,IAAI,iBAAiB,CAAC,cAAc,EAAE;AACtC,QAAQ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAClD,KAAK;AACL;AACA,IAAI,YAAY,CAAC,SAAS,EAAE;AAC5B,QAAQ,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;AACxD,KAAK;AACL;AACA,IAAI,YAAY,CAAC,KAAK,EAAE;AACxB,QAAQ,OAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AAC3D,KAAK;AACL;AACA;;ACvCO,MAAM,QAAQ,CAAC;AACtB;AACA,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AACjC,QAAQ,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;AAC/B,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAC1B,QAAQ,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;AAC1C,KAAK;AACL;AACA,IAAI,uBAAuB,CAAC,oBAAoB,EAAE;AAClD,QAAQ,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;AACzD,KAAK;AACL;AACA,IAAI,qBAAqB,GAAG;AAC5B,KAAK;AACL;AACA,IAAI,QAAQ,CAAC,KAAK,EAAE;AACpB,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,KAAK;AACL;AACA,IAAI,IAAI,CAAC,aAAa,EAAE;AACxB,QAAQ,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AAC3C,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;AAC/B,YAAY,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AACpC,YAAY,OAAO,IAAI,CAAC;AACxB,SAAS,MAAM;AACf,YAAY,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;AACvF,SAAS;AACT,KAAK;AACL;AACA,IAAI,MAAM,GAAG;AACb,KAAK;AACL;AACA;;AC9BO,MAAM,2BAA2B,SAAS,kBAAkB,CAAC;AACpE;AACA,IAAI,WAAW,GAAG;AAClB,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC7B,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAClC,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACrC,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AAC/B,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAClC,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AAC5B,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACrC,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAC1B,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AAC3B,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AACjC,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAClC,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,QAAQ,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;AACrC,KAAK;AACL;AACA,IAAI,IAAI,CAAC,aAAa,EAAE,SAAS,GAAG,KAAK,EAAE;AAC3C,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AACnC,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;AAC5B,YAAY,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;AACzC,SAAS,MAAM;AACf,YAAY,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;AACzC,SAAS;AACT,QAAQ,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAClC,QAAQ,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;AACrC,KAAK;AACL;AACA,IAAI,gBAAgB,CAAC,aAAa,EAAE;AACpC,QAAQ,KAAK,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;AAC9C,KAAK;AACL;AACA,IAAI,sBAAsB,CAAC,mBAAmB,EAAE;AAChD,QAAQ,KAAK,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,CAAC;AAC1D,QAAQ,IAAI,mBAAmB,GAAG,CAAC,EAAE;AACrC,YAAY,IAAI,IAAI,CAAC,SAAS,EAAE;AAChC,gBAAgB,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,mBAAmB,CAAC;AAClE,aAAa,MAAM;AACnB,gBAAgB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC,CAAC;AAC9F,aAAa;AACb,SAAS,MAAM;AACf,YAAY,IAAI,IAAI,CAAC,SAAS,EAAE;AAChC,gBAAgB,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,CAAC,CAAC;AAChD,aAAa,MAAM;AACnB,gBAAgB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACjD,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,IAAI,2BAA2B,CAAC,KAAK,EAAE;AACvC,QAAQ,IAAI,KAAK,IAAI,IAAI,CAAC,aAAa,EAAE;AACzC,YAAY,MAAM,IAAI,KAAK,CAAC,wFAAwF,CAAC,CAAC;AACtH,SAAS;AACT,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACnD;AACA,QAAQ,MAAM,MAAM,GAAG,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC;AACxD;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC,EAAE,EAAE;AAC3D,YAAY,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC;AACpE,YAAY,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC;AAC9C;AACA,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,aAAa,CAAC,GAAG,CAAC,CAAC;AAC1D,YAAY,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AACzC;AACA,YAAY,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,aAAa,CAAC,eAAe,CAAC,CAAC,EAAE,aAAa,CAAC,eAAe,CAAC,CAAC;AACtH,sDAAsD,aAAa,CAAC,eAAe,CAAC,CAAC,EAAE,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;AACxH,YAAY,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC;AACrD;AACA,YAAY,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC;AACtE,kCAAkC,aAAa,CAAC,QAAQ,CAAC,CAAC,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACtF,YAAY,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC;AAC9C;AACA,YAAY,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC;AACvE,mCAAmC,aAAa,CAAC,QAAQ,CAAC,CAAC,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACvF,YAAY,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC;AAC/C;AACA,YAAY,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,aAAa,CAAC,YAAY,CAAC,CAAC;AAC9E,sCAAsC,aAAa,CAAC,YAAY,CAAC,CAAC,EAAE,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AAClG,YAAY,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC;AAClD;AACA,YAAY,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACpH,YAAY,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;AAC5C;AACA,YAAY,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC;AACpE,YAAY,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC;AAC9C;AACA,YAAY,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,aAAa,CAAC,eAAe,CAAC,CAAC;AAClF,YAAY,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC;AACrD;AACA,YAAY,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrF,YAAY,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;AAC1C;AACA,YAAY,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAChH,YAAY,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;AAC3C;AACA,YAAY,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC;AAC9D,YAAY,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;AAC3C;AACA,YAAY,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,aAAa,CAAC,WAAW,CAAC,CAAC,EAAE,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AAC1G,YAAY,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC;AACjD;AACA,YAAY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,aAAa,CAAC,YAAY,CAAC,CAAC;AAC5E,YAAY,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC;AAClD,SAAS;AACT,KAAK;AACL;AACA,IAAI,SAAS,CAAC,QAAQ,EAAE,SAAS,EAAE;AACnC,QAAQ,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AAC7C,QAAQ,IAAI,CAAC,2BAA2B,CAAC,SAAS,CAAC,CAAC;AACpD,KAAK;AACL;AACA,IAAI,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE;AAC3B,QAAQ,IAAI,KAAK,IAAI,IAAI,CAAC,aAAa,EAAE;AACzC,YAAY,MAAM,IAAI,KAAK,CAAC,qEAAqE,CAAC,CAAC;AACnG,SAAS;AACT,QAAQ,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACrC,QAAQ,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,CAAC;AAChD,KAAK;AACL;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,QAAQ,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;AAC1B,KAAK;AACL;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,mBAAmB,GAAG;AAC1B,QAAQ,OAAO,IAAI,CAAC,gBAAgB,CAAC;AACrC,KAAK;AACL;AACA,IAAI,SAAS,GAAG;AAChB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC;AAC3B,KAAK;AACL;AACA,IAAI,WAAW,GAAG;AAClB,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC;AAC7B,KAAK;AACL;AACA,IAAI,QAAQ,CAAC,aAAa,EAAE;AAC5B,QAAQ,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;AACtC;AACA,QAAQ,MAAM,qBAAqB,GAAG,CAAC,WAAW,EAAE,cAAc,KAAK;AACvE,YAAY,IAAI,IAAI,CAAC,SAAS,EAAE;AAChC,gBAAgB,OAAO,IAAIA,OAAK,CAAC,wBAAwB,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;AACvF,aAAa,MAAM;AACnB,gBAAgB,OAAO,IAAIA,OAAK,CAAC,eAAe,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;AAC9E,aAAa;AACb,SAAS,CAAC;AACV;AACA,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC;AAC1E;AACA,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;AAC5B,YAAY,MAAM,YAAY,GAAG,IAAIA,OAAK,CAAC,cAAc,EAAE,CAAC;AAC5D;AACA,YAAY,MAAM,kBAAkB,GAAG,IAAI,YAAY,CAAC,EAAE,CAAC,CAAC;AAC5D,YAAY,IAAI,CAAC,aAAa,GAAG,IAAIA,OAAK,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;AAClF,YAAY,YAAY,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;AACtE,YAAY,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC;AAClD,YAAY,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACzD,YAAY,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1D,YAAY,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACxD,YAAY,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1D,YAAY,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACzD,YAAY,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACxD;AACA,YAAY,MAAM,YAAY,GAAG,IAAI,YAAY,CAAC,EAAE,CAAC,CAAC;AACtD,YAAY,IAAI,CAAC,OAAO,GAAG,IAAIA,OAAK,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;AACtE,YAAY,YAAY,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AAC9D,YAAY,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;AAC5C,YAAY,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAC5C,YAAY,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAC5C,YAAY,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAC5C,YAAY,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAC5C,YAAY,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAC5C,YAAY,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAC5C;AACA,YAAY,MAAM,kBAAkB,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;AAC3D,YAAY,IAAI,CAAC,aAAa,GAAG,IAAIA,OAAK,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;AAClF,YAAY,YAAY,CAAC,YAAY,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;AACzE,YAAY,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC;AAClD;AACA,YAAY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1C,YAAY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1C,YAAY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1C,YAAY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1C,YAAY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1C,YAAY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1C;AACA,YAAY,IAAI,CAAC,QAAQ,GAAG,IAAIA,OAAK,CAAC,uBAAuB,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACnF,YAAY,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,CAAC,CAAC;AAC5C,SAAS,MAAM;AACf,YAAY,IAAI,CAAC,QAAQ,GAAG,IAAIA,OAAK,CAAC,cAAc,EAAE,CAAC;AACvD;AACA,YAAY,MAAM,kBAAkB,GAAG,IAAI,YAAY,CAAC,WAAW,CAAC,CAAC;AACrE,YAAY,IAAI,CAAC,aAAa,GAAG,IAAIA,OAAK,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;AAClF,YAAY,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;AAC1E,YAAY,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC;AAClD;AACA,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,EAAE;AACzD,gBAAgB,MAAM,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC;AAC5D,gBAAgB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AACnD,gBAAgB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AACvD,gBAAgB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AACvD,gBAAgB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AACvD,gBAAgB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AACvD,gBAAgB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AACvD,aAAa;AACb,SAAS;AACT;AACA,QAAQ,MAAM,cAAc,GAAG,IAAI,YAAY,CAAC,WAAW,CAAC,CAAC;AAC7D,QAAQ,MAAM,SAAS,GAAG,IAAI,YAAY,CAAC,WAAW,CAAC,CAAC;AACxD,QAAQ,MAAM,qBAAqB,GAAG,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;AACxE,QAAQ,MAAM,cAAc,GAAG,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;AACjE,QAAQ,MAAM,eAAe,GAAG,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;AAClE,QAAQ,MAAM,kBAAkB,GAAG,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;AACrE,QAAQ,MAAM,YAAY,GAAG,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;AAC/D,QAAQ,MAAM,cAAc,GAAG,IAAI,YAAY,CAAC,WAAW,CAAC,CAAC;AAC7D,QAAQ,MAAM,qBAAqB,GAAG,IAAI,YAAY,CAAC,WAAW,CAAC,CAAC;AACpE,QAAQ,MAAM,UAAU,GAAG,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;AAC7D,QAAQ,MAAM,WAAW,GAAG,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;AAC9D,QAAQ,MAAM,WAAW,GAAG,IAAI,YAAY,CAAC,WAAW,CAAC,CAAC;AAC1D,QAAQ,MAAM,iBAAiB,GAAG,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;AACpE,QAAQ,MAAM,kBAAkB,GAAG,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;AACrE,QAAQ,MAAM,kBAAkB,GAAG,IAAI,YAAY,CAAC,WAAW,CAAC,CAAC;AACjE;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;AAClE,QAAQ,IAAI,CAAC,SAAS,CAAC,QAAQ,CAACA,OAAK,CAAC,gBAAgB,CAAC,CAAC;AACxD,QAAQ,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AACvE;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;AAClE,QAAQ,IAAI,CAAC,SAAS,CAAC,QAAQ,CAACA,OAAK,CAAC,gBAAgB,CAAC,CAAC;AACxD,QAAQ,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAC/D;AACA,QAAQ,IAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AACxD,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAACA,OAAK,CAAC,gBAAgB,CAAC,CAAC;AACnD,QAAQ,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AACrD;AACA,QAAQ,IAAI,CAAC,gBAAgB,GAAG,qBAAqB,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC;AAChF,QAAQ,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAACA,OAAK,CAAC,gBAAgB,CAAC,CAAC;AAC/D,QAAQ,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,iBAAiB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;AAC7E;AACA,QAAQ,IAAI,CAAC,UAAU,GAAG,qBAAqB,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;AACpE,QAAQ,IAAI,CAAC,UAAU,CAAC,QAAQ,CAACA,OAAK,CAAC,gBAAgB,CAAC,CAAC;AACzD,QAAQ,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAChE;AACA,QAAQ,IAAI,CAAC,aAAa,GAAG,qBAAqB,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;AAC1E,QAAQ,IAAI,CAAC,aAAa,CAAC,QAAQ,CAACA,OAAK,CAAC,gBAAgB,CAAC,CAAC;AAC5D,QAAQ,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,cAAc,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;AACvE;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC9D,QAAQ,IAAI,CAAC,OAAO,CAAC,QAAQ,CAACA,OAAK,CAAC,gBAAgB,CAAC,CAAC;AACtD,QAAQ,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AAC3D;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;AAClE,QAAQ,IAAI,CAAC,SAAS,CAAC,QAAQ,CAACA,OAAK,CAAC,gBAAgB,CAAC,CAAC;AACxD,QAAQ,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAC/D;AACA,QAAQ,IAAI,CAAC,gBAAgB,GAAG,qBAAqB,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC;AAChF,QAAQ,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAACA,OAAK,CAAC,gBAAgB,CAAC,CAAC;AAC/D,QAAQ,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,iBAAiB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;AAC7E;AACA,QAAQ,IAAI,CAAC,KAAK,GAAG,qBAAqB,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;AAC1D,QAAQ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAACA,OAAK,CAAC,gBAAgB,CAAC,CAAC;AACpD,QAAQ,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AACvD;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,qBAAqB,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;AAC5D,QAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAACA,OAAK,CAAC,gBAAgB,CAAC,CAAC;AACrD,QAAQ,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACzD;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,qBAAqB,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;AAC5D,QAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAACA,OAAK,CAAC,gBAAgB,CAAC,CAAC;AACrD,QAAQ,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACzD;AACA,QAAQ,IAAI,CAAC,YAAY,GAAG,qBAAqB,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;AACxE,QAAQ,IAAI,CAAC,YAAY,CAAC,QAAQ,CAACA,OAAK,CAAC,gBAAgB,CAAC,CAAC;AAC3D,QAAQ,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AACrE;AACA,QAAQ,IAAI,CAAC,aAAa,GAAG,qBAAqB,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;AAC1E,QAAQ,IAAI,CAAC,aAAa,CAAC,QAAQ,CAACA,OAAK,CAAC,gBAAgB,CAAC,CAAC;AAC5D,QAAQ,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,cAAc,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;AACvE;AACA,QAAQ,IAAI,CAAC,aAAa,GAAG,qBAAqB,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;AAC1E,QAAQ,IAAI,CAAC,aAAa,CAAC,QAAQ,CAACA,OAAK,CAAC,gBAAgB,CAAC,CAAC;AAC5D,QAAQ,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,cAAc,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;AACvE;AACA,KAAK;AACL;AACA,IAAI,OAAO,GAAG;AACd,QAAQ,KAAK,CAAC,OAAO,EAAE,CAAC;AACxB,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC3B,YAAY,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;AACpC,YAAY,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACjC,SAAS;AACT,KAAK;AACL;;ACpTO,MAAM,kBAAkB,CAAC;AAChC;AACA,IAAI,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE;AAC7C,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,KAAK;AACL;AACA,CAAC,CAAC;AACF;AACO,MAAM,KAAK,CAAC;AACnB;AACA,IAAI,WAAW,CAAC,OAAO,EAAE,WAAW,EAAE;AACtC,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC/B,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AACvC,QAAQ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AAC5B,KAAK;AACL;AACA,IAAI,UAAU,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC;AAC5B,KAAK;AACL;AACA,IAAI,cAAc,GAAG;AACrB,QAAQ,OAAO,IAAI,CAAC,WAAW,CAAC;AAChC,KAAK;AACL;AACA,IAAI,gBAAgB,GAAG;AACvB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;AACrC,KAAK;AACL;AACA,IAAI,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE;AAC7C,QAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AACjF,KAAK;AACL;AACA,IAAI,WAAW,CAAC,KAAK,EAAE;AACvB,QAAQ,IAAI,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;AAC5C,YAAY,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;AAC9E,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AACrC,KAAK;AACL;AACA;;ACtCO,MAAM,sBAAsB,SAAS,QAAQ,CAAC;AACrD;AACA,IAAI,WAAW,CAAC,SAAS,EAAE,KAAK,EAAE,sBAAsB,GAAG,KAAK;AAChE,gBAAgB,QAAQ,GAAGA,OAAK,CAAC,cAAc,EAAE,8BAA8B,GAAG,IAAI,EAAE,WAAW,EAAE;AACrG,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AACnC,QAAQ,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;AACvC,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC7B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,QAAQ,IAAI,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;AAC7D,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACjC,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAIA,OAAK,CAAC,IAAI,EAAE,CAAC;AAC5C,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAIA,OAAK,CAAC,MAAM,EAAE,CAAC;AACjD,QAAQ,IAAI,CAAC,8BAA8B,GAAG,8BAA8B,CAAC;AAC7E,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AACvC,KAAK;AACL;AACA,IAAI,QAAQ,CAAC,KAAK,EAAE;AACpB,QAAQ,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,qBAAqB,GAAG;AAC5B,QAAQ,OAAO,IAAI,CAAC,kBAAkB,CAAC;AACvC,KAAK;AACL;AACA,IAAI,uBAAuB,CAAC,oBAAoB,EAAE;AAClD,QAAQ,KAAK,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,CAAC;AAC5D,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC3B,YAAY,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,oBAAoB,CAAC,KAAK,GAAG,oBAAoB,GAAG,CAAC,GAAG,CAAC,CAAC;AAC7F,YAAY,IAAI,CAAC,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAAC;AACpD,SAAS;AACT,KAAK;AACL;AACA,IAAI,gCAAgC,GAAG;AACvC,QAAQ,OAAO,IAAI,CAAC,8BAA8B,CAAC;AACnD,KAAK;AACL;AACA,IAAI,cAAc,CAAC,WAAW,EAAE;AAChC,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC3C,QAAQ,IAAI,IAAI,CAAC,IAAI,EAAE;AACvB,YAAY,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACpC,SAAS;AACT,KAAK;AACL;AACA,IAAI,iBAAiB,CAAC,cAAc,EAAE;AACtC,QAAQ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACjD,QAAQ,IAAI,IAAI,CAAC,IAAI,EAAE;AACvB,YAAY,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACpC,SAAS;AACT,KAAK;AACL;AACA,IAAI,MAAM,CAAC,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE;AACzC,QAAQ,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAC5C,KAAK;AACL;AACA,IAAI,gBAAgB,GAAG,WAAW;AAClC;AACA,QAAQ,MAAM,UAAU,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AAC/C;AACA,QAAQ,OAAO,WAAW;AAC1B;AACA,YAAY,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;AACnE;AACA,YAAY,IAAI,IAAI,CAAC,8BAA8B,EAAE;AACrD,gBAAgB,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,WAAW,GAAG,IAAIA,OAAK,CAAC,IAAI,EAAE,CAAC;AACnF,gBAAgB,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC5D,gBAAgB,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE;AAC9C,oBAAoB,QAAQ,CAAC,cAAc,GAAG,IAAIA,OAAK,CAAC,MAAM,EAAE,CAAC;AACjE,iBAAiB;AACjB,gBAAgB,UAAU,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC;AACvF,gBAAgB,UAAU,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC;AACvF,gBAAgB,UAAU,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC;AACvF,gBAAgB,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;AACtE,gBAAgB,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;AACtE,gBAAgB,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;AACtE,gBAAgB,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC;AAChF,gBAAgB,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAChE,gBAAgB,QAAQ,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,SAAS,GAAG,SAAS,CAAC,CAAC;AACtF,aAAa,MAAM;AACnB,gBAAgB,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,QAAQ,CAAC,cAAc,GAAG,IAAIA,OAAK,CAAC,MAAM,EAAE,CAAC;AAC3F,gBAAgB,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAClE,aAAa;AACb,SAAS,CAAC;AACV;AACA,KAAK,EAAE,CAAC;AACR;AACA,IAAI,IAAI,CAAC,aAAa,EAAE;AACxB,QAAQ,IAAI,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;AACvC,YAAY,IAAI,CAAC,kBAAkB,GAAG,IAAI,2BAA2B,EAAE,CAAC;AACxE,YAAY,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AACxE,YAAY,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AAC/E,YAAY,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AACnD,YAAY,IAAI,CAAC,IAAI,GAAG,IAAIA,OAAK,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC7F,YAAY,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC3C,YAAY,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;AACzF,YAAY,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACpC,YAAY,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACtC,SAAS;AACT,KAAK;AACL;AACA,IAAI,OAAO,GAAG;AACd,QAAQ,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;AAC1C,KAAK;AACL;AACA,IAAI,cAAc,CAAC,YAAY,EAAE,cAAc,EAAE,cAAc,EAAE,SAAS,EAAE,mBAAmB,EAAE;AACjG;AACA,QAAQ,IAAI,WAAW,GAAG,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC,CAAC;AAC9E,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;AACxB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,EAAE,CAAC,EAAE,EAAE;AACpE,gBAAgB,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AAC3D,gBAAgB,WAAW,CAAC,CAAC,CAAC,GAAG,IAAIA,OAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC5G,aAAa;AACb,SAAS;AACT;AACA,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,GAAG,IAAI,CAAC;AACzE,QAAQ,MAAM,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC;AACnE,QAAQ,MAAM,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;AAC/D,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;AACjD;AACA,QAAQ,MAAM,YAAY,GAAG;AAC7B,YAAY,eAAe,EAAE;AAC7B,gBAAgB,MAAM,EAAE,KAAK;AAC7B,gBAAgB,OAAO,EAAE,WAAW;AACpC,aAAa;AACb,YAAY,cAAc,EAAE;AAC5B,gBAAgB,MAAM,EAAE,GAAG;AAC3B,gBAAgB,OAAO,EAAE,YAAY;AACrC,aAAa;AACb,YAAY,wBAAwB,EAAE;AACtC,gBAAgB,OAAO,EAAE,sBAAsB;AAC/C,aAAa;AACb,YAAY,UAAU,EAAE;AACxB,gBAAgB,MAAM,EAAE,IAAI;AAC5B,gBAAgB,OAAO,EAAE,IAAIA,OAAK,CAAC,OAAO,EAAE;AAC5C,aAAa;AACb,YAAY,sBAAsB,EAAE;AACpC,gBAAgB,OAAO,EAAE,oBAAoB;AAC7C,aAAa;AACb,YAAY,WAAW,EAAE;AACzB,gBAAgB,OAAO,EAAE,SAAS;AAClC,aAAa;AACb,SAAS,CAAC;AACV;AACA,QAAQ,cAAc,GAAG,cAAc,IAAI,EAAE,CAAC;AAC9C,QAAQ,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AACpD;AACA,QAAQ,YAAY,GAAG,YAAY,IAAI,sBAAsB,CAAC,MAAM,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC;AAC1G,QAAQ,cAAc,GAAG,cAAc;AACvC,yBAAyB,sBAAsB,CAAC,MAAM,CAAC,iBAAiB,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC;AACzG;AACA,QAAQ,OAAO,IAAIA,OAAK,CAAC,cAAc,CAAC;AACxC,YAAY,QAAQ,EAAE,cAAc;AACpC,YAAY,YAAY,EAAE,YAAY;AACtC,YAAY,cAAc,EAAE,cAAc;AAC1C,YAAY,WAAW,EAAE,IAAI;AAC7B,YAAY,SAAS,EAAE,GAAG;AAC1B,YAAY,QAAQ,EAAEA,OAAK,CAAC,cAAc;AAC1C,YAAY,aAAa,EAAEA,OAAK,CAAC,sBAAsB;AACvD,YAAY,aAAa,EAAEA,OAAK,CAAC,cAAc;AAC/C,YAAY,SAAS,EAAE,IAAI;AAC3B,YAAY,UAAU,EAAE,KAAK;AAC7B,SAAS,EAAE,CAAC;AACZ;AACA,KAAK;AACL;AACA,IAAI,OAAO,MAAM,GAAG;AACpB;AACA,QAAQ,IAAI,UAAU,GAAG;AACzB,YAAY,OAAO;AACnB,gBAAgB,yCAAyC;AACzD,gBAAgB,sDAAsD;AACtE,gBAAgB,wCAAwC;AACxD,gBAAgB,sCAAsC;AACtD,gBAAgB,2BAA2B;AAC3C,gBAAgB,0BAA0B;AAC1C,gBAAgB,gCAAgC;AAChD,gBAAgB,oCAAoC;AACpD,gBAAgB,6BAA6B;AAC7C,gBAAgB,wBAAwB;AACxC,gBAAgB,mCAAmC;AACnD,gBAAgB,yBAAyB;AACzC,gBAAgB,0BAA0B;AAC1C,gBAAgB,sBAAsB;AACtC,gBAAgB,sBAAsB;AACtC,gBAAgB,4BAA4B;AAC5C,gBAAgB,6BAA6B;AAC7C,gBAAgB,qCAAqC;AACrD,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzB,SAAS;AACT;AACA,QAAQ,IAAI,YAAY,GAAG;AAC3B,YAAY,OAAO;AACnB,gBAAgB,wCAAwC;AACxD,gBAAgB,mCAAmC;AACnD,gBAAgB,0BAA0B;AAC1C,gBAAgB,sBAAsB;AACtC,gBAAgB,sBAAsB;AACtC,gBAAgB,4BAA4B;AAC5C,gBAAgB,6BAA6B;AAC7C,gBAAgB,oCAAoC;AACpD,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzB,SAAS;AACT;AACA,QAAQ,eAAe,EAAE,SAAS,mBAAmB,EAAE;AACvD,YAAY,IAAI,MAAM,GAAG;AACzB,gBAAgB,mBAAmB;AACnC,gBAAgB,IAAI,CAAC,UAAU;AAC/B,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzB;AACA,YAAY,IAAI,mBAAmB,EAAE,MAAM,IAAI,4CAA4C,CAAC;AAC5F;AACA,YAAY,MAAM,IAAI;AACtB;AACA,gBAAgB,kGAAkG;AAClH,gBAAgB,8CAA8C;AAC9D,gBAAgB,+CAA+C;AAC/D,gBAAgB,0CAA0C;AAC1D,gBAAgB,0CAA0C;AAC1D,gBAAgB,0EAA0E;AAC1F,gBAAgB,wDAAwD;AACxE;AACA,gBAAgB,iFAAiF;AACjG,gBAAgB,iEAAiE;AACjF;AACA,gBAAgB,qEAAqE;AACrF,gBAAgB,2EAA2E;AAC3F,gBAAgB,qCAAqC;AACrD,gBAAgB,kFAAkF;AAClG,gBAAgB,wDAAwD;AACxE,gBAAgB,4GAA4G;AAC5H;AACA,gBAAgB,2EAA2E;AAC3F,gBAAgB,uDAAuD;AACvE,gBAAgB,uDAAuD;AACvE,gBAAgB,MAAM;AACtB;AACA,gBAAgB,eAAe;AAC/B,gBAAgB,KAAK;AACrB;AACA,gBAAgB,yCAAyC;AACzD,gBAAgB,sCAAsC;AACtD,gBAAgB,yCAAyC;AACzD,gBAAgB,yCAAyC;AACzD;AACA,gBAAgB,0CAA0C;AAC1D,gBAAgB,0CAA0C;AAC1D,gBAAgB,2CAA2C;AAC3D,gBAAgB,2CAA2C;AAC3D;AACA,gBAAgB,0BAA0B;AAC1C,gBAAgB,wCAAwC;AACxD,gBAAgB,wDAAwD;AACxE,gBAAgB,gBAAgB;AAChC,gBAAgB,sEAAsE;AACtF,gBAAgB,SAAS;AACzB,gBAAgB,kDAAkD;AAClE,gBAAgB,mDAAmD;AACnE,gBAAgB,kDAAkD;AAClE,gBAAgB,mDAAmD;AACnE,gBAAgB,yDAAyD;AACzE;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC,gBAAgB,4EAA4E;AAC5F,gBAAgB,yDAAyD;AACzE,gBAAgB,uHAAuH;AACvI,gBAAgB,sEAAsE;AACtF,gBAAgB,4FAA4F;AAC5G,gBAAgB,2EAA2E;AAC3F,gBAAgB,SAAS;AACzB,gBAAgB,8CAA8C;AAC9D,gBAAgB,+CAA+C;AAC/D;AACA,gBAAgB,gCAAgC;AAChD,gBAAgB,gHAAgH;AAChI;AACA,gBAAgB,wBAAwB;AACxC,gBAAgB,wBAAwB;AACxC;AACA,gBAAgB,6BAA6B;AAC7C,gBAAgB,+CAA+C;AAC/D,gBAAgB,qFAAqF;AACrG,gBAAgB,yDAAyD;AACzE,gBAAgB,iBAAiB;AACjC,gBAAgB,iCAAiC;AACjD,gBAAgB,iCAAiC;AACjD,gBAAgB,SAAS;AACzB;AACA,gBAAgB,sDAAsD;AACtE,gBAAgB,uDAAuD;AACvE;AACA,gBAAgB,oBAAoB;AACpC;AACA,gBAAgB,6BAA6B;AAC7C,gBAAgB,uHAAuH;AACvI,gBAAgB,wCAAwC;AACxD,gBAAgB,uDAAuD;AACvE,gBAAgB,yCAAyC;AACzD,gBAAgB,wDAAwD;AACxE,gBAAgB,2FAA2F;AAC3G,gBAAgB,iBAAiB;AACjC,gBAAgB,kCAAkC;AAClD,gBAAgB,SAAS;AACzB;AACA,gBAAgB,yFAAyF;AACzG,gBAAgB,yDAAyD;AACzE,gBAAgB,yDAAyD;AACzE,gBAAgB,2BAA2B;AAC3C,gBAAgB,2BAA2B;AAC3C;AACA,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzB;AACA,YAAY,IAAI,mBAAmB,EAAE,MAAM,IAAI,yCAAyC,CAAC;AACzF;AACA,YAAY,MAAM,IAAI,MAAM,CAAC;AAC7B;AACA,YAAY,OAAO,MAAM,CAAC;AAC1B,SAAS;AACT;AACA,QAAQ,iBAAiB,EAAE,SAAS,SAAS,EAAE,mBAAmB,EAAE;AACpE;AACA,YAAY,IAAI,MAAM,EAAE,sBAAsB,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AAC1E;AACA,YAAY,IAAI,mBAAmB,EAAE,MAAM,IAAI,8CAA8C,CAAC;AAC9F;AACA,YAAY,MAAM,IAAI,kBAAkB,CAAC;AACzC;AACA,YAAY,IAAI,mBAAmB,EAAE,MAAM,IAAI,4CAA4C,CAAC;AAC5F;AACA,YAAY,IAAI,SAAS,EAAE;AAC3B,gBAAgB,MAAM,IAAI;AAC1B,oBAAoB,oFAAoF;AACxG,oBAAoB,6BAA6B;AACjD,oBAAoB,gHAAgH;AACpI,oBAAoB,6DAA6D;AACjF,oBAAoB,qCAAqC;AACzD,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,aAAa,MAAM;AACnB,gBAAgB,MAAM,IAAI;AAC1B,oBAAoB,sFAAsF;AAC1G,oBAAoB,6BAA6B;AACjD,oBAAoB,gHAAgH;AACpI,oBAAoB,6DAA6D;AACjF,oBAAoB,qCAAqC;AACzD,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,aAAa;AACb;AACA,YAAY,MAAM,IAAI,KAAK,CAAC;AAC5B;AACA,YAAY,OAAO,MAAM,CAAC;AAC1B,SAAS;AACT,KAAK,CAAC;AACN;AACA,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE;AAC5B,QAAQ,MAAM,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC;AACvC,QAAQ,MAAM,YAAY,GAAG,IAAIA,OAAK,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;AACnF,QAAQ,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,YAAY,EAAE,SAAS,CAAC,WAAW,CAAC,CAAC;AACrE,QAAQ,MAAM,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;AAC9C,QAAQ,KAAK,IAAI,QAAQ,IAAI,SAAS,EAAE;AACxC,YAAY,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;AACxG,SAAS;AACT,QAAQ,MAAM,QAAQ,GAAG,IAAI,sBAAsB,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC,iBAAiB,CAAC,CAAC;AAC1G,QAAQ,IAAI,MAAM,CAAC,QAAQ,IAAI,UAAU,EAAE;AAC3C,YAAY,QAAQ,CAAC,QAAQ,GAAGA,OAAK,CAAC,gBAAgB,CAAC;AACvD,SAAS,MAAM;AACf,YAAY,QAAQ,CAAC,QAAQ,GAAGA,OAAK,CAAC,cAAc,CAAC;AACrD,SAAS;AACT,QAAQ,OAAO,QAAQ,CAAC;AACxB,KAAK;AACL;AACA,IAAI,MAAM,CAAC,oBAAoB,EAAE;AACjC;AACA,QAAQ,MAAM,2BAA2B,GAAG,CAAC,KAAK,KAAK;AACvD,YAAY,IAAI,KAAK,CAAC,WAAW,EAAE,OAAO,KAAK,CAAC,WAAW,CAAC;AAC5D,YAAY,MAAM,OAAO,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC;AAC/C,YAAY,MAAM,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC;AACjD,YAAY,IAAI,aAAa,EAAE;AAC/B,gBAAgB,MAAM,WAAW,GAAG,aAAa,CAAC,IAAI,CAAC;AACvD,gBAAgB,IAAI,WAAW,EAAE;AACjC,oBAAoB,MAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;AACxD,oBAAoB,MAAM,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC;AAC9D,oBAAoB,MAAM,gBAAgB,GAAG,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACzE,oBAAoB,IAAI,gBAAgB,IAAI,CAAC,EAAE;AAC/C,wBAAwB,OAAO,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AACrG,qBAAqB,MAAM;AAC3B,wBAAwB,OAAO,UAAU,CAAC;AAC1C,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS,CAAC;AACV;AACA,QAAQ,oBAAoB,GAAG,oBAAoB,IAAI,2BAA2B,CAAC;AACnF;AACA,QAAQ,MAAM,SAAS,GAAG,EAAE,CAAC;AAC7B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,EAAE,CAAC,EAAE,EAAE;AAChE,YAAY,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACvD,YAAY,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACrC,SAAS;AACT;AACA,QAAQ,IAAI,QAAQ,GAAG,QAAQ,CAAC;AAChC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,KAAKA,OAAK,CAAC,gBAAgB,EAAE;AAC/D,YAAY,QAAQ,GAAG,UAAU,CAAC;AAClC,SAAS;AACT;AACA,QAAQ,MAAM,IAAI,GAAG;AACrB,YAAY,WAAW,EAAE,IAAI,CAAC,SAAS;AACvC,YAAY,UAAU,EAAE,QAAQ;AAChC,YAAY,OAAO,EAAE;AACrB,gBAAgB,mBAAmB,EAAE,IAAI,CAAC,sBAAsB;AAChE,gBAAgB,aAAa,EAAE,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC;AAC/D,gBAAgB,WAAW,EAAE,SAAS;AACtC,aAAa;AACb,SAAS,CAAC;AACV;AACA,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL;;ACtaO,MAAM,eAAe,CAAC;AAC7B;AACA,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,yBAAyB,GAAG,GAAG,CAAC;AAC7C,QAAQ,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC;AACpC,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AAC3B,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACvB,QAAQ,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;AAC9B,QAAQ,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;AAC7B,QAAQ,IAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC;AACxC,KAAK;AACL;AACA,IAAI,MAAM,CAAC,SAAS,EAAE;AACtB,QAAQ,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AACvC,QAAQ,OAAO,CAAC,CAAC;AACjB,KAAK;AACL;AACA,IAAI,cAAc,CAAC,SAAS,EAAE;AAC9B,QAAQ,IAAI,CAAC,GAAG,IAAI,SAAS,CAAC;AAC9B,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,yBAAyB,EAAE,GAAG,CAAC,CAAC;AACnF,QAAQ,OAAO,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,yBAAyB;AACzD,iBAAiB,IAAI,CAAC,gBAAgB,IAAI,GAAG,KAAK,IAAI,CAAC,UAAU,IAAI,gBAAgB,CAAC,CAAC,CAAC;AACxF,KAAK;AACL;AACA,IAAI,eAAe,CAAC,KAAK,EAAE;AAC3B,QAAQ,IAAI,CAAC,SAAS,IAAI,KAAK,CAAC;AAChC,KAAK;AACL;AACA;;AC1BO,MAAM,yBAAyB,SAAS,eAAe,CAAC;AAC/D;AACA,IAAI,WAAW,GAAG;AAClB,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;AACjC,QAAQ,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;AACjC,KAAK;AACL;AACA;;ACRO,MAAM,uBAAuB,SAAS,yBAAyB,CAAC;AACvE;AACA,IAAI,WAAW,CAAC,YAAY,GAAG,GAAG,EAAE;AACpC,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACzC,KAAK;AACL;AACA,IAAI,MAAM,CAAC,SAAS,EAAE;AACtB,QAAQ,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;AAC5C,YAAY,MAAM,eAAe,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;AACzF,YAAY,IAAI,eAAe,IAAI,GAAG,EAAE;AACxC,gBAAgB,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AACrE,gBAAgB,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;AACvD,gBAAgB,OAAO,gBAAgB,CAAC;AACxC,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,CAAC,CAAC;AACjB,KAAK;AACL;AACA,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE;AAC5B,QAAQ,MAAM,OAAO,GAAG,IAAI,uBAAuB,EAAE,CAAC;AACtD,QAAQ,OAAO,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,IAAI,GAAG,CAAC;AAC1D,QAAQ,OAAO,OAAO,CAAC;AACvB,KAAK;AACL;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO;AACf,YAAY,cAAc,EAAE,IAAI,CAAC,YAAY;AAC7C,SAAS,CAAC;AACV,KAAK;AACL;;AC9BO,MAAM,WAAW,CAAC;AACzB;AACA,IAAI,OAAO,OAAO,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC;AAChD,IAAI,OAAO,OAAO,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC;AAChD,IAAI,OAAO,OAAO,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC;AAChD,IAAI,OAAO,OAAO,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC;AAChD,IAAI,OAAO,KAAK,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;AAC5C;AACA,IAAI,WAAW,CAAC,IAAI,EAAE;AACtB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,KAAK;AACL;AACA,IAAI,OAAO,SAAS,CAAC,IAAI,EAAE;AAC3B,QAAQ,IAAI,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC;AACzC,QAAQ,IAAI,IAAI,KAAKA,OAAK,CAAC,OAAO,EAAE;AACpC,YAAY,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC;AACzC,SAAS,MAAM,IAAI,IAAI,KAAKA,OAAK,CAAC,OAAO,EAAE;AAC3C,YAAY,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC;AACzC,SAAS,MAAM,IAAI,IAAI,KAAKA,OAAK,CAAC,OAAO,EAAE;AAC3C,YAAY,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC;AACzC,SAAS,MAAM,IAAI,IAAI,KAAKA,OAAK,CAAC,KAAK,EAAE;AACzC,YAAY,MAAM,GAAG,WAAW,CAAC,KAAK,CAAC;AACvC,SAAS;AACT,QAAQ,OAAO,MAAM,CAAC;AACtB,KAAK;AACL;AACA,IAAI,OAAO,iBAAiB,CAAC,KAAK,EAAE,IAAI,EAAE;AAC1C,QAAQ,QAAQ,IAAI;AACpB,YAAY,KAAKA,OAAK,CAAC,OAAO;AAC9B,gBAAgB,OAAO,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC5D,YAAY,KAAKA,OAAK,CAAC,OAAO;AAC9B,gBAAgB,OAAO,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC5D,YAAY,KAAKA,OAAK,CAAC,OAAO;AAC9B,gBAAgB,OAAO,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC5D,YAAY,KAAKA,OAAK,CAAC,KAAK;AAC5B,gBAAgB,OAAO,IAAIA,OAAK,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC1D,SAAS;AACT;AACA,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL;;ACxCO,MAAM,SAAS,CAAC;AACvB;AACA,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC/B,QAAQ,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AACxD,KAAK;AACL;AACA;;ACLO,MAAM,eAAe,SAAS,SAAS,CAAC;AAC/C;AACA,IAAI,WAAW,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,SAAS,EAAE;AAChF,QAAQ,KAAK,CAAC,OAAO,CAAC,CAAC;AACvB,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,QAAQ,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACzC,QAAQ,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AAC3C,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AACnC,KAAK;AACL;AACA,IAAI,QAAQ,CAAC,GAAG,EAAE;AAClB,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC;AAC/D,QAAQ,QAAQ,IAAI,CAAC,SAAS;AAC9B,YAAY,KAAK,WAAW,CAAC,OAAO;AACpC,gBAAgB,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;AAC/D,gBAAgB,IAAI,IAAI,CAAC,SAAS,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;AAC/D,YAAY,MAAM;AAClB,YAAY,KAAK,WAAW,CAAC,OAAO;AACpC,gBAAgB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,GAAG,CAAC;AAClE,wBAAwB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC,CAAC;AACpE,YAAY,MAAM;AAClB,YAAY,KAAK,WAAW,CAAC,OAAO;AACpC,gBAAgB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,GAAG,CAAC;AAClE,wBAAwB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,GAAG,CAAC;AAClE,wBAAwB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC,CAAC;AACpE,YAAY,MAAM;AAClB,YAAY,KAAK,WAAW,CAAC,OAAO;AACpC,gBAAgB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,GAAG,CAAC;AAClE,wBAAwB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,GAAG,CAAC;AAClE,wBAAwB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,GAAG,CAAC;AAClE,wBAAwB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC,CAAC;AACpE,YAAY,MAAM;AAClB,SAAS;AACT;AACA,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,SAAS,EAAE,CAAC;AAC5C,QAAQ,OAAO,GAAG,CAAC;AACnB,KAAK;AACL;AACA,IAAI,kBAAkB,CAAC,YAAY,EAAE,CAAC,EAAE;AACxC,QAAQ,OAAO,YAAY,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;AAClG,KAAK;AACL;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,MAAM,KAAK,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY;AAClG,0CAA0C,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAC9E,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL;AACA,IAAI,OAAO,gBAAgB,CAAC,KAAK,EAAE;AACnC,QAAQ,IAAI,KAAK,YAAYA,OAAK,CAAC,OAAO,IAAI,KAAK,YAAYA,OAAK,CAAC,OAAO;AAC5E,YAAY,KAAK,YAAYA,OAAK,CAAC,OAAO,IAAI,KAAK,YAAYA,OAAK,CAAC,KAAK,EAAE,OAAO,KAAK,CAAC,OAAO,EAAE,CAAC;AACnG,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL;AACA,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE;AAC5B,QAAQ,OAAO,IAAI,eAAe,CAAC,MAAM,CAAC,IAAI;AAC9C,mCAAmC,WAAW,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC;AAC3F,mCAAmC,WAAW,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC;AAC5F,mCAAmC,MAAM,CAAC,YAAY,IAAI,GAAG,EAAE,MAAM,CAAC,aAAa,IAAI,GAAG,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;AAC9G,KAAK;AACL;AACA,IAAI,MAAM,CAAC,aAAa,EAAE;AAC1B,QAAQ,MAAM,MAAM,GAAG;AACvB,YAAY,OAAO,EAAE,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC;AACjE,YAAY,QAAQ,EAAE,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC;AACnE,YAAY,cAAc,EAAE,IAAI,CAAC,YAAY;AAC7C,YAAY,eAAe,EAAE,IAAI,CAAC,aAAa;AAC/C,SAAS,CAAC;AACV,QAAQ,MAAM,IAAI,GAAG,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;AACvE,QAAQ,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,IAAI,EAAE;AACjD,YAAY,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;AAClC,SAAS;AACT,QAAQ,OAAO;AACf,YAAY,MAAM,EAAE,aAAa,CAAC,WAAW,CAAC,eAAe,CAAC;AAC9D,YAAY,QAAQ,EAAE,MAAM;AAC5B,SAAS,CAAC;AACV,KAAK;AACL;;AC/EO,MAAM,mBAAmB,SAAS,wBAAwB,CAAC;AAClE;AACA,IAAI,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,SAAS,EAAE;AACvE,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,QAAQ,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACzC,QAAQ,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AAC3C,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AACnC,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAChI,KAAK;AACL;AACA,IAAI,eAAe,CAAC,KAAK,EAAE;AAC3B,QAAQ,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;AACnD,KAAK;AACL;AACA,IAAI,OAAO,QAAQ,CAAC,cAAc,EAAE,MAAM,EAAE;AAC5C,QAAQ,OAAO,IAAI,mBAAmB,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;AACjI,KAAK;AACL;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO;AACf,YAAY,OAAO,EAAE,IAAI,CAAC,KAAK;AAC/B,YAAY,QAAQ,EAAE,IAAI,CAAC,MAAM;AACjC,YAAY,cAAc,EAAE,IAAI,CAAC,YAAY;AAC7C,YAAY,eAAe,EAAE,IAAI,CAAC,aAAa;AAC/C,YAAY,WAAW,EAAE,IAAI,CAAC,SAAS;AACvC,SAAS,CAAC;AACV,KAAK;AACL;;AC9BO,MAAM,mBAAmB,SAAS,wBAAwB,CAAC;AAClE;AACA,IAAI,WAAW,CAAC,SAAS,EAAE;AAC3B,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;AAC3C,KAAK;AACL;AACA,IAAI,eAAe,CAAC,KAAK,EAAE;AAC3B,QAAQ,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AACjE,KAAK;AACL;AACA,IAAI,OAAO,QAAQ,CAAC,cAAc,EAAE,MAAM,EAAE;AAC5C,QAAQ,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAClF,QAAQ,OAAO,IAAI,mBAAmB,CAAC,SAAS,CAAC,CAAC;AAClD,KAAK;AACL;AACA,IAAI,MAAM,CAAC,SAAS,EAAE;AACtB,QAAQ,OAAO;AACf,YAAY,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;AACzD,SAAS,CAAC;AACV,KAAK;AACL;;ACpBO,MAAM,0BAA0B,SAAS,wBAAwB,CAAC;AACzE;AACA,IAAI,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,SAAS,EAAE;AACvE,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,QAAQ,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACzC,QAAQ,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AAC3C,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AACnC,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAChI,KAAK;AACL;AACA,IAAI,eAAe,CAAC,KAAK,EAAE;AAC3B,QAAQ,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;AAC1D,KAAK;AACL;AACA,IAAI,OAAO,QAAQ,CAAC,cAAc,EAAE,MAAM,EAAE;AAC5C,QAAQ,OAAO,IAAI,0BAA0B,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;AACxI,KAAK;AACL;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO;AACf,YAAY,OAAO,EAAE,IAAI,CAAC,KAAK;AAC/B,YAAY,QAAQ,EAAE,IAAI,CAAC,MAAM;AACjC,YAAY,cAAc,EAAE,IAAI,CAAC,YAAY;AAC7C,YAAY,eAAe,EAAE,IAAI,CAAC,aAAa;AAC/C,YAAY,WAAW,EAAE,IAAI,CAAC,SAAS;AACvC,SAAS,CAAC;AACV,KAAK;AACL;;AC5BO,MAAM,sBAAsB,SAAS,wBAAwB,CAAC;AACrE;AACA,IAAI,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE;AAC/B,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,eAAe,GAAG,IAAI,eAAe,CAACA,OAAK,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AAClG,KAAK;AACL;AACA,IAAI,eAAe,CAAC,KAAK,EAAE;AAC3B,QAAQ,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AACtD,KAAK;AACL;AACA,IAAI,OAAO,QAAQ,CAAC,cAAc,EAAE,MAAM,EAAE;AAC5C,QAAQ,OAAO,IAAI,sBAAsB,CAAC,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;AACrF,0CAA0C,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AACxF,KAAK;AACL;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO;AACf,YAAY,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,EAAE;AACzD,YAAY,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,OAAO,EAAE;AAC3D,SAAS,CAAC;AACV,KAAK;AACL;;ACxBO,MAAM,eAAe,SAAS,wBAAwB,CAAC;AAC9D;AACA,IAAI,WAAW,CAAC,SAAS,EAAE;AAC3B,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;AAC3C,KAAK;AACL;AACA,IAAI,eAAe,CAAC,KAAK,EAAE;AAC3B,QAAQ,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC5C,QAAQ,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC3C,KAAK;AACL;AACA,IAAI,OAAO,QAAQ,CAAC,cAAc,EAAE,MAAM,EAAE;AAC5C,QAAQ,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAClF,QAAQ,OAAO,IAAI,eAAe,CAAC,SAAS,CAAC,CAAC;AAC9C,KAAK;AACL;AACA,IAAI,MAAM,CAAC,SAAS,EAAE;AACtB,QAAQ,OAAO;AACf,YAAY,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;AACzD,SAAS,CAAC;AACV,KAAK;AACL;;ACpBO,MAAM,yBAAyB,SAAS,wBAAwB,CAAC;AACxE;AACA,IAAI,WAAW,CAAC,cAAc,EAAE,eAAe,EAAE,UAAU,EAAE,WAAW,EAAE,kBAAkB,GAAG,IAAI,EAAE;AACrG,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,kBAAkB,GAAG,IAAI,eAAe,CAACA,OAAK,CAAC,OAAO,EAAE,cAAc,EAAE,eAAe,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AACtH,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,eAAe,CAAC,CAAC,EAAE,UAAU,EAAE,WAAW,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AAC/F,QAAQ,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;AACrD,KAAK;AACL;AACA,IAAI,eAAe,CAAC,KAAK,EAAE;AAC3B,QAAQ,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AACzD,QAAQ,IAAI,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;AAChE,QAAQ,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,CAAC;AACtE,KAAK;AACL;AACA,IAAI,OAAO,QAAQ,CAAC,cAAc,EAAE,MAAM,EAAE;AAC5C,QAAQ,OAAO,IAAI,yBAAyB,CAAC,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;AACxF,6CAA6C,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC;AACzF,6CAA6C,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;AACpF,KAAK;AACL;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO;AACf,YAAY,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,EAAE;AAC5D,YAAY,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,OAAO,EAAE;AAC9D,YAAY,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK;AACnD,YAAY,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM;AACrD,SAAS,CAAC;AACV,KAAK;AACL;;AC9BO,MAAM,mBAAmB,SAAS,wBAAwB,CAAC;AAClE;AACA,IAAI,WAAW,CAAC,iBAAiB,EAAE,OAAO,GAAG,KAAK,EAAE;AACpD,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;AACrD,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC/B,KAAK;AACL;AACA,IAAI,oBAAoB,CAAC,iBAAiB,EAAE;AAC5C,QAAQ,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;AACnD,KAAK;AACL;AACA,IAAI,eAAe,CAAC,KAAK,EAAE;AAC3B,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;AACpE,QAAQ,MAAM,CAAC,GAAG,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;AACrD,QAAQ,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACjC,QAAQ,MAAM,UAAU,GAAG,WAAW,CAAC,EAAE,CAAC,CAAC;AAC3C,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;AACxE,QAAQ,MAAM,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC;AACtD,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;AAClE,aAAa,eAAe,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;AAChD,QAAQ,eAAe,CAAC,CAAC,GAAG,QAAQ,CAAC,EAAE,CAAC;AACxC,QAAQ,eAAe,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;AAC3C,QAAQ,eAAe,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC;AAC5C,QAAQ,KAAK,CAAC,YAAY,GAAG,yBAAyB,CAAC,QAAQ,CAAC;AAChE,KAAK;AACL;AACA,IAAI,OAAO,QAAQ,CAAC,cAAc,EAAE,MAAM,EAAE;AAC5C,QAAQ,OAAO,IAAI,mBAAmB,CAAC,cAAc,CAAC,oBAAoB,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;AAC9F,KAAK;AACL;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO;AACf,YAAY,SAAS,EAAE,IAAI,CAAC,OAAO;AACnC,SAAS,CAAC;AACV,KAAK;AACL;;ACrCO,MAAM,gBAAgB,SAAS,qBAAqB,CAAC;AAC5D;AACA,IAAI,WAAW,CAAC,iBAAiB,EAAE,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,OAAO,GAAG,KAAK,EAAE;AACzE,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;AACnD,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC/B,KAAK;AACL;AACA,GAAG,WAAW,CAAC,KAAK,EAAE,SAAS,EAAE;AACjC,QAAQ,MAAM,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC;AACtD,QAAQ,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;AACrF,QAAQ,MAAM,OAAO,GAAG,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;AAC/C,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;AAC1B,YAAY,eAAe,CAAC,CAAC,IAAI,OAAO,CAAC;AACzC,YAAY,IAAI,eAAe,CAAC,CAAC,GAAG,cAAc,CAAC,KAAK,EAAE;AAC1D,gBAAgB,eAAe,CAAC,CAAC,GAAG,cAAc,CAAC,KAAK,GAAG,cAAc,CAAC,MAAM,CAAC;AACjF,gBAAgB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,KAAK,CAAC;AAC7C,aAAa;AACb,SAAS,MAAM;AACf,YAAY,eAAe,CAAC,CAAC,IAAI,OAAO,CAAC;AACzC,YAAY,IAAI,eAAe,CAAC,CAAC,IAAI,cAAc,CAAC,KAAK,GAAG,cAAc,CAAC,MAAM,EAAE;AACnF,gBAAgB,eAAe,CAAC,CAAC,GAAG,cAAc,CAAC,KAAK,CAAC;AACzD,gBAAgB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,KAAK,CAAC;AAC7C,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL;AACA,IAAI,OAAO,QAAQ,CAAC,cAAc,EAAE,MAAM,EAAE;AAC5C,QAAQ,OAAO,IAAI,gBAAgB,CAAC,cAAc,CAAC,oBAAoB,EAAE,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;AACtH,KAAK;AACL;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO;AACf,YAAY,OAAO,EAAE,IAAI,CAAC,KAAK;AAC/B,YAAY,MAAM,EAAE,IAAI,CAAC,IAAI;AAC7B,YAAY,SAAS,EAAE,IAAI,CAAC,OAAO;AACnC,SAAS,CAAC;AACV,KAAK;AACL;AACA;;ACxCO,MAAM,eAAe,CAAC;AAC7B;AACA,IAAI,WAAW,CAAC,WAAW,EAAE,YAAY,EAAE;AAC3C,QAAQ,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AAC3B,QAAQ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AAC1B,QAAQ,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;AAChE,QAAQ,IAAI,YAAY,EAAE;AAC1B,YAAY,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AAC7C,SAAS,MAAM;AACf,YAAY,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAClF,SAAS;AACT,KAAK;AACL;AACA,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG;AAC1B,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC;AACtB,QAAQ,OAAO,KAAK,GAAG,IAAI,CAAC,eAAe,EAAE,EAAE;AAC/C,YAAY,MAAM;AAClB,gBAAgB,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;AAC/C,gBAAgB,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;AAC7C,aAAa,CAAC;AACd,YAAY,KAAK,EAAE,CAAC;AACpB,SAAS;AACT,KAAK;AACL;AACA,IAAI,eAAe,GAAG;AACtB,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;AACpC,KAAK;AACL;AACA,IAAI,UAAU,CAAC,KAAK,EAAE;AACtB,QAAQ,IAAI,KAAK,IAAI,IAAI,CAAC,eAAe,EAAE,EAAE;AAC7C,YAAY,MAAM,IAAI,KAAK,CAAC,4DAA4D,CAAC,CAAC;AAC1F,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACpC,KAAK;AACL;AACA,IAAI,SAAS,CAAC,KAAK,EAAE;AACrB,QAAQ,IAAI,KAAK,IAAI,IAAI,CAAC,eAAe,EAAE,EAAE;AAC7C,YAAY,MAAM,IAAI,KAAK,CAAC,2DAA2D,CAAC,CAAC;AACzF,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACnC,KAAK;AACL;AACA,IAAI,UAAU,CAAC,OAAO,EAAE,MAAM,EAAE;AAChC,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACpC,QAAQ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAClC,KAAK;AACL;AACA,IAAI,sBAAsB,CAAC,CAAC,EAAE,GAAG,EAAE;AACnC,QAAQ,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;AACtE,KAAK;AACL;AACA,IAAI,wBAAwB,GAAG,WAAW;AAC1C;AACA,QAAQ,MAAM,OAAO,GAAG;AACxB,YAAY,YAAY,EAAE,CAAC;AAC3B,YAAY,YAAY,EAAE,CAAC;AAC3B,YAAY,QAAQ,EAAE,GAAG;AACzB,SAAS,CAAC;AACV,QAAQ,MAAM,MAAM,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AAC3C,QAAQ,MAAM,MAAM,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AAC3C,QAAQ,MAAM,MAAM,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AAC3C,QAAQ,MAAM,MAAM,GAAG,IAAIA,OAAK,CAAC,KAAK,EAAE,CAAC;AACzC;AACA,QAAQ,MAAM,0BAA0B,GAAG,CAAC,WAAW,KAAK;AAC5D,YAAY,OAAO,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,KAAK;AACvD,gBAAgB,eAAe,CAAC,+BAA+B,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;AAC1F,gBAAgB,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAC9F,gBAAgB,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,cAAc,EAAE,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAC/G;AACA,aAAa,CAAC;AACd,SAAS,CAAC;AACV;AACA,QAAQ,OAAO,SAAS,MAAM,EAAE;AAChC,YAAY,QAAQ,MAAM;AAC1B,gBAAgB,KAAK,WAAW,CAAC,OAAO;AACxC,oBAAoB,OAAO,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,KAAK;AAC1D,wBAAwB,eAAe,CAAC,+BAA+B,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;AAClG,wBAAwB,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,MAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC;AACpF,gCAAgC,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AAC9E,qBAAqB,CAAC;AACtB,gBAAgB,KAAK,WAAW,CAAC,OAAO;AACxC,oBAAoB,OAAO,0BAA0B,CAAC,MAAM,CAAC,CAAC;AAC9D,gBAAgB,KAAK,WAAW,CAAC,OAAO;AACxC,oBAAoB,OAAO,0BAA0B,CAAC,MAAM,CAAC,CAAC;AAC9D,gBAAgB,KAAK,WAAW,CAAC,OAAO;AACxC,oBAAoB,OAAO,0BAA0B,CAAC,MAAM,CAAC,CAAC;AAC9D,gBAAgB,KAAK,WAAW,CAAC,KAAK;AACtC,oBAAoB,OAAO,0BAA0B,CAAC,MAAM,CAAC,CAAC;AAC9D,aAAa;AACb,SAAS,CAAC;AACV;AACA,KAAK,EAAE,CAAC;AACR;AACA,IAAI,OAAO,+BAA+B,CAAC,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE;AAChE,QAAQ,IAAI,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC;AACzC,QAAQ,IAAI,WAAW,KAAK,CAAC,EAAE;AAC/B,YAAY,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;AACpC,YAAY,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;AACpC,YAAY,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC;AAClC,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,IAAI,MAAM,GAAG,GAAG,CAAC;AACzB,QAAQ,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC;AAC5B,QAAQ,IAAI,UAAU,GAAG,CAAC,CAAC;AAC3B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;AAC9C,YAAY,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AAChC,YAAY,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM;AAClC,YAAY,UAAU,EAAE,CAAC;AACzB,YAAY,UAAU,EAAE,CAAC;AACzB,SAAS;AACT,QAAQ,OAAO,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,EAAE,WAAW,GAAG,CAAC,CAAC,CAAC;AACzE,QAAQ,OAAO,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,EAAE,WAAW,GAAG,CAAC,CAAC,CAAC;AACzE,QAAQ,IAAI,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAC9C,QAAQ,IAAI,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAC9C,QAAQ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,WAAW,KAAK,WAAW,GAAG,WAAW,CAAC,CAAC;AACzE,KAAK;AACL;AACA;;ACrHO,MAAM,oBAAoB,SAAS,qBAAqB,CAAC;AAChE;AACA,IAAI,WAAW,CAAC,WAAW,EAAE,sBAAsB,GAAG,KAAK,EAAE;AAC7D,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;AAC7D,QAAQ,IAAI,CAAC,qBAAqB,GAAG,IAAI,eAAe,CAAC,WAAW,CAAC,CAAC;AACtE,KAAK;AACL;AACA,IAAI,UAAU,CAAC,OAAO,EAAE,MAAM,EAAE;AAChC,QAAQ,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AAC/D,KAAK;AACL;AACA,IAAI,WAAW,CAAC,kBAAkB,EAAE;AACpC,QAAQ,KAAK,IAAI,IAAI,IAAI,kBAAkB,EAAE;AAC7C,YAAY,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,SAAS;AACT,KAAK;AACL;AACA,IAAI,wCAAwC,CAAC,YAAY,EAAE,4BAA4B,EAAE;AACzF,QAAQ,KAAK,IAAI,IAAI,IAAI,4BAA4B,EAAE;AACvD,YAAY,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACtC,YAAY,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,IAAI,YAAY,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACtF,SAAS;AACT,KAAK;AACL;AACA,IAAI,oBAAoB,CAAC,KAAK,EAAE,GAAG,EAAE;AACrC,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC;AAClB,QAAQ,QAAQ,KAAK,CAAC,YAAY;AAClC,YAAY,KAAK,yBAAyB,CAAC,IAAI;AAC/C,YAAY;AACZ,gBAAgB,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;AAC9C,gBAAgB,IAAI,QAAQ,IAAI,GAAG,EAAE;AACrC,oBAAoB,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC;AACnD,iBAAiB,MAAM;AACvB,oBAAoB,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC;AAClC,iBAAiB;AACjB,aAAa;AACb,YAAY,MAAM;AAClB,YAAY,KAAK,yBAAyB,CAAC,QAAQ;AACnD,gBAAgB,CAAC,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;AACtE,YAAY,MAAM;AAClB,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AACzE,KAAK;AACL;AACA;;AC/CO,MAAM,2BAA2B,SAAS,oBAAoB,CAAC;AACtE;AACA,IAAI,WAAW,CAAC,sBAAsB,GAAG,KAAK,EAAE;AAChD,QAAQ,KAAK,CAAC,CAAC,EAAE,sBAAsB,CAAC,CAAC;AACzC,KAAK;AACL;AACA,IAAI,yBAAyB,CAAC,4BAA4B,EAAE;AAC5D,QAAQ,KAAK,CAAC,WAAW,CAAC,4BAA4B,CAAC,CAAC;AACxD,KAAK;AACL;AACA,IAAI,WAAW,CAAC,KAAK,EAAE;AACvB,QAAQ,IAAI,IAAI,CAAC,sBAAsB,EAAE;AACzC,YAAY,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AAC7F,SAAS,MAAM;AACf,YAAY,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AACxE,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL;AACA;AACA,IAAI,OAAO,QAAQ,CAAC,cAAc,EAAE,MAAM,EAAE;AAC5C,QAAQ,OAAO,IAAI,2BAA2B,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;AAC9E,KAAK;AACL;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,MAAM,MAAM,GAAG;AACvB,YAAY,wBAAwB,EAAE,IAAI,CAAC,sBAAsB;AACjE,SAAS,CAAC;AACV,QAAQ,MAAM,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,KAAK;AAC1E,YAAY,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;AACrD,SAAS,CAAC,CAAC;AACX,QAAQ,OAAO;AACf,YAAY,QAAQ,EAAE,MAAM;AAC5B,YAAY,UAAU,EAAE,QAAQ;AAChC,SAAS,CAAC;AACV,KAAK;AACL;AACA;;ACpCO,MAAM,wBAAwB,SAAS,oBAAoB,CAAC;AACnE;AACA,IAAI,WAAW,CAAC,sBAAsB,GAAG,KAAK,EAAE;AAChD,QAAQ,KAAK,CAACA,OAAK,CAAC,OAAO,EAAE,sBAAsB,CAAC,CAAC;AACrD,KAAK;AACL;AACA,IAAI,yBAAyB,CAAC,4BAA4B,EAAE;AAC5D,QAAQ,KAAK,CAAC,wCAAwC,CAACA,OAAK,CAAC,OAAO,EAAE,4BAA4B,CAAC,CAAC;AACpG,KAAK;AACL;AACA,IAAI,WAAW,GAAG,WAAW;AAC7B;AACA,QAAQ,MAAM,QAAQ,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AAC7C;AACA,QAAQ,OAAO,SAAS,KAAK,EAAE;AAC/B,YAAY,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AACvD,YAAY,IAAI,IAAI,CAAC,sBAAsB,EAAE;AAC7C,gBAAgB,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC;AAC/D,+BAA+B,KAAK,CAAC,WAAW,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AACjE,aAAa,MAAM;AACnB,gBAAgB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1C,aAAa;AACb,YAAY,OAAO,IAAI,CAAC;AACxB,SAAS,CAAC;AACV;AACA,KAAK,EAAE,CAAC;AACR;AACA,IAAI,OAAO,QAAQ,CAAC,cAAc,EAAE,MAAM,EAAE;AAC5C,QAAQ,OAAO,IAAI,wBAAwB,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;AAC3E,KAAK;AACL;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,MAAM,MAAM,GAAG;AACvB,YAAY,wBAAwB,EAAE,IAAI,CAAC,sBAAsB;AACjE,SAAS,CAAC;AACV,QAAQ,MAAM,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,KAAK;AAC1E,YAAY,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;AAC/D,SAAS,CAAC,CAAC;AACX,QAAQ,OAAO;AACf,YAAY,QAAQ,EAAE,MAAM;AAC5B,YAAY,UAAU,EAAE,QAAQ;AAChC,SAAS,CAAC;AACV,KAAK;AACL;AACA;;AC5CO,MAAM,yBAAyB,SAAS,oBAAoB,CAAC;AACpE;AACA,IAAI,WAAW,CAAC,sBAAsB,GAAG,KAAK,EAAE;AAChD,QAAQ,KAAK,CAACA,OAAK,CAAC,KAAK,EAAE,sBAAsB,CAAC,CAAC;AACnD,KAAK;AACL;AACA,IAAI,yBAAyB,CAAC,4BAA4B,EAAE;AAC5D,QAAQ,KAAK,CAAC,wCAAwC,CAACA,OAAK,CAAC,KAAK,EAAE,4BAA4B,CAAC,CAAC;AAClG,KAAK;AACL;AACA,IAAI,WAAW,GAAG,WAAW;AAC7B;AACA,QAAQ,MAAM,SAAS,GAAG,IAAIA,OAAK,CAAC,KAAK,EAAE,CAAC;AAC5C;AACA,QAAQ,OAAO,SAAS,KAAK,EAAE;AAC/B,YAAY,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;AACxD,YAAY,IAAI,IAAI,CAAC,sBAAsB,EAAE;AAC7C,gBAAgB,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;AACrE,mCAAmC,KAAK,CAAC,YAAY,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;AACrE,mCAAmC,KAAK,CAAC,YAAY,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AACvE,aAAa,MAAM;AACnB,gBAAgB,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC5C,aAAa;AACb,YAAY,OAAO,IAAI,CAAC;AACxB,SAAS,CAAC;AACV;AACA,KAAK,EAAE,CAAC;AACR;AACA,IAAI,OAAO,QAAQ,CAAC,cAAc,EAAE,MAAM,EAAE;AAC5C,QAAQ,OAAO,IAAI,yBAAyB,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;AAC5E,KAAK;AACL;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,MAAM,MAAM,GAAG;AACvB,YAAY,wBAAwB,EAAE,IAAI,CAAC,sBAAsB;AACjE,SAAS,CAAC;AACV,QAAQ,MAAM,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,KAAK;AAC1E,YAAY,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;AAC/D,SAAS,CAAC,CAAC;AACX,QAAQ,OAAO;AACf,YAAY,QAAQ,EAAE,MAAM;AAC5B,YAAY,UAAU,EAAE,QAAQ;AAChC,SAAS,CAAC;AACV,KAAK;AACL;;AC7CO,MAAM,oBAAoB,SAAS,qBAAqB,CAAC;AAChE;AACA,IAAI,WAAW,CAAC,SAAS,EAAE;AAC3B,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;AAC3C,KAAK;AACL;AACA,IAAI,yBAAyB,CAAC,4BAA4B,EAAE;AAC5D,QAAQ,KAAK,CAAC,wCAAwC,CAAC,KAAK,CAAC,OAAO,EAAE,4BAA4B,CAAC,CAAC;AACpG,KAAK;AACL;AACA,IAAI,WAAW,CAAC,KAAK,EAAE;AACvB,QAAQ,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AACpD,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL;AACA,IAAI,OAAO,QAAQ,CAAC,cAAc,EAAE,MAAM,EAAE;AAC5C,QAAQ,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAClF,QAAQ,OAAO,IAAI,oBAAoB,CAAC,SAAS,CAAC,CAAC;AACnD,KAAK;AACL;AACA,IAAI,MAAM,CAAC,SAAS,EAAE;AACtB,QAAQ,OAAO;AACf,YAAY,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;AACzD,SAAS,CAAC;AACV,KAAK;AACL;;ACzBO,MAAM,qBAAqB,SAAS,SAAS,CAAC;AACrD;AACA,IAAI,WAAW,CAAC,UAAU,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,YAAY;AACvF,gBAAgB,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE;AACnE,QAAQ,KAAK,CAACA,OAAK,CAAC,OAAO,CAAC,CAAC;AAC7B,QAAQ,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AACrC,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AACvC,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACjC,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AACnC,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AACvC,QAAQ,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACzC;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC/B,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC/B,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC/B;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7D,KAAK;AACL;AACA,IAAI,QAAQ,CAAC,GAAG,EAAE;AAClB,QAAQ,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACvC,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;AACzE,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;AACnE,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACvC,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACvC,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACnC,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACnC;AACA,QAAQ,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;AACtC,QAAQ,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AACjC,QAAQ,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AACzC,QAAQ,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC7B;AACA,QAAQ,GAAG,CAAC,SAAS,EAAE,CAAC;AACxB;AACA,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;AAC5E,QAAQ,GAAG,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;AACnC;AACA,QAAQ,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC;AAC7B,QAAQ,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC;AAC7B,QAAQ,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC;AAC7B;AACA,QAAQ,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC;AAC9B,QAAQ,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC;AAC9B,QAAQ,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,MAAM,KAAK,GAAG,IAAI,qBAAqB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS;AAChH,gDAAgD,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM;AAC7G,gDAAgD,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AACvG,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL;AACA,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE;AAC5B,QAAQ,OAAO,IAAI,qBAAqB,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,SAAS;AACjH,yCAAyC,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM;AAC9G,yCAAyC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;AACxG,KAAK;AACL;AACA,IAAI,MAAM,CAAC,aAAa,EAAE;AAC1B,QAAQ,OAAO;AACf,YAAY,MAAM,EAAE,aAAa,CAAC,WAAW,CAAC,qBAAqB,CAAC;AACpE,YAAY,QAAQ,EAAE;AACtB,gBAAgB,YAAY,EAAE,IAAI,CAAC,UAAU;AAC7C,gBAAgB,aAAa,EAAE,IAAI,CAAC,WAAW;AAC/C,gBAAgB,UAAU,EAAE,IAAI,CAAC,QAAQ;AACzC,gBAAgB,WAAW,EAAE,IAAI,CAAC,SAAS;AAC3C,gBAAgB,aAAa,EAAE,IAAI,CAAC,WAAW;AAC/C,gBAAgB,cAAc,EAAE,IAAI,CAAC,YAAY;AACjD,gBAAgB,QAAQ,EAAE,IAAI,CAAC,MAAM;AACrC,gBAAgB,QAAQ,EAAE,IAAI,CAAC,MAAM;AACrC,gBAAgB,QAAQ,EAAE,IAAI,CAAC,MAAM;AACrC,gBAAgB,SAAS,EAAE,IAAI,CAAC,OAAO;AACvC,gBAAgB,SAAS,EAAE,IAAI,CAAC,OAAO;AACvC,gBAAgB,SAAS,EAAE,IAAI,CAAC,OAAO;AACvC,aAAa;AACb,SAAS,CAAC;AACV,KAAK;AACL;AACA;;ACvFO,MAAM,SAAS,CAAC;AACvB;AACA,IAAI,WAAW,GAAG;AAClB,KAAK;AACL;AACA;;ACDO,MAAM,YAAY,SAAS,SAAS,CAAC;AAC5C;AACA,IAAI,WAAW,CAAC,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,GAAG,SAAS,EAAE;AAC/F,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAC1B,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAC1B,QAAQ,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;AACvD,QAAQ,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,cAAc,CAAC;AAC5D,QAAQ,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,cAAc,CAAC;AAC3D,QAAQ,IAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC;AACzC,QAAQ,IAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC;AACzC,QAAQ,IAAI,CAAC,oBAAoB,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AACxD,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAIA,OAAK,CAAC,OAAO,EAAE,CAAC;AACpD,QAAQ,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;AAC7B,QAAQ,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;AAC/B;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;AACrF,KAAK;AACL;AACA,IAAI,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,GAAG,SAAS,EAAE;AACxF,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAIA,OAAK,CAAC,QAAQ,EAAE,CAAC;AAC1C,QAAQ,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/B;AACA,QAAQ,KAAK,GAAG,KAAK,IAAI,IAAIA,OAAK,CAAC,KAAK,EAAE,CAAC;AAC3C,QAAQ,QAAQ,GAAG,QAAQ,IAAI,CAAC,CAAC;AACjC,QAAQ,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,SAAS,EAAE,KAAK,GAAG,GAAG,CAAC;AAC7D,QAAQ,MAAM,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC;AACzC;AACA,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAIA,OAAK,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7D,QAAQ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrC,QAAQ,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACvC,QAAQ,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;AACjC,QAAQ,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,cAAc,CAAC;AAC/C,QAAQ,IAAI,cAAc,EAAE;AAC5B,YAAY,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,OAAO,IAAI,GAAG,CAAC;AACrE,YAAY,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,OAAO,IAAI,GAAG,CAAC;AACtE,YAAY,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,UAAU,IAAI,GAAG,CAAC;AACtE,YAAY,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,OAAO,CAAC,SAAS,IAAI,GAAG,CAAC;AACpE,YAAY,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,MAAM,CAAC;AAC5D,YAAY,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC,UAAU,IAAI,CAAC,CAAC;AAC/D,SAAS;AACT;AACA,QAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACnC,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AACnC,QAAQ,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AAC3C;AACA,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;AAC1B,KAAK;AACL;AACA,IAAI,QAAQ,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;AAC1B,KAAK;AACL;AACA,IAAI,YAAY,CAAC,SAAS,EAAE;AAC5B,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AACnC,KAAK;AACL;AACA,IAAI,MAAM,CAAC,IAAI,EAAE;AACjB;AACA,QAAQ,MAAM,oCAAoC,GAAG,IAAI,GAAG,IAAI,CAAC,wBAAwB,CAAC;AAC1F,QAAQ,MAAM,kCAAkC,GAAG,GAAG,CAAC;AACvD,QAAQ,MAAM,8BAA8B,GAAG,GAAG,GAAG,kCAAkC,CAAC;AACxF,QAAQ,MAAM,mCAAmC,GAAG,IAAI,CAAC,aAAa,CAAC;AACvE,QAAQ,MAAM,8BAA8B,GAAG,IAAI,CAAC;AACpD,QAAQ,MAAM,8BAA8B,GAAG,GAAG,CAAC;AACnD;AACA,QAAQ,IAAI,oCAAoC,GAAG,8BAA8B,EAAE;AACnF,YAAY,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;AACjD;AACA,YAAY,MAAM,aAAa,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,IAAI,GAAG;AAC7D,mCAAmC,mCAAmC,GAAG,8BAA8B,CAAC;AACxG;AACA,YAAY,IAAI,iBAAiB,GAAG,GAAG,GAAG,aAAa,CAAC;AACxD,YAAY,MAAM,IAAI,IAAI,iBAAiB,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC;AAC1E,YAAY,iBAAiB,GAAG,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;AAClE;AACA,YAAY,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;AACpE,YAAY,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC,KAAK,CAAC,iBAAiB;AACtE,qDAAqD,8BAA8B,EAAE,8BAA8B,CAAC,CAAC;AACrH;AACA,SAAS,MAAM;AACf,YAAY,MAAM,wBAAwB,GAAG,oCAAoC,GAAG,8BAA8B,CAAC;AACnH,YAAY,MAAM,iBAAiB,GAAG,CAAC,GAAG,GAAG,wBAAwB,IAAI,IAAI,CAAC,qBAAqB;AACnG,sCAAsC,wBAAwB,GAAG,IAAI,CAAC,qBAAqB,CAAC;AAC5F,YAAY,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC;AACtE,SAAS;AACT;AACA,QAAQ,MAAM,mCAAmC,GAAG,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC;AACxF,QAAQ,MAAM,iCAAiC,GAAG,IAAI,CAAC;AACvD,QAAQ,MAAM,6BAA6B,GAAG,GAAG,GAAG,iCAAiC,CAAC;AACtF;AACA,QAAQ,IAAI,mCAAmC,GAAG,6BAA6B,EAAE;AACjF,YAAY,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;AAChD;AACA,YAAY,MAAM,SAAS,GAAG,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC;AACzD,YAAY,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;AACrG,YAAY,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AAC5D;AACA,YAAY,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;AACjE,YAAY,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;AACtD;AACA,YAAY,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AAC5D;AACA,YAAY,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AAClE,YAAY,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AACvC,SAAS;AACT,KAAK;AACL;;AC/GO,MAAM,aAAa,CAAC;AAC3B;AACA,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,SAAS,GAAG;AACzB,YAAY,SAAS,EAAE,EAAE;AACzB,SAAS,CAAC;AACV,QAAQ,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;AAChC,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AAC3B,KAAK;AACL;AACA,IAAI,OAAO,CAAC,QAAQ,EAAE,IAAI,EAAE;AAC5B,QAAQ,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC3D,KAAK;AACL;AACA,IAAI,kBAAkB,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE;AAClD,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;AACxC,YAAY,MAAM,IAAI,KAAK,CAAC,iEAAiE,CAAC,CAAC;AAC/F,SAAS;AACT,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE;AACjD,YAAY,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAC;AAC9F,SAAS;AACT;AACA,QAAQ,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC,EAAE;AACjE,YAAY,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;AACvD,SAAS;AACT,KAAK;AACL;AACA,IAAI,YAAY,CAAC,SAAS,EAAE,eAAe,EAAE;AAC7C,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;AACvC,YAAY,MAAM,IAAI,KAAK,CAAC,2DAA2D,CAAC,CAAC;AACzF,SAAS;AACT,QAAQ,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,eAAe,CAAC;AACpD,QAAQ,KAAK,MAAM,QAAQ,IAAI,eAAe,EAAE;AAChD,YAAY,IAAI,CAAC,eAAe,CAAC,cAAc,IAAI,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;AAC7F,gBAAgB,MAAM,IAAI,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC;AACvD,gBAAgB,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;AACpE,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,IAAI,mBAAmB,CAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE;AACnD,QAAQ,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;AACxC,YAAY,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;AAC5C,YAAY,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC;AAC3C,YAAY,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG;AACzC,gBAAgB,WAAW,EAAE,SAAS;AACtC,gBAAgB,UAAU,EAAE,QAAQ;AACpC,aAAa,CAAC;AACd,SAAS;AACT,KAAK;AACL;AACA,IAAI,OAAO,CAAC,SAAS,EAAE,QAAQ,EAAE;AACjC,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;AACxC,YAAY,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;AACpF,SAAS;AACT,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE;AAClD,YAAY,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;AACnF,SAAS;AACT;AACA,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,CAAC;AACnD,KAAK;AACL;AACA,IAAI,YAAY,CAAC,IAAI,EAAE;AACvB,QAAQ,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACzD,KAAK;AACL;AACA,IAAI,WAAW,CAAC,IAAI,EAAE;AACtB,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AAClD,QAAQ,IAAI,SAAS,EAAE;AACvB,YAAY,OAAO,CAAC,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;AAClE,SAAS,MAAM;AACf,YAAY,OAAO,SAAS,CAAC;AAC7B,SAAS;AACT,KAAK;AACL;AACA,IAAI,yBAAyB,CAAC,OAAO,EAAE;AACvC,QAAQ,MAAM,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC9C,QAAQ,MAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AACxC,QAAQ,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAChC,QAAQ,MAAM,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC9C,QAAQ,OAAO;AACf,YAAY,WAAW,EAAE,SAAS;AAClC,YAAY,UAAU,EAAE,QAAQ;AAChC,SAAS,CAAC;AACV,KAAK;AACL;AACA,IAAI,eAAe,CAAC,OAAO,EAAE;AAC7B,QAAQ,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,GAAG,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC;AAC9E,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AACjD,KAAK;AACL;AACA;;;;"}